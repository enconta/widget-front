'use strict';

const paths = require('../config/paths');
const spawn = require('react-dev-utils/crossSpawn');
const yargsParser = require('yargs-parser');
const resolveBin = require('./utils/resolveBin');

let args = process.argv.slice(3);
const parsedArgs = yargsParser(args);

const config = [
  '--config',
  `${paths.ownPath}/config/eslintrc.js`,
  '--no-eslintrc',
];
const ignore = ['--ignore-path', `${paths.ownPath}/config/eslintignore`];
const cache = args.includes('--no-cache') ? [] : ['--cache'];
const fix = args.includes('--fix') ? [] : ['--fix'];
const filesGiven = parsedArgs._.length > 2;

const filesToApply = filesGiven
  ? []
  : [`${paths.appSrc}/**/*.+(js|jsx|less|css|md)`];

if (filesGiven) {
  // we need to take all the flag-less arguments (the files that should be linted)
  // and filter out the ones that aren't js files. Otherwise json or css files
  // may be passed through
  args = args.filter(a => !parsedArgs._.includes(a) || a.endsWith('.js'));
}

const result = spawn.sync(
  resolveBin('eslint'),
  [...config, ...ignore, ...cache, ...fix, ...args, ...filesToApply],
  { stdio: 'inherit' }
);

process.exit(result.status);
