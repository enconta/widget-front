{"ast":null,"code":"import _objectSpread from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/editClient/synchronization/utils/index.js\";\nimport React from 'react';\nimport { encryptData, checkFeatureFlags, handleURL, handleModals } from 'utils';\nimport AppSignal from 'appsignal';\nimport SessionActions from 'actions/session';\nimport SessionStore from 'stores/session';\nimport BanksSynchronizationActions from 'actions/smartsync';\nimport NotificationsActions from 'actions/notifications';\nimport { SYNCHRONIZATION_BANK_LIST } from 'shared/catalogs';\nimport Modal from 'shared/modal';\nimport Button from 'shared/button';\nimport SelectField from 'shared/selectField';\nexport var addBank = function addBank(_ref) {\n  var username = _ref.username,\n      institution = _ref.institution,\n      password = _ref.password,\n      token = _ref.token;\n  return {\n    bank_data: {\n      user: encryptData(username),\n      bank: encryptData(institution),\n      password: encryptData(password),\n      token: encryptData(token)\n    }\n  };\n};\nexport var getLogo = function getLogo(institution) {\n  var alt = '';\n  var src = '';\n\n  switch (institution) {\n    case 'american_express':\n      alt = 'American Express';\n      src = '/img/american_express.png';\n      break;\n\n    case 'banamex':\n      alt = 'Banamex';\n      src = '/img/citibanamex-logo.png';\n      break;\n\n    case 'hsbc':\n      alt = 'HSBC';\n      src = '/img/hsbc-logo.png';\n      break;\n\n    case 'santander':\n      alt = 'Santander';\n      src = '/img/santander-logo.png';\n      break;\n\n    case 'scotiabank':\n      alt = 'Scotiabank';\n      src = '/img/scotiabank-logo.png';\n      break;\n\n    case 'bancomer':\n      alt = 'Bancomer';\n      src = '/img/bancomer.png';\n      break;\n  }\n\n  return {\n    alt: alt,\n    src: src\n  };\n};\nexport var getImageModal = function getImageModal(institution) {\n  var alt = '';\n  var src = '';\n\n  switch (institution) {\n    case 'american_express':\n      alt = 'American Express';\n      src = '/img/amex-modal.png';\n      break;\n\n    case 'banamex':\n      alt = 'Banamex';\n      src = '/img/citibanamex-modal.jpeg';\n      break;\n\n    case 'hsbc':\n      alt = 'HSBC';\n      src = '/img/hsbc-modal.png';\n      break;\n\n    case 'santander':\n      alt = 'Santander';\n      src = '/img/santander-modal.png';\n      break;\n\n    case 'scotiabank':\n      alt = 'Scotiabank';\n      src = '/img/scotiabank-modal.png';\n      break;\n  }\n\n  return {\n    alt: alt,\n    src: src\n  };\n};\nexport var checkFeatureFlag = function checkFeatureFlag() {\n  SessionActions.setFeatures().then(function () {\n    var features = SessionStore.getFeatures();\n    checkFeatureFlags(features, '/cuentas-de-pago', 'synchronization');\n  });\n};\nexport var saveSelectedAccount = function saveSelectedAccount(accounts, bank, component, fromUrl, toUrl) {\n  var request = {\n    bank_accounts: {\n      accounts: accounts\n    }\n  };\n  component.setState({\n    requestInProgress: true\n  });\n  BanksSynchronizationActions.saveSelectedAccount(request).then(function () {\n    NotificationsActions.success('Información guardada correctamente');\n    handleURL(toUrl);\n  }).catch(function (error) {\n    NotificationsActions.error(error);\n    component.setState({\n      requestInProgress: false\n    });\n    AppSignal.addBreadcrumb({\n      category: 'Smart Sync',\n      action: 'Error: Guardar selección de cuentas.',\n      metadata: {\n        bank: bank,\n        url: fromUrl\n      }\n    });\n    AppSignal.sendError(new Error(error));\n  });\n};\nexport var cleanAccounts = function cleanAccounts(accounts) {\n  return accounts.map(function (_ref2) {\n    var selected = _ref2.selected,\n        synchronized = _ref2.synchronized,\n        account = _objectWithoutProperties(_ref2, [\"selected\", \"synchronized\"]);\n\n    return account;\n  });\n};\nexport var filterCatalog = function filterCatalog(component) {\n  var activeBankList = component.state.activeBankList;\n  var banksSynchronized = activeBankList.map(function (_ref3) {\n    var bankName = _ref3.bank_name;\n    return bankName;\n  });\n  var catalogFiltered = SYNCHRONIZATION_BANK_LIST.filter(function (_ref4) {\n    var id = _ref4.id;\n    return !banksSynchronized.includes(id);\n  });\n  return catalogFiltered;\n};\nexport var getStatusStepper = function getStatusStepper(component) {\n  var _component$state = component.state,\n      bank = _component$state.bank,\n      requestInProgress = _component$state.requestInProgress,\n      failedToRegister = _component$state.failedToRegister;\n  var institution = bank.institution;\n  var status = '';\n  status = institution ? 'firstElement' : '';\n  status = failedToRegister ? 'failed' : status;\n  status = requestInProgress ? 'secondElement' : status;\n  return status;\n};\nexport var renderExplainCredentialsModal = function renderExplainCredentialsModal(institution, component) {\n  var isModalAccountExplainOpen = component.state.isModalAccountExplainOpen;\n  return React.createElement(Modal, {\n    isActive: isModalAccountExplainOpen,\n    toggleModal: function toggleModal() {\n      return handleModals('isModalAccountExplainOpen', component);\n    },\n    noFooter: true,\n    isAlert: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"synchronization\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"synchronization--margin-top synchronization__modal-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"Usuario y contrase\\xF1a\"), React.createElement(\"p\", {\n    className: \"synchronization--margin-top synchronization__modal-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"Ingresa los datos con los cu\\xE1les accedes a tu banca en l\\xEDnea.\"), React.createElement(\"div\", {\n    className: \"synchronization--margin-top\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(SelectField, {\n    placeholder: \"Selecciona tu banco\",\n    value: institution,\n    testId: \"selecciona-tu-banco\",\n    disabled: true,\n    options: filterCatalog(component),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    className: \"synchronization__modal synchronization__modal-example\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, \"Ejemplo:\"), React.createElement(\"img\", Object.assign({\n    className: \"synchronization__modal-image\"\n  }, getImageModal(institution), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  })), React.createElement(Button, {\n    buttonStyle: \"primary\",\n    onClick: function onClick() {\n      return handleModals('isModalAccountExplainOpen', component);\n    },\n    className: \"synchronization--margin-top flex-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, \"Cerrar\")));\n};\nexport var renderKeysModal = function renderKeysModal(component) {\n  var isModalKeysOpen = component.state.isModalKeysOpen;\n  return React.createElement(Modal, {\n    isActive: isModalKeysOpen,\n    toggleModal: function toggleModal() {\n      return handleModals('isModalKeysOpen', component);\n    },\n    noFooter: true,\n    isAlert: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"synchronization\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"synchronization--margin-top synchronization__modal-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, \"\\xBFPor que necesitan mis accesos?\"), React.createElement(\"p\", {\n    className: \"synchronization--margin-top synchronization__modal-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, \"Es necesario para tener acceso a tu banco y poder descargar el resumen de tus movimientos de manera autom\\xE1tica.\"), React.createElement(\"img\", {\n    src: '/img/access.png',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }), React.createElement(Button, {\n    buttonStyle: \"primary\",\n    onClick: function onClick() {\n      return handleModals('isModalKeysOpen', component);\n    },\n    className: \"synchronization--margin-top flex-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, \"Cerrar\")));\n};\nexport var tryAgain = function tryAgain(component) {\n  component.setState({\n    failedToRegister: false,\n    requestInProgress: false\n  });\n  component.setState(function (state) {\n    return _objectSpread({\n      failedToRegister: false,\n      requestInProgress: false\n    }, state, {\n      bank: _objectSpread({}, state.bank, {\n        username: '',\n        institution: '',\n        password: ''\n      })\n    });\n  });\n};\nexport var renderTokenExplain = function renderTokenExplain(component) {\n  var isModalTokenOpen = component.state.isModalTokenOpen;\n  return React.createElement(Modal, {\n    isActive: isModalTokenOpen,\n    toggleModal: function toggleModal() {\n      return handleModals('isModalTokenOpen', component);\n    },\n    noFooter: true,\n    isAlert: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"synchronization\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"synchronization--margin-top synchronization__modal-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }, \"\\xBFPor que necesitan mi Token?\"), React.createElement(\"p\", {\n    className: \"synchronization--margin-top synchronization__modal-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }, \"Algunos bancos requieren de un token, adem\\xE1s de tu usuario y contrase\\xF1a, para poder acceder a tu banca en l\\xEDnea, el cual es necesario para que podamos descargar tu resumen de movimientos de manera autom\\xE1tica. Tu token es una clave de 8 d\\xEDgitos que generar\\xE1s desde tu aplicaci\\xF3n bancaria.\"), React.createElement(\"img\", {\n    src: '/img/token-explain.png',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }), React.createElement(Button, {\n    buttonStyle: \"primary\",\n    onClick: function onClick() {\n      return handleModals('isModalTokenOpen', component);\n    },\n    className: \"synchronization--margin-top flex-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, \"Cerrar\")));\n};","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/editClient/synchronization/utils/index.js"],"names":["React","encryptData","checkFeatureFlags","handleURL","handleModals","AppSignal","SessionActions","SessionStore","BanksSynchronizationActions","NotificationsActions","SYNCHRONIZATION_BANK_LIST","Modal","Button","SelectField","addBank","username","institution","password","token","bank_data","user","bank","getLogo","alt","src","getImageModal","checkFeatureFlag","setFeatures","then","features","getFeatures","saveSelectedAccount","accounts","component","fromUrl","toUrl","request","bank_accounts","setState","requestInProgress","success","catch","error","addBreadcrumb","category","action","metadata","url","sendError","Error","cleanAccounts","map","selected","synchronized","account","filterCatalog","activeBankList","state","banksSynchronized","bankName","bank_name","catalogFiltered","filter","id","includes","getStatusStepper","failedToRegister","status","renderExplainCredentialsModal","isModalAccountExplainOpen","renderKeysModal","isModalKeysOpen","tryAgain","renderTokenExplain","isModalTokenOpen"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { encryptData, checkFeatureFlags, handleURL, handleModals } from 'utils'\nimport AppSignal from 'appsignal'\nimport SessionActions from 'actions/session'\nimport SessionStore from 'stores/session'\nimport BanksSynchronizationActions from 'actions/smartsync'\nimport NotificationsActions from 'actions/notifications'\nimport { SYNCHRONIZATION_BANK_LIST } from 'shared/catalogs'\nimport Modal from 'shared/modal'\nimport Button from 'shared/button'\nimport SelectField from 'shared/selectField'\n\nexport const addBank = ({ username, institution, password, token }) => ({\n  bank_data: {\n    user: encryptData(username),\n    bank: encryptData(institution),\n    password: encryptData(password),\n    token: encryptData(token)\n  }\n})\n\nexport const getLogo = institution => {\n  let alt = ''\n  let src = ''\n\n  switch (institution) {\n    case 'american_express':\n      alt = 'American Express'\n      src = '/img/american_express.png'\n      break\n    case 'banamex':\n      alt = 'Banamex'\n      src = '/img/citibanamex-logo.png'\n      break\n    case 'hsbc':\n      alt = 'HSBC'\n      src = '/img/hsbc-logo.png'\n      break\n    case 'santander':\n      alt = 'Santander'\n      src = '/img/santander-logo.png'\n      break\n    case 'scotiabank':\n      alt = 'Scotiabank'\n      src = '/img/scotiabank-logo.png'\n      break\n    case 'bancomer':\n      alt = 'Bancomer'\n      src = '/img/bancomer.png'\n      break\n  }\n  return { alt, src }\n}\n\nexport const getImageModal = institution => {\n  let alt = ''\n  let src = ''\n\n  switch (institution) {\n    case 'american_express':\n      alt = 'American Express'\n      src = '/img/amex-modal.png'\n      break\n    case 'banamex':\n      alt = 'Banamex'\n      src = '/img/citibanamex-modal.jpeg'\n      break\n    case 'hsbc':\n      alt = 'HSBC'\n      src = '/img/hsbc-modal.png'\n      break\n    case 'santander':\n      alt = 'Santander'\n      src = '/img/santander-modal.png'\n      break\n    case 'scotiabank':\n      alt = 'Scotiabank'\n      src = '/img/scotiabank-modal.png'\n      break\n  }\n  return { alt, src }\n}\n\nexport const checkFeatureFlag = () => {\n  SessionActions.setFeatures().then(() => {\n    const features = SessionStore.getFeatures()\n    checkFeatureFlags(features, '/cuentas-de-pago', 'synchronization')\n  })\n}\n\nexport const saveSelectedAccount = (\n  accounts,\n  bank,\n  component,\n  fromUrl,\n  toUrl\n) => {\n  const request = { bank_accounts: { accounts } }\n\n  component.setState({ requestInProgress: true })\n  BanksSynchronizationActions.saveSelectedAccount(request)\n    .then(() => {\n      NotificationsActions.success('Información guardada correctamente')\n      handleURL(toUrl)\n    })\n    .catch(error => {\n      NotificationsActions.error(error)\n      component.setState({ requestInProgress: false })\n      AppSignal.addBreadcrumb({\n        category: 'Smart Sync',\n        action: 'Error: Guardar selección de cuentas.',\n        metadata: {\n          bank: bank,\n          url: fromUrl\n        }\n      })\n      AppSignal.sendError(new Error(error))\n    })\n}\n\nexport const cleanAccounts = accounts => {\n  return accounts.map(({ selected, synchronized, ...account }) => account)\n}\n\nexport const filterCatalog = component => {\n  const { activeBankList } = component.state\n  const banksSynchronized = activeBankList.map(({ bank_name: bankName }) => {\n    return bankName\n  })\n\n  const catalogFiltered = SYNCHRONIZATION_BANK_LIST.filter(({ id }) => {\n    return !banksSynchronized.includes(id)\n  })\n\n  return catalogFiltered\n}\n\nexport const getStatusStepper = component => {\n  const { bank, requestInProgress, failedToRegister } = component.state\n  const { institution } = bank\n\n  let status = ''\n\n  status = institution ? 'firstElement' : ''\n  status = failedToRegister ? 'failed' : status\n  status = requestInProgress ? 'secondElement' : status\n\n  return status\n}\n\nexport const renderExplainCredentialsModal = (institution, component) => {\n  const { isModalAccountExplainOpen } = component.state\n  return (\n    <Modal\n      isActive={isModalAccountExplainOpen}\n      toggleModal={() => handleModals('isModalAccountExplainOpen', component)}\n      noFooter\n      isAlert\n    >\n      <div className='synchronization'>\n        <p className='synchronization--margin-top synchronization__modal-title'>\n          Usuario y contraseña\n        </p>\n        <p className='synchronization--margin-top synchronization__modal-text'>\n          Ingresa los datos con los cuáles accedes a tu banca en línea.\n        </p>\n        <div className='synchronization--margin-top'>\n          <SelectField\n            placeholder='Selecciona tu banco'\n            value={institution}\n            testId='selecciona-tu-banco'\n            disabled\n            options={filterCatalog(component)}\n          />\n        </div>\n\n        <p className='synchronization__modal synchronization__modal-example'>\n          Ejemplo:\n        </p>\n        <img\n          className='synchronization__modal-image'\n          {...getImageModal(institution)}\n        />\n\n        <Button\n          buttonStyle='primary'\n          onClick={() => handleModals('isModalAccountExplainOpen', component)}\n          className='synchronization--margin-top flex-center'\n        >\n          Cerrar\n        </Button>\n      </div>\n    </Modal>\n  )\n}\n\nexport const renderKeysModal = component => {\n  const { isModalKeysOpen } = component.state\n  return (\n    <Modal\n      isActive={isModalKeysOpen}\n      toggleModal={() => handleModals('isModalKeysOpen', component)}\n      noFooter\n      isAlert\n    >\n      <div className='synchronization'>\n        <p className='synchronization--margin-top synchronization__modal-title'>\n          ¿Por que necesitan mis accesos?\n        </p>\n        <p className='synchronization--margin-top synchronization__modal-text'>\n          Es necesario para tener acceso a tu banco y poder descargar el resumen\n          de tus movimientos de manera automática.\n        </p>\n\n        <img src={'/img/access.png'} />\n\n        <Button\n          buttonStyle='primary'\n          onClick={() => handleModals('isModalKeysOpen', component)}\n          className='synchronization--margin-top flex-center'\n        >\n          Cerrar\n        </Button>\n      </div>\n    </Modal>\n  )\n}\n\nexport const tryAgain = component => {\n  component.setState({ failedToRegister: false, requestInProgress: false })\n  component.setState(state => ({\n    failedToRegister: false,\n    requestInProgress: false,\n    ...state,\n    bank: {\n      ...state.bank,\n      username: '',\n      institution: '',\n      password: ''\n    }\n  }))\n}\n\nexport const renderTokenExplain = component => {\n  const { isModalTokenOpen } = component.state\n  return (\n    <Modal\n      isActive={isModalTokenOpen}\n      toggleModal={() => handleModals('isModalTokenOpen', component)}\n      noFooter\n      isAlert\n    >\n      <div className='synchronization'>\n        <p className='synchronization--margin-top synchronization__modal-title'>\n          ¿Por que necesitan mi Token?\n        </p>\n        <p className='synchronization--margin-top synchronization__modal-text'>\n          Algunos bancos requieren de un token, además de tu usuario y\n          contraseña, para poder acceder a tu banca en línea, el cual es\n          necesario para que podamos descargar tu resumen de movimientos de\n          manera automática. Tu token es una clave de 8 dígitos que generarás\n          desde tu aplicación bancaria.\n        </p>\n\n        <img src={'/img/token-explain.png'} />\n\n        <Button\n          buttonStyle='primary'\n          onClick={() => handleModals('isModalTokenOpen', component)}\n          className='synchronization--margin-top flex-center'\n        >\n          Cerrar\n        </Button>\n      </div>\n    </Modal>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}