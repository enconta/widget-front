{"ast":null,"code":"import _objectSpread from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/shared/wizard/index.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Steps from './Steps';\nvar defaultState = {\n  currentStep: 0,\n  totalSteps: 0\n};\n\nvar Wizard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Wizard, _Component);\n\n  function Wizard(props) {\n    var _this;\n\n    _classCallCheck(this, Wizard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Wizard).call(this, props));\n    _this.state = _objectSpread({}, defaultState);\n    _this.back = _this.back.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.next = _this.next.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Wizard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.initializeWizard();\n    } // Initialize the component counting the total number of children\n\n  }, {\n    key: \"initializeWizard\",\n    value: function initializeWizard() {\n      var children = this.props.children;\n      this.setState({\n        totalSteps: React.Children.count(children)\n      });\n    } // Function that goes to the next step in case there is one available\n\n  }, {\n    key: \"next\",\n    value: function next() {\n      var _this$state = this.state,\n          currentStep = _this$state.currentStep,\n          totalSteps = _this$state.totalSteps; // We can move right\n\n      if (currentStep + 1 !== totalSteps) {\n        this.setState(function (prevSate) {\n          return {\n            currentStep: prevSate.currentStep + 1\n          };\n        });\n      }\n    } // Return function that goes a step back in case there is one available\n\n  }, {\n    key: \"back\",\n    value: function back() {\n      // We are not in the begginng of the list\n      var currentStep = this.state.currentStep;\n\n      if (currentStep !== 0) {\n        this.setState(function (prevSate) {\n          return {\n            currentStep: prevSate.currentStep - 1\n          };\n        });\n      }\n    } // Function that renders the current child depending on the current step\n\n  }, {\n    key: \"renderCurrentChild\",\n    value: function renderCurrentChild() {\n      var children = this.props.children;\n      var currentStep = this.state.currentStep;\n      var child = React.Children.count(children) > 1 ? children[currentStep] : children; // If we have a react component clone it with injected props\n\n      if (React.isValidElement(child)) {\n        return React.cloneElement(child, {\n          next: this.next,\n          back: this.back\n        });\n      }\n\n      return null;\n    } // Main render function\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          currentStep = _this$state2.currentStep,\n          totalSteps = _this$state2.totalSteps;\n      return React.createElement(\"div\", {\n        className: \"wizard-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Steps, {\n        currentStep: currentStep,\n        totalSteps: totalSteps,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), this.renderCurrentChild());\n    }\n  }]);\n\n  return Wizard;\n}(Component);\n\nexport { Wizard as default };\nWizard.propTypes = {\n  children: PropTypes.element\n};","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/shared/wizard/index.js"],"names":["React","Component","PropTypes","Steps","defaultState","currentStep","totalSteps","Wizard","props","state","back","bind","next","initializeWizard","children","setState","Children","count","prevSate","child","isValidElement","cloneElement","renderCurrentChild","propTypes","element"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,CADM;AAEnBC,EAAAA,UAAU,EAAE;AAFO,CAArB;;IAKqBC,M;;;;;AACnB,kBAAaC,KAAb,EAAoB;AAAA;;AAAA;;AAClB,gFAAMA,KAAN;AACA,UAAKC,KAAL,qBAAkBL,YAAlB;AACA,UAAKM,IAAL,GAAY,MAAKA,IAAL,CAAUC,IAAV,uDAAZ;AACA,UAAKC,IAAL,GAAY,MAAKA,IAAL,CAAUD,IAAV,uDAAZ;AAJkB;AAKnB;;;;wCAEoB;AACnB,WAAKE,gBAAL;AACD,K,CAED;;;;uCACoB;AAAA,UACVC,QADU,GACG,KAAKN,KADR,CACVM,QADU;AAElB,WAAKC,QAAL,CAAc;AACZT,QAAAA,UAAU,EAAEN,KAAK,CAACgB,QAAN,CAAeC,KAAf,CAAqBH,QAArB;AADA,OAAd;AAGD,K,CAED;;;;2BACQ;AAAA,wBAC8B,KAAKL,KADnC;AAAA,UACEJ,WADF,eACEA,WADF;AAAA,UACeC,UADf,eACeA,UADf,EAEN;;AACA,UAAID,WAAW,GAAG,CAAd,KAAoBC,UAAxB,EAAoC;AAClC,aAAKS,QAAL,CAAc,UAAAG,QAAQ;AAAA,iBAAK;AACzBb,YAAAA,WAAW,EAAEa,QAAQ,CAACb,WAAT,GAAuB;AADX,WAAL;AAAA,SAAtB;AAGD;AACF,K,CAED;;;;2BACQ;AACN;AADM,UAEEA,WAFF,GAEkB,KAAKI,KAFvB,CAEEJ,WAFF;;AAGN,UAAIA,WAAW,KAAK,CAApB,EAAuB;AACrB,aAAKU,QAAL,CAAc,UAAAG,QAAQ;AAAA,iBAAK;AACzBb,YAAAA,WAAW,EAAEa,QAAQ,CAACb,WAAT,GAAuB;AADX,WAAL;AAAA,SAAtB;AAGD;AACF,K,CAED;;;;yCACsB;AAAA,UACZS,QADY,GACC,KAAKN,KADN,CACZM,QADY;AAAA,UAEZT,WAFY,GAEI,KAAKI,KAFT,CAEZJ,WAFY;AAGpB,UAAMc,KAAK,GACTnB,KAAK,CAACgB,QAAN,CAAeC,KAAf,CAAqBH,QAArB,IAAiC,CAAjC,GAAqCA,QAAQ,CAACT,WAAD,CAA7C,GAA6DS,QAD/D,CAHoB,CAMpB;;AACA,UAAId,KAAK,CAACoB,cAAN,CAAqBD,KAArB,CAAJ,EAAiC;AAC/B,eAAOnB,KAAK,CAACqB,YAAN,CAAmBF,KAAnB,EAA0B;AAAEP,UAAAA,IAAI,EAAE,KAAKA,IAAb;AAAmBF,UAAAA,IAAI,EAAE,KAAKA;AAA9B,SAA1B,CAAP;AACD;;AACD,aAAO,IAAP;AACD,K,CAED;;;;6BACU;AAAA,yBAC4B,KAAKD,KADjC;AAAA,UACAJ,WADA,gBACAA,WADA;AAAA,UACaC,UADb,gBACaA,UADb;AAER,aACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,WAAW,EAAED,WAApB;AAAiC,QAAA,UAAU,EAAEC,UAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEG,KAAKgB,kBAAL,EAFH,CADF;AAMD;;;;EAjEiCrB,S;;SAAfM,M;AAoErBA,MAAM,CAACgB,SAAP,GAAmB;AACjBT,EAAAA,QAAQ,EAAEZ,SAAS,CAACsB;AADH,CAAnB","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Steps from './Steps'\n\nconst defaultState = {\n  currentStep: 0,\n  totalSteps: 0\n}\n\nexport default class Wizard extends Component {\n  constructor (props) {\n    super(props)\n    this.state = { ...defaultState }\n    this.back = this.back.bind(this)\n    this.next = this.next.bind(this)\n  }\n\n  componentDidMount () {\n    this.initializeWizard()\n  }\n\n  // Initialize the component counting the total number of children\n  initializeWizard () {\n    const { children } = this.props\n    this.setState({\n      totalSteps: React.Children.count(children)\n    })\n  }\n\n  // Function that goes to the next step in case there is one available\n  next () {\n    const { currentStep, totalSteps } = this.state\n    // We can move right\n    if (currentStep + 1 !== totalSteps) {\n      this.setState(prevSate => ({\n        currentStep: prevSate.currentStep + 1\n      }))\n    }\n  }\n\n  // Return function that goes a step back in case there is one available\n  back () {\n    // We are not in the begginng of the list\n    const { currentStep } = this.state\n    if (currentStep !== 0) {\n      this.setState(prevSate => ({\n        currentStep: prevSate.currentStep - 1\n      }))\n    }\n  }\n\n  // Function that renders the current child depending on the current step\n  renderCurrentChild () {\n    const { children } = this.props\n    const { currentStep } = this.state\n    const child =\n      React.Children.count(children) > 1 ? children[currentStep] : children\n\n    // If we have a react component clone it with injected props\n    if (React.isValidElement(child)) {\n      return React.cloneElement(child, { next: this.next, back: this.back })\n    }\n    return null\n  }\n\n  // Main render function\n  render () {\n    const { currentStep, totalSteps } = this.state\n    return (\n      <div className='wizard-container'>\n        <Steps currentStep={currentStep} totalSteps={totalSteps} />\n        {this.renderCurrentChild()}\n      </div>\n    )\n  }\n}\n\nWizard.propTypes = {\n  children: PropTypes.element\n}\n"]},"metadata":{},"sourceType":"module"}