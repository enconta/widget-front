{"ast":null,"code":"import _objectSpread from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/shared/textField/index.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport validator from 'validator';\nimport classNames from 'classnames';\nimport _isNil from 'lodash/isNil';\nimport _kebabCase from 'lodash/kebabCase';\nvar ERROR_TXT = {\n  REQUIRED: 'Este campo es requerido',\n  EMAIL: 'Ingrese un e-mail vÃ¡lido'\n};\n\nvar currency = function currency() {\n  var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  n = n === '' ? 0 : n;\n  n = parseFloat(n);\n  return isNaN(n) ? false : n.toFixed(2);\n};\n\nvar TextField =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TextField, _Component);\n\n  _createClass(TextField, null, [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      if (props.value !== state.value) {\n        return _objectSpread({}, state, {\n          value: props.value\n        });\n      }\n\n      return null;\n    }\n  }]);\n\n  function TextField(props) {\n    var _this;\n\n    _classCallCheck(this, TextField);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TextField).call(this, props));\n    _this.data = {\n      value: props.isMoney ? currency(props.value) : props.value,\n      isValid: true,\n      errorText: '',\n      validateOnChange: false\n    };\n    _this.state = Object.assign({}, _this.data);\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onFocus = _this.onFocus.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onBlur = _this.onBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this._handleKeyDown = _this._handleKeyDown.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.validate = _this.validate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(TextField, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.mounted = true;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.mounted = false;\n    }\n  }, {\n    key: \"onFocus\",\n    value: function onFocus(e) {\n      var _this$props = this.props,\n          selectAllOnFocus = _this$props.selectAllOnFocus,\n          onFocus = _this$props.onFocus;\n      onFocus();\n      if (selectAllOnFocus) e.target.select();\n    }\n  }, {\n    key: \"onBlur\",\n    value: function onBlur() {\n      this.validate();\n\n      if (!this.state.validateOnChange) {\n        this.setState({\n          validateOnChange: true\n        });\n      }\n\n      if (this.props.isMoney) {\n        this.setState(function (prevState) {\n          return {\n            value: currency(prevState.value)\n          };\n        });\n      }\n\n      this.props.onBlur();\n    }\n  }, {\n    key: \"_handleKeyDown\",\n    value: function _handleKeyDown(e) {\n      if (e.key === 'Enter') {\n        this.props.onEnter();\n      }\n    } // When the field changes, it updates the value locally and calls the passed callback function\n    // so it can also update values on the parent component\n\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      var _this2 = this;\n\n      this.setState({\n        value: e.target.value\n      }, function () {\n        if (_this2.state.validateOnChange) _this2.validate();\n      });\n      this.props.onChange(e);\n    } // Validates if selected value matches the requirements.\n    // Sets on state the validation result and error message\n    // Returns boolean with the validation result.\n\n  }, {\n    key: \"validate\",\n    value: function validate() {\n      var _this$props2 = this.props,\n          type = _this$props2.type,\n          required = _this$props2.required,\n          minLength = _this$props2.minLength,\n          maxLength = _this$props2.maxLength,\n          name = _this$props2.name,\n          onValidationError = _this$props2.onValidationError;\n      var value = this.state.value;\n      var isValid = !(required || minLength);\n      var errorText = '';\n\n      if (value === null && required) {\n        isValid = validator.isLength(String(value), {\n          min: minLength\n        });\n        errorText = ERROR_TXT.REQUIRED;\n      }\n\n      if (required) {\n        if (type === 'number') {\n          isValid = !isNaN(value) && value !== '';\n        } else {\n          isValid = !validator.isEmpty(value);\n        }\n\n        errorText = isValid ? '' : ERROR_TXT.REQUIRED;\n      } // Check also for validity in the next validations\n      // Prevents from passing validation if a previous condition decided it was invalid\n\n\n      if (isValid) {\n        if (type === 'email' || type === 'email-no-icon') {\n          if (!value) return;\n          isValid = validator.isEmail(value);\n          errorText = errorText || ERROR_TXT.EMAIL;\n        }\n\n        if (type === 'number') {\n          if (minLength) {\n            isValid = validator.isLength(String(value), {\n              min: minLength\n            });\n            errorText = errorText || \"El campo debe contener al menos \".concat(minLength, \" caracteres\");\n          }\n\n          if (maxLength) {\n            isValid = validator.isLength(String(value), {\n              max: maxLength\n            });\n            errorText = errorText || \"El campo debe contener m\\xE1ximo \".concat(maxLength, \" caracteres\");\n          }\n        } else {\n          if (minLength) {\n            isValid = validator.isLength(value, {\n              min: minLength\n            });\n            errorText = errorText || \"El campo debe contener al menos \".concat(minLength, \" caracteres\");\n          }\n\n          if (maxLength) {\n            isValid = validator.isLength(value, {\n              max: maxLength\n            });\n            errorText = errorText || \"El campo debe contener m\\xE1ximo \".concat(maxLength, \" caracteres\");\n          }\n        }\n      }\n\n      if (!isValid) onValidationError(\"\".concat(name, \" - \").concat(errorText));\n      if (this.mounted) this.setState({\n        isValid: isValid,\n        errorText: errorText\n      });\n      return isValid;\n    } // Render an icon on the right side of the text field\n    // If the icon has a label, a tooltip will be shown\n    // If the icon has an onClick action, it will be called\n    // If it has a long text tooltip, it will be shown with a define width\n    // Example of the icon prop\n    // icon={{icon: 'close-circle', label: 'Eliminar', onClick: this.renderDeleteButton(pos)}}\n\n  }, {\n    key: \"renderIcon\",\n    value: function renderIcon() {\n      var _this$props3 = this.props,\n          _this$props3$icon = _this$props3.icon,\n          icon = _this$props3$icon === void 0 ? '' : _this$props3$icon,\n          _this$props3$label = _this$props3.label,\n          label = _this$props3$label === void 0 ? '' : _this$props3$label,\n          onClick = _this$props3.onClick,\n          _this$props3$disabled = _this$props3.disabled,\n          disabled = _this$props3$disabled === void 0 ? false : _this$props3$disabled,\n          _this$props3$tooltipT = _this$props3.tooltipText,\n          tooltipText = _this$props3$tooltipT === void 0 ? '' : _this$props3$tooltipT,\n          _this$props3$tooltipS = _this$props3.tooltipSize,\n          tooltipSize = _this$props3$tooltipS === void 0 ? '' : _this$props3$tooltipS;\n      var renderLabel = label ? React.createElement(\"span\", {\n        className: \"tooltip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, label) : null;\n      return React.createElement(\"span\", {\n        className: classNames('icon info-icon', {\n          clickable: onClick,\n          disabled: disabled\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, renderLabel, tooltipText && React.createElement(\"span\", {\n        className: classNames('tooltip', {\n          'tooltip--width-280px': tooltipSize === 'width-280px'\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, tooltipText), React.createElement(\"i\", {\n        className: \"mdi mdi-\".concat(icon),\n        onClick: !disabled && onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          label = _this$props4.label,\n          type = _this$props4.type,\n          className = _this$props4.className,\n          placeholder = _this$props4.placeholder,\n          disabled = _this$props4.disabled,\n          required = _this$props4.required,\n          info = _this$props4.info,\n          icon = _this$props4.icon,\n          minLength = _this$props4.minLength,\n          maxLength = _this$props4.maxLength,\n          onClick = _this$props4.onClick,\n          isSearchBar = _this$props4.isSearchBar,\n          floatLabel = _this$props4.floatLabel,\n          hideAndShowPassword = _this$props4.hideAndShowPassword,\n          onChangeType = _this$props4.onChangeType;\n      var _this$state = this.state,\n          value = _this$state.value,\n          isValid = _this$state.isValid,\n          errorText = _this$state.errorText;\n      if (_isNil(value)) value = '';\n      if (required && label) label = \"\".concat(label, \" *\");\n      return React.createElement(\"div\", {\n        className: classNames({\n          'filter__search-input': isSearchBar,\n          'control float-label': floatLabel\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, label && React.createElement(\"label\", {\n        className: \"caption\",\n        htmlFor: _kebabCase(label),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, label), React.createElement(\"p\", {\n        className: classNames('control', {\n          'has-icons-left': type === 'email' || type === 'password',\n          'has-info': info || icon\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(\"input\", Object.assign({\n        className: classNames('input ' + className, {\n          'is-danger': !isValid,\n          'has-text-right': type === 'number',\n          required: required && !value\n        }),\n        type: type,\n        placeholder: placeholder,\n        disabled: disabled,\n        value: value,\n        onChange: this.onChange,\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        onKeyDown: this._handleKeyDown,\n        required: required,\n        minLength: minLength,\n        maxLength: maxLength,\n        onClick: onClick\n      }, label || floatLabel ? {\n        id: _kebabCase(label || floatLabel)\n      } : {}, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      })), floatLabel && React.createElement(\"label\", {\n        className: \"caption\",\n        htmlFor: _kebabCase(floatLabel),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, floatLabel), hideAndShowPassword && React.createElement(\"p\", {\n        onClick: onChangeType,\n        className: \"float-label-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"mdi mdi-eye\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      })), info && React.createElement(\"span\", {\n        className: \"icon info-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"tooltip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, info), React.createElement(\"i\", {\n        className: \"mdi mdi-information-outline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      })), icon && this.renderIcon(), type === 'email' && React.createElement(\"span\", {\n        className: \"icon is-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: classNames({\n          'mdi mdi-email-outline': type === 'email',\n          'mdi mdi-key': type === 'password'\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }))), React.createElement(\"span\", {\n        className: classNames('help is-danger', {\n          'is-hidden': isValid\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, errorText || ''));\n    }\n  }]);\n\n  return TextField;\n}(Component);\n\nexport default TextField;\nTextField.propTypes = {\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onChange: PropTypes.func,\n  label: PropTypes.string,\n  name: PropTypes.string,\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  disabled: PropTypes.bool,\n  type: PropTypes.string,\n  minLength: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  maxLength: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  required: PropTypes.bool,\n  selectAllOnFocus: PropTypes.bool,\n  isMoney: PropTypes.bool,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  onEnter: PropTypes.func,\n  info: PropTypes.string,\n  icon: PropTypes.object,\n  onClick: PropTypes.func,\n  onValidationError: PropTypes.func,\n  floatLabel: PropTypes.string,\n  hideAndShowPassword: PropTypes.bool,\n  onChangeType: PropTypes.func\n};\nTextField.defaultProps = {\n  value: '',\n  className: '',\n  placeholder: '',\n  label: '',\n  name: '',\n  disabled: false,\n  type: 'text',\n  required: false,\n  selectAllOnFocus: false,\n  isMoney: false,\n  onChange: function onChange() {},\n  onFocus: function onFocus() {},\n  onBlur: function onBlur() {},\n  onEnter: function onEnter() {},\n  onClick: function onClick() {},\n  onValidationError: function onValidationError() {},\n  info: '',\n  floatLabel: '',\n  hideAndShowPassword: false,\n  onChangeType: function onChangeType() {}\n};","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/shared/textField/index.js"],"names":["React","Component","PropTypes","validator","classNames","_isNil","_kebabCase","ERROR_TXT","REQUIRED","EMAIL","currency","n","parseFloat","isNaN","toFixed","TextField","props","state","value","data","isMoney","isValid","errorText","validateOnChange","Object","assign","onChange","bind","onFocus","onBlur","_handleKeyDown","validate","mounted","e","selectAllOnFocus","target","select","setState","prevState","key","onEnter","type","required","minLength","maxLength","name","onValidationError","isLength","String","min","isEmpty","isEmail","max","icon","label","onClick","disabled","tooltipText","tooltipSize","renderLabel","clickable","className","placeholder","info","isSearchBar","floatLabel","hideAndShowPassword","onChangeType","id","renderIcon","propTypes","oneOfType","string","number","func","bool","object","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport validator from 'validator'\nimport classNames from 'classnames'\nimport _isNil from 'lodash/isNil'\nimport _kebabCase from 'lodash/kebabCase'\n\nconst ERROR_TXT = {\n  REQUIRED: 'Este campo es requerido',\n  EMAIL: 'Ingrese un e-mail vÃ¡lido'\n}\n\nconst currency = (n = 0) => {\n  n = n === '' ? 0 : n\n  n = parseFloat(n)\n  return isNaN(n) ? false : n.toFixed(2)\n}\n\nclass TextField extends Component {\n  static getDerivedStateFromProps (props, state) {\n    if (props.value !== state.value) {\n      return { ...state, value: props.value }\n    }\n\n    return null\n  }\n\n  constructor (props) {\n    super(props)\n    this.data = {\n      value: props.isMoney ? currency(props.value) : props.value,\n      isValid: true,\n      errorText: '',\n      validateOnChange: false\n    }\n    this.state = Object.assign({}, this.data)\n    this.onChange = this.onChange.bind(this)\n    this.onFocus = this.onFocus.bind(this)\n    this.onBlur = this.onBlur.bind(this)\n    this._handleKeyDown = this._handleKeyDown.bind(this)\n    this.validate = this.validate.bind(this)\n  }\n\n  componentDidMount () {\n    this.mounted = true\n  }\n\n  componentWillUnmount () {\n    this.mounted = false\n  }\n\n  onFocus (e) {\n    let { selectAllOnFocus, onFocus } = this.props\n    onFocus()\n    if (selectAllOnFocus) e.target.select()\n  }\n\n  onBlur () {\n    this.validate()\n    if (!this.state.validateOnChange) {\n      this.setState({ validateOnChange: true })\n    }\n    if (this.props.isMoney) {\n      this.setState(prevState => ({ value: currency(prevState.value) }))\n    }\n    this.props.onBlur()\n  }\n\n  _handleKeyDown (e) {\n    if (e.key === 'Enter') {\n      this.props.onEnter()\n    }\n  }\n\n  // When the field changes, it updates the value locally and calls the passed callback function\n  // so it can also update values on the parent component\n  onChange (e) {\n    this.setState({ value: e.target.value }, () => {\n      if (this.state.validateOnChange) this.validate()\n    })\n    this.props.onChange(e)\n  }\n\n  // Validates if selected value matches the requirements.\n  // Sets on state the validation result and error message\n  // Returns boolean with the validation result.\n  validate () {\n    let {\n      type,\n      required,\n      minLength,\n      maxLength,\n      name,\n      onValidationError\n    } = this.props\n    let { value } = this.state\n    let isValid = !(required || minLength)\n    let errorText = ''\n    if (value === null && required) {\n      isValid = validator.isLength(String(value), { min: minLength })\n      errorText = ERROR_TXT.REQUIRED\n    }\n    if (required) {\n      if (type === 'number') {\n        isValid = !isNaN(value) && value !== ''\n      } else {\n        isValid = !validator.isEmpty(value)\n      }\n      errorText = isValid ? '' : ERROR_TXT.REQUIRED\n    }\n    // Check also for validity in the next validations\n    // Prevents from passing validation if a previous condition decided it was invalid\n    if (isValid) {\n      if (type === 'email' || type === 'email-no-icon') {\n        if (!value) return\n        isValid = validator.isEmail(value)\n        errorText = errorText || ERROR_TXT.EMAIL\n      }\n      if (type === 'number') {\n        if (minLength) {\n          isValid = validator.isLength(String(value), { min: minLength })\n          errorText =\n            errorText ||\n            `El campo debe contener al menos ${minLength} caracteres`\n        }\n        if (maxLength) {\n          isValid = validator.isLength(String(value), { max: maxLength })\n          errorText =\n            errorText || `El campo debe contener mÃ¡ximo ${maxLength} caracteres`\n        }\n      } else {\n        if (minLength) {\n          isValid = validator.isLength(value, { min: minLength })\n          errorText =\n            errorText ||\n            `El campo debe contener al menos ${minLength} caracteres`\n        }\n        if (maxLength) {\n          isValid = validator.isLength(value, { max: maxLength })\n          errorText =\n            errorText || `El campo debe contener mÃ¡ximo ${maxLength} caracteres`\n        }\n      }\n    }\n    if (!isValid) onValidationError(`${name} - ${errorText}`)\n    if (this.mounted) this.setState({ isValid, errorText })\n    return isValid\n  }\n\n  // Render an icon on the right side of the text field\n  // If the icon has a label, a tooltip will be shown\n  // If the icon has an onClick action, it will be called\n  // If it has a long text tooltip, it will be shown with a define width\n  // Example of the icon prop\n  // icon={{icon: 'close-circle', label: 'Eliminar', onClick: this.renderDeleteButton(pos)}}\n  renderIcon () {\n    let {\n      icon = '',\n      label = '',\n      onClick,\n      disabled = false,\n      tooltipText = '',\n      tooltipSize = ''\n    } = this.props\n    let renderLabel = label ? <span className='tooltip'>{label}</span> : null\n    return (\n      <span\n        className={classNames('icon info-icon', {\n          clickable: onClick,\n          disabled: disabled\n        })}\n      >\n        {renderLabel}\n        {tooltipText && (\n          <span\n            className={classNames('tooltip', {\n              'tooltip--width-280px': tooltipSize === 'width-280px'\n            })}\n          >\n            {tooltipText}\n          </span>\n        )}\n        <i className={`mdi mdi-${icon}`} onClick={!disabled && onClick} />\n      </span>\n    )\n  }\n\n  render () {\n    let {\n      label,\n      type,\n      className,\n      placeholder,\n      disabled,\n      required,\n      info,\n      icon,\n      minLength,\n      maxLength,\n      onClick,\n      isSearchBar,\n      floatLabel,\n      hideAndShowPassword,\n      onChangeType\n    } = this.props\n    let { value, isValid, errorText } = this.state\n    if (_isNil(value)) value = ''\n    if (required && label) label = `${label} *`\n\n    return (\n      <div\n        className={classNames({\n          'filter__search-input': isSearchBar,\n          'control float-label': floatLabel\n        })}\n      >\n        {label && (\n          <label className='caption' htmlFor={_kebabCase(label)}>\n            {label}\n          </label>\n        )}\n        <p\n          className={classNames('control', {\n            'has-icons-left': type === 'email' || type === 'password',\n            'has-info': info || icon\n          })}\n        >\n          <input\n            className={classNames('input ' + className, {\n              'is-danger': !isValid,\n              'has-text-right': type === 'number',\n              required: required && !value\n            })}\n            type={type}\n            placeholder={placeholder}\n            disabled={disabled}\n            value={value}\n            onChange={this.onChange}\n            onFocus={this.onFocus}\n            onBlur={this.onBlur}\n            onKeyDown={this._handleKeyDown}\n            required={required}\n            minLength={minLength}\n            maxLength={maxLength}\n            onClick={onClick}\n            {...(label || floatLabel\n              ? { id: _kebabCase(label || floatLabel) }\n              : {})}\n          />\n\n          {floatLabel && (\n            <label className='caption' htmlFor={_kebabCase(floatLabel)}>\n              {floatLabel}\n            </label>\n          )}\n          {hideAndShowPassword && (\n            <p onClick={onChangeType} className='float-label-icon'>\n              <i className='mdi mdi-eye' />\n            </p>\n          )}\n          {info && (\n            <span className='icon info-icon'>\n              <span className='tooltip'>{info}</span>\n              <i className='mdi mdi-information-outline' />\n            </span>\n          )}\n          {icon && this.renderIcon()}\n          {type === 'email' && (\n            <span className='icon is-left'>\n              <i\n                className={classNames({\n                  'mdi mdi-email-outline': type === 'email',\n                  'mdi mdi-key': type === 'password'\n                })}\n              />\n            </span>\n          )}\n        </p>\n        <span className={classNames('help is-danger', { 'is-hidden': isValid })}>\n          {errorText || ''}\n        </span>\n      </div>\n    )\n  }\n}\n\nexport default TextField\n\nTextField.propTypes = {\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onChange: PropTypes.func,\n  label: PropTypes.string,\n  name: PropTypes.string,\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  disabled: PropTypes.bool,\n  type: PropTypes.string,\n  minLength: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  maxLength: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  required: PropTypes.bool,\n  selectAllOnFocus: PropTypes.bool,\n  isMoney: PropTypes.bool,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  onEnter: PropTypes.func,\n  info: PropTypes.string,\n  icon: PropTypes.object,\n  onClick: PropTypes.func,\n  onValidationError: PropTypes.func,\n  floatLabel: PropTypes.string,\n  hideAndShowPassword: PropTypes.bool,\n  onChangeType: PropTypes.func\n}\n\nTextField.defaultProps = {\n  value: '',\n  className: '',\n  placeholder: '',\n  label: '',\n  name: '',\n  disabled: false,\n  type: 'text',\n  required: false,\n  selectAllOnFocus: false,\n  isMoney: false,\n  onChange: () => {},\n  onFocus: () => {},\n  onBlur: () => {},\n  onEnter: () => {},\n  onClick: () => {},\n  onValidationError: () => {},\n  info: '',\n  floatLabel: '',\n  hideAndShowPassword: false,\n  onChangeType: () => {}\n}\n"]},"metadata":{},"sourceType":"module"}