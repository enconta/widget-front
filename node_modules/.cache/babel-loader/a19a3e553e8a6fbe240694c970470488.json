{"ast":null,"code":"import _toConsumableArray from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/inventories/index.js\";\n// Libraries\nimport React, { Component, Fragment } from 'react';\nimport { browserHistory } from 'react-router'; // Stores\n\nimport SessionStore from 'stores/session';\nimport InventoriesStore from 'stores/inventories'; // Actions\n\nimport SessionActions from 'actions/session';\nimport InventoriesActions from 'actions/inventories'; // Components\n\nimport Card from 'shared/card';\nimport InternalHeader from './internalHeader';\n\nvar getCurrentState = function getCurrentState() {\n  return {\n    hasProducts: InventoriesStore.getHasProducts()\n  };\n};\n\nvar Inventories =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Inventories, _Component);\n\n  function Inventories() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Inventories);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Inventories)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = _objectSpread({\n      optionTabs: [],\n      hasProducts: false\n    }, getCurrentState());\n\n    _this._onChange = function () {\n      _this.setState(getCurrentState());\n    };\n\n    _this.loadTabs = function () {\n      var optionTabs = [{\n        id: 'reportes',\n        label: 'Reportes'\n      }, {\n        id: 'actividad',\n        label: 'Actividad'\n      }, {\n        id: 'productos',\n        label: 'Productos'\n      }];\n\n      _this.setState({\n        optionTabs: optionTabs\n      });\n    };\n\n    _this.showMassiveUpload = function () {\n      browserHistory.push('/inventarios/productos/agregar-varios');\n    };\n\n    _this.showSingleUpload = function () {\n      browserHistory.push('/inventarios/productos/agregar-uno');\n    };\n\n    _this.chooseButtons = function () {\n      var pathname = _this.props.location.pathname;\n      var buttons = [];\n\n      switch (pathname) {\n        case '/inventarios/productos':\n        case '/inventarios/productos/agregar-varios':\n        case '/inventarios/productos/agregar-uno':\n          buttons = [{\n            text: 'agregar varios',\n            icon: 'tag-multiple',\n            style: 'primaryInv ',\n            onClick: _this.showMassiveUpload\n          }, {\n            text: 'agregar un producto',\n            icon: 'tag-plus',\n            style: 'primary',\n            onClick: _this.showSingleUpload\n          }];\n          break;\n\n        case '/inventarios/actividad':\n          buttons = [{\n            text: 'Registrar actividad',\n            icon: 'calendar-plus',\n            style: 'primaryInv ',\n            onClick: function onClick() {}\n          }];\n          break;\n\n        default:\n          buttons = [];\n      }\n\n      return buttons;\n    };\n\n    return _this;\n  }\n\n  _createClass(Inventories, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      SessionActions.setFeatures().then(function () {\n        var features = SessionStore.getFeatures();\n\n        if (!features.find(function (feature) {\n          return feature.key === 'inventory';\n        })) {\n          browserHistory.push('/dashboard');\n        }\n      });\n      InventoriesActions.setProducts().then(function () {\n        var hasProducts = _this2.state.hasProducts;\n\n        if (hasProducts) {\n          _this2.loadTabs();\n\n          browserHistory.push('/inventarios/reportes');\n        } else {\n          browserHistory.push('/inventarios/productos/agregar-varios');\n        }\n      });\n    } // Adds listener, when the Store changes, trigger the _onChange callback func\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      InventoriesStore.addChangeListener(this._onChange);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      InventoriesStore.removeChangeListener(this._onChange);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var prevHasProducts = prevState.hasProducts;\n      var currentHasProducts = this.state.hasProducts;\n\n      if (prevHasProducts !== currentHasProducts) {\n        this.loadTabs();\n      }\n    } // When the store changes, the state goes to it and pulls the updated data\n    // then sets it so the component renders\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var buttons = this.chooseButtons();\n\n      var optionTabs = _toConsumableArray(this.state.optionTabs);\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          location = _this$props.location;\n      var activeTab = location.pathname.split('/')[2];\n      var hasProducts = this.state.hasProducts;\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(InternalHeader, {\n        title: \"Inventarios\",\n        buttons: buttons,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), hasProducts ? React.createElement(Card, {\n        title: optionTabs,\n        activeTab: activeTab,\n        baseUrl: \"/inventarios\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, children)) : React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, children)));\n    }\n  }]);\n\n  return Inventories;\n}(Component);\n\nexport { Inventories as default };","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/inventories/index.js"],"names":["React","Component","Fragment","browserHistory","SessionStore","InventoriesStore","SessionActions","InventoriesActions","Card","InternalHeader","getCurrentState","hasProducts","getHasProducts","Inventories","state","optionTabs","_onChange","setState","loadTabs","id","label","showMassiveUpload","push","showSingleUpload","chooseButtons","pathname","props","location","buttons","text","icon","style","onClick","setFeatures","then","features","getFeatures","find","feature","key","setProducts","addChangeListener","removeChangeListener","prevProps","prevState","prevHasProducts","currentHasProducts","children","activeTab","split"],"mappings":"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","sourcesContent":["// Libraries\nimport React, { Component, Fragment } from 'react'\nimport { browserHistory } from 'react-router'\n\n// Stores\nimport SessionStore from 'stores/session'\nimport InventoriesStore from 'stores/inventories'\n\n// Actions\nimport SessionActions from 'actions/session'\nimport InventoriesActions from 'actions/inventories'\n\n// Components\nimport Card from 'shared/card'\nimport InternalHeader from './internalHeader'\n\nconst getCurrentState = () => {\n  return {\n    hasProducts: InventoriesStore.getHasProducts()\n  }\n}\nexport default class Inventories extends Component {\n  state = { optionTabs: [], hasProducts: false, ...getCurrentState() }\n\n  componentWillMount () {\n    SessionActions.setFeatures().then(() => {\n      const features = SessionStore.getFeatures()\n      if (!features.find(feature => feature.key === 'inventory')) {\n        browserHistory.push('/dashboard')\n      }\n    })\n\n    InventoriesActions.setProducts().then(() => {\n      const { hasProducts } = this.state\n      if (hasProducts) {\n        this.loadTabs()\n        browserHistory.push('/inventarios/reportes')\n      } else {\n        browserHistory.push('/inventarios/productos/agregar-varios')\n      }\n    })\n  }\n\n  // Adds listener, when the Store changes, trigger the _onChange callback func\n  componentDidMount () {\n    InventoriesStore.addChangeListener(this._onChange)\n  }\n\n  componentWillUnmount () {\n    InventoriesStore.removeChangeListener(this._onChange)\n  }\n\n  componentDidUpdate (prevProps, prevState) {\n    const { hasProducts: prevHasProducts } = prevState\n    const { hasProducts: currentHasProducts } = this.state\n\n    if (prevHasProducts !== currentHasProducts) {\n      this.loadTabs()\n    }\n  }\n\n  // When the store changes, the state goes to it and pulls the updated data\n  // then sets it so the component renders\n  _onChange = () => {\n    this.setState(getCurrentState())\n  }\n\n  loadTabs = () => {\n    const optionTabs = [\n      { id: 'reportes', label: 'Reportes' },\n      { id: 'actividad', label: 'Actividad' },\n      { id: 'productos', label: 'Productos' }\n    ]\n    this.setState({ optionTabs: optionTabs })\n  }\n\n  showMassiveUpload = () => {\n    browserHistory.push('/inventarios/productos/agregar-varios')\n  }\n\n  showSingleUpload = () => {\n    browserHistory.push('/inventarios/productos/agregar-uno')\n  }\n\n  chooseButtons = () => {\n    const { pathname } = this.props.location\n    let buttons = []\n    switch (pathname) {\n      case '/inventarios/productos':\n      case '/inventarios/productos/agregar-varios':\n      case '/inventarios/productos/agregar-uno':\n        buttons = [\n          {\n            text: 'agregar varios',\n            icon: 'tag-multiple',\n            style: 'primaryInv ',\n            onClick: this.showMassiveUpload\n          },\n          {\n            text: 'agregar un producto',\n            icon: 'tag-plus',\n            style: 'primary',\n            onClick: this.showSingleUpload\n          }\n        ]\n        break\n      case '/inventarios/actividad':\n        buttons = [\n          {\n            text: 'Registrar actividad',\n            icon: 'calendar-plus',\n            style: 'primaryInv ',\n            onClick: () => {}\n          }\n        ]\n        break\n      default:\n        buttons = []\n    }\n    return buttons\n  }\n\n  render () {\n    const buttons = this.chooseButtons()\n    const optionTabs = [...this.state.optionTabs]\n    const { children, location } = this.props\n    const activeTab = location.pathname.split('/')[2]\n    const { hasProducts } = this.state\n\n    return (\n      <Fragment>\n        <InternalHeader title='Inventarios' buttons={buttons} />\n        {hasProducts ? (\n          <Card title={optionTabs} activeTab={activeTab} baseUrl='/inventarios'>\n            <Fragment>{children}</Fragment>\n          </Card>\n        ) : (\n          <Card>\n            <Fragment>{children}</Fragment>\n          </Card>\n        )}\n      </Fragment>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}