{"ast":null,"code":"import _toConsumableArray from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _defaultInvoice,\n    _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/newInvoice/invoice/index.js\";\n\n// Imports\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport { browserHistory } from 'react-router';\nimport ReactGa from 'react-ga';\nimport _omit from 'lodash/omit';\nimport AppSignal from 'appsignal'; // Custom components\n\nimport API from 'api';\nimport NotificationsActions from 'actions/notifications';\nimport SatCredentialsStore from 'stores/satCredentials';\nimport SessionStore from 'stores/session';\nimport SatCredentialsActions from 'actions/satCredentials';\nimport Card from 'shared/card';\nimport CredentialsExpire from 'shared/credentials';\nimport { ENCONTA_INVOICE_CATEGORIES } from 'shared/catalogs';\nimport { removeEmpty, formatCents, createGaEvent, hasDifference, getClientsPlan } from 'utils'; // Invoice sub-views\n\nimport Issuer from './../shared/issuer';\nimport Recipient from './../shared/recipient';\nimport Charges from './../shared/charges';\nimport Upload from './../shared/upload';\nimport AddOns from './../complementos';\nimport MailerModal from '../../viewInvoice/mailerModal';\nimport InvoiceCounter from '../shared/invoiceCounter';\nimport { createIssuer, createRecipient } from '../utils';\nimport { ISSUER_MG_KEY, TAX_CLASSIFICATION_KEY } from '../constants'; // Constantes de prueba\n\nvar FREQUENTLY_USED_PRODUCTS_KEY = 'products';\nvar FREQUENTLY_USED_UNITS_KEY = 'units';\nvar FREQUENTLY_USED_CONCEPTS_KEY = 'concepts'; // Invoice keys\n\nvar VERSION_KEY = 'version';\nvar TYPE_KEY = 'type';\nvar SUBTYPE_KEY = 'subtype';\nvar CATEGORY_KEY = 'category';\nvar defaultInvoice = (_defaultInvoice = {}, _defineProperty(_defaultInvoice, VERSION_KEY, '3.3'), _defineProperty(_defaultInvoice, TYPE_KEY, 0), _defineProperty(_defaultInvoice, SUBTYPE_KEY, 0), _defineProperty(_defaultInvoice, CATEGORY_KEY, ENCONTA_INVOICE_CATEGORIES['individual'][0].id), _defineProperty(_defaultInvoice, ISSUER_MG_KEY, _defineProperty({}, TAX_CLASSIFICATION_KEY, '')), _defaultInvoice); // Tax Detail keys\n\nvar DISCOUNT_CENTS_KEY = 'discount_cents';\nvar SUBTOTAL_CENTS_KEY = 'subtotal_cents';\nvar TOTAL_CENTS_KEY = 'total_cents'; // Invoice creation\n\nvar INVOICE_REQUEST_FUNCTIONS = [{\n  id: 'regular',\n  function: API.Invoice.CreateRegular\n}, {\n  id: 'ine',\n  function: API.Invoice.CreateIne\n}, {\n  id: 'local_tax',\n  function: API.Invoice.CreateLocalTax\n}, {\n  id: 'foreign_trade',\n  function: API.Invoice.CreateForeignTrade\n}];\n\nvar getCurrentState = function getCurrentState() {\n  return {\n    credentials: SatCredentialsStore.getCredentials(),\n    legalType: SessionStore.getCurrentEntity().legal_type,\n    currentUser: SessionStore.getUser()\n  };\n};\n\nvar Invoice =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Invoice, _Component);\n\n  function Invoice() {\n    var _totals, _frequentlyUsedData;\n\n    var _this;\n\n    _classCallCheck(this, Invoice);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Invoice).call(this));\n\n    _this.getInvoice =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(id) {\n        var _ref2, invoice;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return API.Invoice.Show(id);\n\n              case 3:\n                _ref2 = _context.sent;\n                invoice = _ref2.invoice;\n\n                _this.setState({\n                  loadedInvoice: invoice,\n                  usedDataReady: true,\n                  invoice: _objectSpread({}, _this.state.invoice, {\n                    category: 'other',\n                    subtype: invoice.subtype,\n                    type: invoice.type\n                  }),\n                  voucherType: invoice.voucher_type === 'ingreso' || invoice.voucher_type === 'i' ? 'I' : 'T'\n                });\n\n                _context.next = 12;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n                AppSignal.sendError(_context.t0);\n                NotificationsActions.error('No se pudo cargar la información de la factura');\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 8]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this._onChange = function () {\n      // When the store changes, the state goes to it and pulls the updated data\n      // then sets it so the component rerenders\n      var _getCurrentState = getCurrentState(),\n          credentials = _getCurrentState.credentials;\n\n      if (hasDifference(_this.state.credentials, credentials)) {\n        _this.setState({\n          credentials: credentials\n        });\n      }\n    };\n\n    _this.updateRemainingInvoices = function (remainingInvoices) {\n      _this.setState({\n        remainingInvoices: remainingInvoices\n      });\n    };\n\n    _this.toggleMailModal = function () {\n      _this.setState(function (state) {\n        return {\n          openMailModal: !state.openMailModal\n        };\n      });\n    };\n\n    _this.remitedInvoice = function (invoice) {\n      var query = _this.props.location.query;\n      query.invoice === undefined && (invoice['discount_cents'] = formatCents(invoice['discount_cents']));\n    };\n\n    _this.changeVoucherType = function (t) {\n      _this.setState({\n        voucherType: t\n      });\n    };\n\n    _this.data = {\n      category: 'regular',\n      requestInProgress: false,\n      requireFiel: false,\n      invoice: defaultInvoice,\n      totals: (_totals = {}, _defineProperty(_totals, DISCOUNT_CENTS_KEY, 0), _defineProperty(_totals, SUBTOTAL_CENTS_KEY, 0), _defineProperty(_totals, TOTAL_CENTS_KEY, 0), _totals),\n      frequentlyUsedData: (_frequentlyUsedData = {}, _defineProperty(_frequentlyUsedData, FREQUENTLY_USED_PRODUCTS_KEY, []), _defineProperty(_frequentlyUsedData, FREQUENTLY_USED_UNITS_KEY, []), _defineProperty(_frequentlyUsedData, FREQUENTLY_USED_CONCEPTS_KEY, []), _frequentlyUsedData),\n      usedDataReady: false,\n      // Save last error in case form quit\n      lastError: '',\n      // Assume if you open this view you want to finish the form\n      formQuit: true,\n      voucherType: 'I',\n      loadedInvoice: null,\n      openMailModal: false,\n      generatedInvoice: {},\n      remainingInvoices: 0\n    };\n    _this.state = _objectSpread({}, _this.data, getCurrentState());\n    return _this;\n  }\n\n  _createClass(Invoice, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var query = this.props.location.query;\n      SatCredentialsStore.addChangeListener(this._onChange);\n      this.loadData();\n\n      if (query.invoice) {\n        this.getInvoice(query.invoice);\n      } else {\n        this.getFrequentlyUsedData();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      SatCredentialsStore.removeChangeListener(this._onChange);\n      var _this$state = this.state,\n          formQuit = _this$state.formQuit,\n          lastError = _this$state.lastError; // Notify form quit\n\n      if (formQuit) {\n        ReactGa.event(createGaEvent('facturación venta', 'form quit', lastError));\n      }\n    }\n  }, {\n    key: \"loadData\",\n    value: function loadData() {\n      SatCredentialsActions.getSatCredentials().catch(function (e) {\n        return NotificationsActions.error(e);\n      });\n    } // Make API call to get frequently used data\n\n  }, {\n    key: \"getFrequentlyUsedData\",\n    value: function getFrequentlyUsedData() {\n      var _this2 = this;\n\n      API.Invoice.GetUsedData().then(function (r) {\n        _this2.setState({\n          frequentlyUsedData: r,\n          usedDataReady: true\n        });\n      }).catch(function (error) {\n        AppSignal.sendError(error);\n      });\n    } // Clean an invoice\n\n  }, {\n    key: \"cleanAll\",\n    value: function cleanAll() {} // TODO: Implement invoice cleaning\n    // Make API call to upload invoice\n\n  }, {\n    key: \"uploadInvoice\",\n    value: function uploadInvoice(invoice, send, preview) {\n      var _this3 = this;\n\n      if (preview) {\n        invoice.preview = true;\n      }\n\n      var findInvoiceCategory = INVOICE_REQUEST_FUNCTIONS.find(function (request) {\n        return request.id === _this3.state.category;\n      });\n      this.setState({\n        requestInProgress: true,\n        formQuit: true\n      }, function () {\n        findInvoiceCategory.function(invoice, preview).then(\n        /*#__PURE__*/\n        function () {\n          var _ref3 = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee2(response) {\n            var data, url;\n            return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _this3.setState({\n                      requestInProgress: false,\n                      formQuit: false,\n                      lastError: ''\n                    });\n\n                    if (!preview) {\n                      _context2.next = 9;\n                      break;\n                    }\n\n                    ReactGa.event(createGaEvent('preview facturación venta', 'result', 'factura generada'));\n                    _context2.next = 5;\n                    return response.blob();\n\n                  case 5:\n                    data = _context2.sent;\n                    url = window.URL.createObjectURL(data);\n                    window.open(url);\n                    return _context2.abrupt(\"return\");\n\n                  case 9:\n                    if (!send) {\n                      _context2.next = 13;\n                      break;\n                    }\n\n                    ReactGa.event(createGaEvent('facturación venta y enviar', 'result', 'factura generada'));\n\n                    _this3.setState({\n                      generatedInvoice: response.invoice\n                    }, _this3.toggleMailModal);\n\n                    return _context2.abrupt(\"return\");\n\n                  case 13:\n                    NotificationsActions.success('Factura emitida');\n                    ReactGa.event(createGaEvent('facturación venta', 'result', 'factura generada'));\n                    browserHistory.push(\"/facturas/ver/\".concat(response.invoice.id));\n\n                  case 16:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _callee2);\n          }));\n\n          return function (_x2) {\n            return _ref3.apply(this, arguments);\n          };\n        }()).catch(function (err) {\n          // Notify failure to GA\n          ReactGa.event(createGaEvent('facturación venta', 'result', 'error al generar factura'));\n          console.error(err);\n          NotificationsActions.error(err);\n\n          _this3.setState({\n            requestInProgress: false,\n            lastError: err\n          });\n        });\n      });\n    }\n  }, {\n    key: \"validateAll\",\n    // Run validation on all dependencies\n    value: function validateAll() {\n      if (!this.refs['recipient_mg'].validateRequiredFields()) {\n        NotificationsActions.error('Faltan algunos campos requeridos del receptor');\n        return false;\n      }\n\n      if (!this.refs['issuer_mg'].validateRequiredFields()) {\n        NotificationsActions.error('Faltan algunos campos requeridos del emisor');\n        return false;\n      }\n\n      if (!this.refs['line_item_mgs'].validateAllCharges()) {\n        NotificationsActions.error('Faltan algunos campos requeridos de los conceptos');\n        return false;\n      }\n\n      if (!this.refs['add_ons'].validateAllAddOns()) {\n        NotificationsActions.error('Faltan algunos campos requeridos de los complementos');\n        return false;\n      }\n\n      return true;\n    } // Create base invoice from all the data in issuer, recipient, charges and add-ons\n\n  }, {\n    key: \"createBaseInvoice\",\n    value: function createBaseInvoice() {\n      // Fields for top level invoice object\n      var invoice = Object.assign.apply(Object, [this.refs['issuer_mg'].exportInvoice(), this.refs['recipient_mg'].exportInvoice(), this.refs['line_item_mgs'].exportTotals()].concat(_toConsumableArray(this.refs['add_ons'].exportAllAddOns()), [this.state.invoice])); // Deep objects inside top level invoice\n\n      invoice['line_item_mgs'] = this.refs['line_item_mgs'].exportCharges();\n      invoice = this.formatInvoiceCents(invoice);\n      return invoice;\n    }\n  }, {\n    key: \"formatInvoiceCents\",\n    // Run all cents formatting for every invoice amount that requires it\n    value: function formatInvoiceCents(invoice) {\n      this.remitedInvoice(invoice);\n      invoice['subtotal_cents'] = formatCents(invoice['subtotal_cents']);\n      invoice['total_cents'] = formatCents(invoice['total_cents']);\n      invoice['line_item_mgs'].forEach(function (charge) {\n        charge['unit_price_cents'] = formatCents(charge['unit_price_cents']);\n        charge['total_cents'] = formatCents(charge['total_cents']); // Add li_retained_tax_mgs or delete if empty\n\n        if (charge['li_tax_detail_mg']['li_retained_tax_mgs'].length > 0) {\n          charge['li_tax_detail_mg']['li_retained_tax_mgs'].forEach(function (tax) {\n            tax['amount_cents'] = formatCents(tax['amount_cents']);\n          });\n        } else {\n          delete charge['li_tax_detail_mg']['li_retained_tax_mgs'];\n        } // Add li_transferred_tax_mgs or delete if empty\n\n\n        if (charge['li_tax_detail_mg']['li_transferred_tax_mgs'].length > 0) {\n          charge['li_tax_detail_mg']['li_transferred_tax_mgs'].forEach(function (tax) {\n            tax['amount_cents'] = formatCents(tax['amount_cents']);\n          });\n        } else {\n          delete charge['li_tax_detail_mg']['li_transferred_tax_mgs'];\n        }\n      });\n      return invoice;\n    } // Generate hash for API\n    // Must follow API input format\n    // issuerInvoice and recipientInvoice are at the top level object\n    // issuer will become issuer_mg\n    // recipient will become recipient_mg\n    // add_ons will spread with their wrap name\n\n  }, {\n    key: \"makeInvoice\",\n    value: function makeInvoice() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$send = _ref4.send,\n          send = _ref4$send === void 0 ? false : _ref4$send,\n          _ref4$preview = _ref4.preview,\n          preview = _ref4$preview === void 0 ? false : _ref4$preview;\n\n      // Notify button click to GA\n      ReactGa.event(createGaEvent('facturación venta', 'click on button', 'generar factura'));\n      var lastError = '';\n\n      if (!this.validateAll()) {\n        return;\n      } // Wrap invoice inside invoice_mg object\n\n\n      var invoice = {\n        invoice_mg: this.createBaseInvoice(),\n        recipient: Object.assign({}, this.refs['recipient_mg'].exportRecipient())\n      }; // Fields and validation for CCE\n\n      if (invoice.invoice_mg.voucher_type === 'T') {\n        invoice = _objectSpread({}, invoice, {\n          invoice_mg: _objectSpread({}, _omit(invoice.invoice_mg, ['payment_form', 'payment_method']), {\n            subtotal_cents: 0,\n            total_cents: 0,\n            foreign_trade: _objectSpread({}, _omit(invoice.invoice_mg.foreign_trade, ['addressees'])),\n            line_item_mgs: _toConsumableArray(invoice.invoice_mg.line_item_mgs.map(function (item) {\n              return _objectSpread({}, _omit(item, ['li_tax_detail_mg']));\n            }))\n          })\n        });\n      } else {\n        invoice = _objectSpread({}, invoice, {\n          recipient: _objectSpread({}, _omit(invoice.recipient, ['entity_register_id', 'tax_residency']))\n        });\n      } // Adds branch attribute if a branch was selected\n\n\n      if (this.refs['issuer_mg'].exportBranch()) {\n        invoice.branch = this.refs['issuer_mg'].exportBranch();\n      }\n\n      var taxClassification = this.refs['issuer_mg'].exportTaxClassification();\n\n      if (taxClassification) {\n        invoice.invoice_mg.issuer_mg.tax_classification = taxClassification;\n      } // Remove all null properties from invoice\n      // Mongo might perform worse if null values are set\n      // So it's better to not send empty properties at all\n\n\n      var cleanInvoice = Object.assign({}, invoice);\n      cleanInvoice = removeEmpty(cleanInvoice);\n      this.uploadInvoice(cleanInvoice, send, preview);\n      this.setState({\n        lastError: lastError,\n        formQuit: true\n      });\n    } // Persist changes to invoice\n\n  }, {\n    key: \"onChangeInvoiceCategory\",\n    value: function onChangeInvoiceCategory(field, categoryId) {\n      this.setState({\n        invoice: update(this.state['invoice'], _defineProperty({}, field, {\n          $set: categoryId\n        }))\n      });\n    } // Updates the invoice category to call the right api route for invoice creation\n\n  }, {\n    key: \"onSelectAddon\",\n    value: function onSelectAddon(category) {\n      this.setState({\n        category: category\n      });\n    } // Handle changes to invoice totals\n\n  }, {\n    key: \"totalChanged\",\n    value: function totalChanged(_totalChanged) {\n      var _this4 = this;\n\n      this.setState({\n        totals: _totalChanged\n      }, function () {\n        _this4.refs['add_ons'].totalChanged(_this4.state.totals);\n      });\n    } // Return frequently used products response\n\n  }, {\n    key: \"getFrequentlyUsedProducts\",\n    value: function getFrequentlyUsedProducts() {\n      return this.state.frequentlyUsedData.products;\n    } // Return frequently used units response\n\n  }, {\n    key: \"getFrequentlyUsedUnits\",\n    value: function getFrequentlyUsedUnits() {\n      return this.state.frequentlyUsedData.units;\n    } // form validation listener\n\n  }, {\n    key: \"onValidationError\",\n    value: function onValidationError(error) {\n      ReactGa.event(createGaEvent('facturación venta', 'validation error', error));\n    }\n  }, {\n    key: \"render\",\n    // Main render\n    value: function render() {\n      var _this$state2 = this.state,\n          credentials = _this$state2.credentials,\n          loadedInvoice = _this$state2.loadedInvoice,\n          voucherType = _this$state2.voucherType,\n          legalType = _this$state2.legalType,\n          currentUser = _this$state2.currentUser,\n          remainingInvoices = _this$state2.remainingInvoices;\n      var hasCSD = Boolean(credentials.csd);\n      var role = currentUser.role;\n      var allowedUser = ['admin', 'account_holder', 'analyst'];\n      var disabled = !(hasCSD && allowedUser.includes(role)) || remainingInvoices === 0;\n      var plan = getClientsPlan();\n      var isCounterShowed = plan === 'free';\n      if (!this.state.usedDataReady) return null;\n      return React.createElement(Fragment, {\n        key: this.state.invoice[CATEGORY_KEY],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495\n        },\n        __self: this\n      }, React.createElement(CredentialsExpire, {\n        csd: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496\n        },\n        __self: this\n      }), React.createElement(Card, {\n        title: ENCONTA_INVOICE_CATEGORIES[legalType],\n        redirect: false,\n        onTabSwitch: this.onChangeInvoiceCategory.bind(this, CATEGORY_KEY),\n        activeTab: this.state['invoice'][CATEGORY_KEY],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497\n        },\n        __self: this\n      }, isCounterShowed && React.createElement(InvoiceCounter, {\n        usedInvoice: remainingInvoices,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504\n        },\n        __self: this\n      }), React.createElement(Issuer, {\n        ref: \"issuer_mg\",\n        location: this.props.location,\n        changeVoucherType: this.changeVoucherType,\n        voucherType: voucherType,\n        data: loadedInvoice ? createIssuer(loadedInvoice) : null,\n        category: this.state.category,\n        updateRemainingInvoices: this.updateRemainingInvoices,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506\n        },\n        __self: this\n      }), React.createElement(Recipient, {\n        ref: \"recipient_mg\",\n        onValidationError: this.onValidationError.bind(this),\n        hasFiscalFields: this.state.voucherType === 'T' && this.state.category === 'foreign_trade',\n        data: loadedInvoice ? createRecipient(loadedInvoice) : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515\n        },\n        __self: this\n      }), React.createElement(Charges, {\n        ref: \"line_item_mgs\",\n        recipe: this.state['invoice'][CATEGORY_KEY],\n        totalChanged: this.totalChanged.bind(this),\n        getFrequentlyUsedProducts: this.getFrequentlyUsedProducts.bind(this),\n        getFrequentlyUsedUnits: this.getFrequentlyUsedUnits.bind(this),\n        onValidationError: this.onValidationError.bind(this),\n        data: loadedInvoice ? loadedInvoice.line_items : [],\n        location: this.props.location,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525\n        },\n        __self: this\n      }), React.createElement(AddOns // Sección de complementos\n      , {\n        ref: \"add_ons\",\n        totals: this.state.totals,\n        onSelectAddon: this.onSelectAddon.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538\n        },\n        __self: this\n      }), React.createElement(Upload, {\n        loading: this.state.requestInProgress,\n        disabled: disabled,\n        makeInvoice: this.makeInvoice.bind(this, {\n          send: false\n        }),\n        makeInvoiceAndSend: this.makeInvoice.bind(this, {\n          send: true\n        }),\n        makePreviewInvoice: this.makeInvoice.bind(this, {\n          preview: true\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543\n        },\n        __self: this\n      })), React.createElement(MailerModal, {\n        isActive: this.state.openMailModal && this.state.generatedInvoice,\n        toggleModal: this.toggleMailModal,\n        invoice: this.state.generatedInvoice,\n        redirectOnSubmit: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Invoice;\n}(Component);\n\nInvoice.propTypes = {\n  location: PropTypes.shape({\n    query: PropTypes.shape({\n      invoice: PropTypes.string\n    })\n  })\n};\nexport default Invoice;","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/newInvoice/invoice/index.js"],"names":["React","Component","Fragment","PropTypes","update","browserHistory","ReactGa","_omit","AppSignal","API","NotificationsActions","SatCredentialsStore","SessionStore","SatCredentialsActions","Card","CredentialsExpire","ENCONTA_INVOICE_CATEGORIES","removeEmpty","formatCents","createGaEvent","hasDifference","getClientsPlan","Issuer","Recipient","Charges","Upload","AddOns","MailerModal","InvoiceCounter","createIssuer","createRecipient","ISSUER_MG_KEY","TAX_CLASSIFICATION_KEY","FREQUENTLY_USED_PRODUCTS_KEY","FREQUENTLY_USED_UNITS_KEY","FREQUENTLY_USED_CONCEPTS_KEY","VERSION_KEY","TYPE_KEY","SUBTYPE_KEY","CATEGORY_KEY","defaultInvoice","id","DISCOUNT_CENTS_KEY","SUBTOTAL_CENTS_KEY","TOTAL_CENTS_KEY","INVOICE_REQUEST_FUNCTIONS","function","Invoice","CreateRegular","CreateIne","CreateLocalTax","CreateForeignTrade","getCurrentState","credentials","getCredentials","legalType","getCurrentEntity","legal_type","currentUser","getUser","getInvoice","Show","invoice","setState","loadedInvoice","usedDataReady","state","category","subtype","type","voucherType","voucher_type","sendError","error","_onChange","updateRemainingInvoices","remainingInvoices","toggleMailModal","openMailModal","remitedInvoice","query","props","location","undefined","changeVoucherType","t","data","requestInProgress","requireFiel","totals","frequentlyUsedData","lastError","formQuit","generatedInvoice","addChangeListener","loadData","getFrequentlyUsedData","removeChangeListener","event","getSatCredentials","catch","e","GetUsedData","then","r","send","preview","findInvoiceCategory","find","request","response","blob","url","window","URL","createObjectURL","open","success","push","err","console","refs","validateRequiredFields","validateAllCharges","validateAllAddOns","Object","assign","exportInvoice","exportTotals","exportAllAddOns","exportCharges","formatInvoiceCents","forEach","charge","length","tax","validateAll","invoice_mg","createBaseInvoice","recipient","exportRecipient","subtotal_cents","total_cents","foreign_trade","line_item_mgs","map","item","exportBranch","branch","taxClassification","exportTaxClassification","issuer_mg","tax_classification","cleanInvoice","uploadInvoice","field","categoryId","$set","totalChanged","products","units","hasCSD","Boolean","csd","role","allowedUser","disabled","includes","plan","isCounterShowed","onChangeInvoiceCategory","bind","onValidationError","getFrequentlyUsedProducts","getFrequentlyUsedUnits","line_items","onSelectAddon","makeInvoice","propTypes","shape","string"],"mappings":"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","sourcesContent":["// Imports\nimport React, { Component, Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport update from 'immutability-helper'\nimport { browserHistory } from 'react-router'\nimport ReactGa from 'react-ga'\nimport _omit from 'lodash/omit'\nimport AppSignal from 'appsignal'\n\n// Custom components\nimport API from 'api'\nimport NotificationsActions from 'actions/notifications'\nimport SatCredentialsStore from 'stores/satCredentials'\nimport SessionStore from 'stores/session'\nimport SatCredentialsActions from 'actions/satCredentials'\nimport Card from 'shared/card'\nimport CredentialsExpire from 'shared/credentials'\nimport { ENCONTA_INVOICE_CATEGORIES } from 'shared/catalogs'\nimport {\n  removeEmpty,\n  formatCents,\n  createGaEvent,\n  hasDifference,\n  getClientsPlan\n} from 'utils'\n\n// Invoice sub-views\nimport Issuer from './../shared/issuer'\nimport Recipient from './../shared/recipient'\nimport Charges from './../shared/charges'\nimport Upload from './../shared/upload'\nimport AddOns from './../complementos'\nimport MailerModal from '../../viewInvoice/mailerModal'\nimport InvoiceCounter from '../shared/invoiceCounter'\n\nimport { createIssuer, createRecipient } from '../utils'\nimport { ISSUER_MG_KEY, TAX_CLASSIFICATION_KEY } from '../constants'\n\n// Constantes de prueba\nconst FREQUENTLY_USED_PRODUCTS_KEY = 'products'\nconst FREQUENTLY_USED_UNITS_KEY = 'units'\nconst FREQUENTLY_USED_CONCEPTS_KEY = 'concepts'\n\n// Invoice keys\nconst VERSION_KEY = 'version'\nconst TYPE_KEY = 'type'\nconst SUBTYPE_KEY = 'subtype'\nconst CATEGORY_KEY = 'category'\n\nconst defaultInvoice = {\n  [VERSION_KEY]: '3.3',\n  [TYPE_KEY]: 0,\n  [SUBTYPE_KEY]: 0,\n  [CATEGORY_KEY]: ENCONTA_INVOICE_CATEGORIES['individual'][0].id,\n  [ISSUER_MG_KEY]: { [TAX_CLASSIFICATION_KEY]: '' }\n}\n\n// Tax Detail keys\nconst DISCOUNT_CENTS_KEY = 'discount_cents'\nconst SUBTOTAL_CENTS_KEY = 'subtotal_cents'\nconst TOTAL_CENTS_KEY = 'total_cents'\n\n// Invoice creation\nconst INVOICE_REQUEST_FUNCTIONS = [\n  { id: 'regular', function: API.Invoice.CreateRegular },\n  { id: 'ine', function: API.Invoice.CreateIne },\n  { id: 'local_tax', function: API.Invoice.CreateLocalTax },\n  { id: 'foreign_trade', function: API.Invoice.CreateForeignTrade }\n]\n\nconst getCurrentState = () => ({\n  credentials: SatCredentialsStore.getCredentials(),\n  legalType: SessionStore.getCurrentEntity().legal_type,\n  currentUser: SessionStore.getUser()\n})\n\nclass Invoice extends Component {\n  static propTypes = {\n    location: PropTypes.shape({\n      query: PropTypes.shape({\n        invoice: PropTypes.string\n      })\n    })\n  }\n\n  constructor () {\n    super()\n    this.data = {\n      category: 'regular',\n      requestInProgress: false,\n      requireFiel: false,\n      invoice: defaultInvoice,\n      totals: {\n        [DISCOUNT_CENTS_KEY]: 0,\n        [SUBTOTAL_CENTS_KEY]: 0,\n        [TOTAL_CENTS_KEY]: 0\n      },\n      frequentlyUsedData: {\n        [FREQUENTLY_USED_PRODUCTS_KEY]: [],\n        [FREQUENTLY_USED_UNITS_KEY]: [],\n        [FREQUENTLY_USED_CONCEPTS_KEY]: []\n      },\n      usedDataReady: false,\n      // Save last error in case form quit\n      lastError: '',\n      // Assume if you open this view you want to finish the form\n      formQuit: true,\n      voucherType: 'I',\n      loadedInvoice: null,\n      openMailModal: false,\n      generatedInvoice: {},\n      remainingInvoices: 0\n    }\n\n    this.state = {\n      ...this.data,\n      ...getCurrentState()\n    }\n  }\n\n  componentDidMount () {\n    const { query } = this.props.location\n\n    SatCredentialsStore.addChangeListener(this._onChange)\n    this.loadData()\n\n    if (query.invoice) {\n      this.getInvoice(query.invoice)\n    } else {\n      this.getFrequentlyUsedData()\n    }\n  }\n\n  componentWillUnmount () {\n    SatCredentialsStore.removeChangeListener(this._onChange)\n\n    const { formQuit, lastError } = this.state\n    // Notify form quit\n    if (formQuit) {\n      ReactGa.event(createGaEvent('facturación venta', 'form quit', lastError))\n    }\n  }\n\n  getInvoice = async id => {\n    try {\n      const { invoice } = await API.Invoice.Show(id)\n      this.setState({\n        loadedInvoice: invoice,\n        usedDataReady: true,\n        invoice: {\n          ...this.state.invoice,\n          category: 'other',\n          subtype: invoice.subtype,\n          type: invoice.type\n        },\n        voucherType:\n          invoice.voucher_type === 'ingreso' || invoice.voucher_type === 'i'\n            ? 'I'\n            : 'T'\n      })\n    } catch (error) {\n      AppSignal.sendError(error)\n      NotificationsActions.error(\n        'No se pudo cargar la información de la factura'\n      )\n    }\n  }\n\n  _onChange = () => {\n    // When the store changes, the state goes to it and pulls the updated data\n    // then sets it so the component rerenders\n    const { credentials } = getCurrentState()\n\n    if (hasDifference(this.state.credentials, credentials)) {\n      this.setState({ credentials })\n    }\n  }\n\n  loadData () {\n    SatCredentialsActions.getSatCredentials().catch(e =>\n      NotificationsActions.error(e)\n    )\n  }\n\n  // Make API call to get frequently used data\n  getFrequentlyUsedData () {\n    API.Invoice.GetUsedData()\n      .then(r => {\n        this.setState({\n          frequentlyUsedData: r,\n          usedDataReady: true\n        })\n      })\n      .catch(error => {\n        AppSignal.sendError(error)\n      })\n  }\n\n  // Clean an invoice\n  cleanAll () {\n    // TODO: Implement invoice cleaning\n  }\n\n  // Make API call to upload invoice\n  uploadInvoice (invoice, send, preview) {\n    if (preview) {\n      invoice.preview = true\n    }\n\n    const findInvoiceCategory = INVOICE_REQUEST_FUNCTIONS.find(\n      request => request.id === this.state.category\n    )\n\n    this.setState({ requestInProgress: true, formQuit: true }, () => {\n      findInvoiceCategory\n        .function(invoice, preview)\n        .then(async response => {\n          this.setState({\n            requestInProgress: false,\n            formQuit: false,\n            lastError: ''\n          })\n\n          if (preview) {\n            ReactGa.event(\n              createGaEvent(\n                'preview facturación venta',\n                'result',\n                'factura generada'\n              )\n            )\n\n            const data = await response.blob()\n            const url = window.URL.createObjectURL(data)\n            window.open(url)\n\n            return\n          }\n\n          if (send) {\n            ReactGa.event(\n              createGaEvent(\n                'facturación venta y enviar',\n                'result',\n                'factura generada'\n              )\n            )\n            this.setState(\n              { generatedInvoice: response.invoice },\n              this.toggleMailModal\n            )\n            return\n          }\n\n          NotificationsActions.success('Factura emitida')\n          ReactGa.event(\n            createGaEvent('facturación venta', 'result', 'factura generada')\n          )\n\n          browserHistory.push(`/facturas/ver/${response.invoice.id}`)\n        })\n        .catch(err => {\n          // Notify failure to GA\n          ReactGa.event(\n            createGaEvent(\n              'facturación venta',\n              'result',\n              'error al generar factura'\n            )\n          )\n          console.error(err)\n          NotificationsActions.error(err)\n          this.setState({ requestInProgress: false, lastError: err })\n        })\n    })\n  }\n  updateRemainingInvoices = remainingInvoices => {\n    this.setState({ remainingInvoices })\n  }\n  toggleMailModal = () => {\n    this.setState(state => ({ openMailModal: !state.openMailModal }))\n  }\n\n  // Run validation on all dependencies\n  validateAll () {\n    if (!this.refs['recipient_mg'].validateRequiredFields()) {\n      NotificationsActions.error(\n        'Faltan algunos campos requeridos del receptor'\n      )\n      return false\n    }\n\n    if (!this.refs['issuer_mg'].validateRequiredFields()) {\n      NotificationsActions.error('Faltan algunos campos requeridos del emisor')\n      return false\n    }\n\n    if (!this.refs['line_item_mgs'].validateAllCharges()) {\n      NotificationsActions.error(\n        'Faltan algunos campos requeridos de los conceptos'\n      )\n      return false\n    }\n    if (!this.refs['add_ons'].validateAllAddOns()) {\n      NotificationsActions.error(\n        'Faltan algunos campos requeridos de los complementos'\n      )\n      return false\n    }\n\n    return true\n  }\n\n  // Create base invoice from all the data in issuer, recipient, charges and add-ons\n  createBaseInvoice () {\n    // Fields for top level invoice object\n    let invoice = Object.assign(\n      this.refs['issuer_mg'].exportInvoice(),\n      this.refs['recipient_mg'].exportInvoice(),\n      this.refs['line_item_mgs'].exportTotals(),\n      ...this.refs['add_ons'].exportAllAddOns(),\n      this.state.invoice\n    )\n\n    // Deep objects inside top level invoice\n    invoice['line_item_mgs'] = this.refs['line_item_mgs'].exportCharges()\n\n    invoice = this.formatInvoiceCents(invoice)\n\n    return invoice\n  }\n\n  remitedInvoice = invoice => {\n    const { query } = this.props.location\n    query.invoice === undefined &&\n      (invoice['discount_cents'] = formatCents(invoice['discount_cents']))\n  }\n\n  // Run all cents formatting for every invoice amount that requires it\n  formatInvoiceCents (invoice) {\n    this.remitedInvoice(invoice)\n    invoice['subtotal_cents'] = formatCents(invoice['subtotal_cents'])\n    invoice['total_cents'] = formatCents(invoice['total_cents'])\n\n    invoice['line_item_mgs'].forEach(charge => {\n      charge['unit_price_cents'] = formatCents(charge['unit_price_cents'])\n      charge['total_cents'] = formatCents(charge['total_cents'])\n      // Add li_retained_tax_mgs or delete if empty\n      if (charge['li_tax_detail_mg']['li_retained_tax_mgs'].length > 0) {\n        charge['li_tax_detail_mg']['li_retained_tax_mgs'].forEach(tax => {\n          tax['amount_cents'] = formatCents(tax['amount_cents'])\n        })\n      } else {\n        delete charge['li_tax_detail_mg']['li_retained_tax_mgs']\n      }\n      // Add li_transferred_tax_mgs or delete if empty\n      if (charge['li_tax_detail_mg']['li_transferred_tax_mgs'].length > 0) {\n        charge['li_tax_detail_mg']['li_transferred_tax_mgs'].forEach(tax => {\n          tax['amount_cents'] = formatCents(tax['amount_cents'])\n        })\n      } else {\n        delete charge['li_tax_detail_mg']['li_transferred_tax_mgs']\n      }\n    })\n    return invoice\n  }\n\n  // Generate hash for API\n  // Must follow API input format\n  // issuerInvoice and recipientInvoice are at the top level object\n  // issuer will become issuer_mg\n  // recipient will become recipient_mg\n  // add_ons will spread with their wrap name\n  makeInvoice ({ send = false, preview = false } = {}) {\n    // Notify button click to GA\n    ReactGa.event(\n      createGaEvent('facturación venta', 'click on button', 'generar factura')\n    )\n    let lastError = ''\n    if (!this.validateAll()) {\n      return\n    }\n    // Wrap invoice inside invoice_mg object\n    let invoice = {\n      invoice_mg: this.createBaseInvoice(),\n      recipient: Object.assign({}, this.refs['recipient_mg'].exportRecipient())\n    }\n\n    // Fields and validation for CCE\n    if (invoice.invoice_mg.voucher_type === 'T') {\n      invoice = {\n        ...invoice,\n        invoice_mg: {\n          ..._omit(invoice.invoice_mg, ['payment_form', 'payment_method']),\n          subtotal_cents: 0,\n          total_cents: 0,\n          foreign_trade: {\n            ..._omit(invoice.invoice_mg.foreign_trade, ['addressees'])\n          },\n          line_item_mgs: [\n            ...invoice.invoice_mg.line_item_mgs.map(item => ({\n              ..._omit(item, ['li_tax_detail_mg'])\n            }))\n          ]\n        }\n      }\n    } else {\n      invoice = {\n        ...invoice,\n        recipient: {\n          ..._omit(invoice.recipient, ['entity_register_id', 'tax_residency'])\n        }\n      }\n    }\n\n    // Adds branch attribute if a branch was selected\n    if (this.refs['issuer_mg'].exportBranch()) {\n      invoice.branch = this.refs['issuer_mg'].exportBranch()\n    }\n\n    let taxClassification = this.refs['issuer_mg'].exportTaxClassification()\n    if (taxClassification) {\n      invoice.invoice_mg.issuer_mg.tax_classification = taxClassification\n    }\n\n    // Remove all null properties from invoice\n    // Mongo might perform worse if null values are set\n    // So it's better to not send empty properties at all\n    let cleanInvoice = Object.assign({}, invoice)\n    cleanInvoice = removeEmpty(cleanInvoice)\n\n    this.uploadInvoice(cleanInvoice, send, preview)\n\n    this.setState({ lastError, formQuit: true })\n  }\n\n  // Persist changes to invoice\n  onChangeInvoiceCategory (field, categoryId) {\n    this.setState({\n      invoice: update(this.state['invoice'], { [field]: { $set: categoryId } })\n    })\n  }\n\n  // Updates the invoice category to call the right api route for invoice creation\n  onSelectAddon (category) {\n    this.setState({ category: category })\n  }\n  // Handle changes to invoice totals\n  totalChanged (totalChanged) {\n    this.setState({ totals: totalChanged }, () => {\n      this.refs['add_ons'].totalChanged(this.state.totals)\n    })\n  }\n\n  // Return frequently used products response\n  getFrequentlyUsedProducts () {\n    return this.state.frequentlyUsedData.products\n  }\n\n  // Return frequently used units response\n  getFrequentlyUsedUnits () {\n    return this.state.frequentlyUsedData.units\n  }\n\n  // form validation listener\n  onValidationError (error) {\n    ReactGa.event(createGaEvent('facturación venta', 'validation error', error))\n  }\n\n  changeVoucherType = t => {\n    this.setState({ voucherType: t })\n  }\n\n  // Main render\n  render () {\n    const {\n      credentials,\n      loadedInvoice,\n      voucherType,\n      legalType,\n      currentUser,\n      remainingInvoices\n    } = this.state\n    const hasCSD = Boolean(credentials.csd)\n    const { role } = currentUser\n    const allowedUser = ['admin', 'account_holder', 'analyst']\n    const disabled =\n      !(hasCSD && allowedUser.includes(role)) || remainingInvoices === 0\n    const plan = getClientsPlan()\n    const isCounterShowed = plan === 'free'\n\n    if (!this.state.usedDataReady) return null\n\n    return (\n      <Fragment key={this.state.invoice[CATEGORY_KEY]}>\n        <CredentialsExpire csd />\n        <Card\n          title={ENCONTA_INVOICE_CATEGORIES[legalType]}\n          redirect={false}\n          onTabSwitch={this.onChangeInvoiceCategory.bind(this, CATEGORY_KEY)}\n          activeTab={this.state['invoice'][CATEGORY_KEY]}\n        >\n          {isCounterShowed && (\n            <InvoiceCounter usedInvoice={remainingInvoices} />\n          )}\n          <Issuer\n            ref='issuer_mg'\n            location={this.props.location}\n            changeVoucherType={this.changeVoucherType}\n            voucherType={voucherType}\n            data={loadedInvoice ? createIssuer(loadedInvoice) : null}\n            category={this.state.category}\n            updateRemainingInvoices={this.updateRemainingInvoices}\n          />\n          <Recipient\n            ref='recipient_mg'\n            onValidationError={this.onValidationError.bind(this)}\n            hasFiscalFields={\n              this.state.voucherType === 'T' &&\n              this.state.category === 'foreign_trade'\n            }\n            data={loadedInvoice ? createRecipient(loadedInvoice) : null}\n          />\n\n          <Charges\n            ref='line_item_mgs'\n            recipe={this.state['invoice'][CATEGORY_KEY]}\n            totalChanged={this.totalChanged.bind(this)}\n            getFrequentlyUsedProducts={this.getFrequentlyUsedProducts.bind(\n              this\n            )}\n            getFrequentlyUsedUnits={this.getFrequentlyUsedUnits.bind(this)}\n            onValidationError={this.onValidationError.bind(this)}\n            data={loadedInvoice ? loadedInvoice.line_items : []}\n            location={this.props.location}\n          />\n\n          <AddOns // Sección de complementos\n            ref='add_ons'\n            totals={this.state.totals}\n            onSelectAddon={this.onSelectAddon.bind(this)}\n          />\n          <Upload\n            loading={this.state.requestInProgress}\n            disabled={disabled}\n            makeInvoice={this.makeInvoice.bind(this, { send: false })}\n            makeInvoiceAndSend={this.makeInvoice.bind(this, { send: true })}\n            makePreviewInvoice={this.makeInvoice.bind(this, { preview: true })}\n          />\n        </Card>\n\n        <MailerModal\n          isActive={this.state.openMailModal && this.state.generatedInvoice}\n          toggleModal={this.toggleMailModal}\n          invoice={this.state.generatedInvoice}\n          redirectOnSubmit\n        />\n      </Fragment>\n    )\n  }\n}\n\nexport default Invoice\n"]},"metadata":{},"sourceType":"module"}