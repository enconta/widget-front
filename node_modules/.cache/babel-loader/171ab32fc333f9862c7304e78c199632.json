{"ast":null,"code":"import _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _defaultPayroll,\n    _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/newInvoice/shared/employee/index.js\";\n\n// Libraries\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport DatePicker from 'react-datepicker';\nimport { Async } from 'react-select';\nimport _Nil from 'lodash/isNil';\nimport AppSignal from 'appsignal'; // Components\n\nimport API from 'api';\nimport { countDays, formatDateInvoice } from 'utils'; // Employee keys\n\nvar EMPLOYEE_KEY = 'employee'; // Payroll keys\n\nvar PAYROLL_KEY = 'payroll_mg';\nvar PAYROLL_VERSION_KEY = 'version';\nvar PAYROLL_TYPE_KEY = 'payroll_type';\nvar PAYROLL_DAYS_KEY = 'paid_days';\nvar PAYROLL_START_DATE_KEY = 'starting_payment_period';\nvar PAYROLL_END_DATE_KEY = 'ending_payment_period';\nvar PAYROLL_PAYMENT_DATE_KEY = 'payment_date';\nvar FULL_NAME_KEY = 'full_name';\nvar defaultPayroll = (_defaultPayroll = {}, _defineProperty(_defaultPayroll, PAYROLL_VERSION_KEY, '1.2'), _defineProperty(_defaultPayroll, PAYROLL_TYPE_KEY, 'O'), _defineProperty(_defaultPayroll, PAYROLL_START_DATE_KEY, moment()), _defineProperty(_defaultPayroll, PAYROLL_END_DATE_KEY, moment()), _defineProperty(_defaultPayroll, PAYROLL_DAYS_KEY, 1), _defineProperty(_defaultPayroll, PAYROLL_PAYMENT_DATE_KEY, moment()), _defaultPayroll);\n\nvar Employee =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Employee, _Component);\n\n  function Employee() {\n    var _this$data;\n\n    var _this;\n\n    _classCallCheck(this, Employee);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Employee).call(this));\n    _this.data = (_this$data = {}, _defineProperty(_this$data, EMPLOYEE_KEY, null), _defineProperty(_this$data, PAYROLL_KEY, defaultPayroll), _defineProperty(_this$data, \"isValid\", _defineProperty({}, EMPLOYEE_KEY, true)), _this$data);\n    _this.state = Object.assign({}, _this.data);\n    return _this;\n  } // Get clients for current taxable entity\n\n\n  _createClass(Employee, [{\n    key: \"getEmployees\",\n    value: function getEmployees(input) {\n      var _API$EditClient$GetEm,\n          _this2 = this;\n\n      return API.EditClient.GetEmployeesList((_API$EditClient$GetEm = {}, _defineProperty(_API$EditClient$GetEm, FULL_NAME_KEY, input), _defineProperty(_API$EditClient$GetEm, \"deactivated\", 'false'), _API$EditClient$GetEm)).then(function (response) {\n        _this2.setState({\n          employees: response.employees\n        });\n\n        return {\n          options: _this2.parseEmployees(response.employees)\n        };\n      }).catch(function (error) {\n        AppSignal.sendError(error);\n        throw error;\n      });\n    } // Convert an array of employees in a format that react-select will understand\n\n  }, {\n    key: \"parseEmployees\",\n    value: function parseEmployees(employees) {\n      return employees.map(function (employee) {\n        return {\n          value: employee.id,\n          label: employee[FULL_NAME_KEY]\n        };\n      }).filter(function (employee) {\n        return employee.label;\n      });\n    } // Export payroll data\n\n  }, {\n    key: \"exportPayroll\",\n    value: function exportPayroll() {\n      var _Object$assign;\n\n      return Object.assign({}, this.state[PAYROLL_KEY], (_Object$assign = {}, _defineProperty(_Object$assign, PAYROLL_PAYMENT_DATE_KEY, formatDateInvoice(this.state[PAYROLL_KEY][PAYROLL_PAYMENT_DATE_KEY])), _defineProperty(_Object$assign, PAYROLL_START_DATE_KEY, formatDateInvoice(this.state[PAYROLL_KEY][PAYROLL_START_DATE_KEY])), _defineProperty(_Object$assign, PAYROLL_END_DATE_KEY, formatDateInvoice(this.state[PAYROLL_KEY][PAYROLL_END_DATE_KEY])), _Object$assign));\n    } // Export employee data\n\n  }, {\n    key: \"exportEmployee\",\n    value: function exportEmployee() {\n      if (this.state[EMPLOYEE_KEY] && !_Nil(this.state[EMPLOYEE_KEY].value)) {\n        return {\n          id: this.state[EMPLOYEE_KEY].value,\n          cfdi_usage: 'P01'\n        };\n      }\n\n      return null;\n    } // Persist selected employee to state\n\n  }, {\n    key: \"setEmployee\",\n    value: function setEmployee(employee) {\n      this.setState(_defineProperty({}, EMPLOYEE_KEY, employee), this.isValidEmployee);\n    } // Return false if employee is not set on state\n\n  }, {\n    key: \"isValidEmployee\",\n    value: function isValidEmployee() {\n      this.setState({\n        isValid: update(this.state.isValid, _defineProperty({}, EMPLOYEE_KEY, {\n          $set: !!this.state[EMPLOYEE_KEY]\n        }))\n      });\n      var isValidEmployee = !!this.state[EMPLOYEE_KEY];\n\n      if (!isValidEmployee) {\n        this.props.onValidationError('empleado - campo requerido');\n      }\n\n      return isValidEmployee;\n    } // Handle changes to payroll startDate, counts days between payroll start and end date\n\n  }, {\n    key: \"onChangeStartDate\",\n    value: function onChangeStartDate(e) {\n      var payroll = update(this.state[PAYROLL_KEY], _defineProperty({}, PAYROLL_START_DATE_KEY, {\n        $set: e\n      }));\n      payroll = update(payroll, _defineProperty({}, PAYROLL_DAYS_KEY, {\n        $set: countDays(e, this.state[PAYROLL_KEY][PAYROLL_END_DATE_KEY]) + 1\n      }));\n      this.setState(_defineProperty({}, PAYROLL_KEY, payroll));\n    } // Handle changes to payroll endDate, counts days between payroll start and end date\n\n  }, {\n    key: \"onChangeEndDate\",\n    value: function onChangeEndDate(e) {\n      var payroll = update(this.state[PAYROLL_KEY], _defineProperty({}, PAYROLL_END_DATE_KEY, {\n        $set: e\n      }));\n      payroll = update(payroll, _defineProperty({}, PAYROLL_DAYS_KEY, {\n        $set: countDays(this.state[PAYROLL_KEY][PAYROLL_START_DATE_KEY], e) + 1\n      }));\n      this.setState(_defineProperty({}, PAYROLL_KEY, payroll));\n    } // Handle changes to payroll field\n\n  }, {\n    key: \"onChangePayroll\",\n    value: function onChangePayroll(field, e) {\n      this.setState(_defineProperty({}, PAYROLL_KEY, update(this.state[PAYROLL_KEY], _defineProperty({}, field, {\n        $set: field === PAYROLL_PAYMENT_DATE_KEY ? e : e.target.value\n      }))));\n    } // Render employee select field and data if an employee is selected\n\n  }, {\n    key: \"renderEmployee\",\n    value: function renderEmployee() {\n      var _this3 = this;\n\n      var renderEmployee = null;\n\n      if (this.state[EMPLOYEE_KEY] && this.state.employees.length > 0) {\n        var employee = this.state.employees.find(function (employee) {\n          return employee.id === _this3.state[EMPLOYEE_KEY].value;\n        });\n        var fullName = employee[FULL_NAME_KEY],\n            rfc = employee.rfc,\n            curp = employee.curp;\n        renderEmployee = React.createElement(\"div\", {\n          className: \"card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, React.createElement(\"header\", {\n          className: \"card-header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, typeof fullName !== 'undefined' ? React.createElement(\"p\", {\n          className: \"card-header-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, \"Nombre: \", fullName) : null), React.createElement(\"div\", {\n          className: \"card-content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }, typeof rfc !== 'undefined' ? React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, \"RFC: \", rfc) : null, typeof curp !== 'undefined' ? React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }, \"CURP: \", curp) : null)));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"caption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"Empleado *\"), React.createElement(\"div\", {\n        className: classNames('control espacio-medium', {\n          'select-required': !this.state[EMPLOYEE_KEY]\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(Async, {\n        value: this.state[EMPLOYEE_KEY],\n        loadOptions: this.getEmployees.bind(this),\n        clearable: true,\n        placeholder: \"Selecciona un Empleado\",\n        loadingPlaceholder: \"Buscando\",\n        searchPromptText: \"Teclear el nombre del empleado\",\n        noResultsText: \"No encontrado\",\n        onChange: this.setEmployee.bind(this),\n        onBlur: this.isValidEmployee.bind(this),\n        ignoreAccents: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: classNames('help is-danger', {\n          'is-hidden': this.state.isValid[EMPLOYEE_KEY]\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"Este campo es requerido\")), renderEmployee));\n    } // Main render\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"subheader-green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \"Empleado\"), this.renderEmployee(), React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"caption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"Fecha inicial\"), React.createElement(\"div\", {\n        className: \"control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(DatePicker, {\n        className: classNames('input', {\n          'is-danger': moment(this.state[PAYROLL_KEY][PAYROLL_START_DATE_KEY]).isAfter(this.state[PAYROLL_KEY][PAYROLL_END_DATE_KEY])\n        }),\n        selected: this.state[PAYROLL_KEY][PAYROLL_START_DATE_KEY],\n        onChange: this.onChangeStartDate.bind(this),\n        locale: \"es-MX\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"caption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, \"Fecha final\"), React.createElement(\"div\", {\n        className: \"control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(DatePicker, {\n        className: classNames('input', {\n          'is-danger': moment(this.state[PAYROLL_KEY][PAYROLL_START_DATE_KEY]).isAfter(this.state[PAYROLL_KEY][PAYROLL_END_DATE_KEY])\n        }),\n        selected: this.state[PAYROLL_KEY][PAYROLL_END_DATE_KEY],\n        onChange: this.onChangeEndDate.bind(this),\n        locale: \"es-MX\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"caption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \"D\\xEDas pagados\"), React.createElement(\"div\", {\n        className: \"control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"input is-disabled\",\n        value: this.state[PAYROLL_KEY][PAYROLL_DAYS_KEY],\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"caption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, \"Fecha de pago\"), React.createElement(\"div\", {\n        className: \"control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, React.createElement(DatePicker, {\n        className: \"input\",\n        selected: this.state[PAYROLL_KEY][PAYROLL_PAYMENT_DATE_KEY],\n        onChange: this.onChangePayroll.bind(this, PAYROLL_PAYMENT_DATE_KEY),\n        locale: \"es-MX\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }))))))));\n    }\n  }]);\n\n  return Employee;\n}(Component);\n\nEmployee.propTypes = {\n  onValidationError: PropTypes.func\n};\nEmployee.defaultProps = {\n  onValidationError: function onValidationError() {}\n};\nexport default Employee;","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/newInvoice/shared/employee/index.js"],"names":["React","Component","PropTypes","update","classNames","moment","DatePicker","Async","_Nil","AppSignal","API","countDays","formatDateInvoice","EMPLOYEE_KEY","PAYROLL_KEY","PAYROLL_VERSION_KEY","PAYROLL_TYPE_KEY","PAYROLL_DAYS_KEY","PAYROLL_START_DATE_KEY","PAYROLL_END_DATE_KEY","PAYROLL_PAYMENT_DATE_KEY","FULL_NAME_KEY","defaultPayroll","Employee","data","state","Object","assign","input","EditClient","GetEmployeesList","then","response","setState","employees","options","parseEmployees","catch","error","sendError","map","employee","value","id","label","filter","cfdi_usage","isValidEmployee","isValid","$set","props","onValidationError","e","payroll","field","target","renderEmployee","length","find","fullName","rfc","curp","getEmployees","bind","setEmployee","isAfter","onChangeStartDate","onChangeEndDate","onChangePayroll","propTypes","func","defaultProps"],"mappings":"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","sourcesContent":["// Libraries\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport update from 'immutability-helper'\nimport classNames from 'classnames'\nimport moment from 'moment'\nimport DatePicker from 'react-datepicker'\nimport { Async } from 'react-select'\nimport _Nil from 'lodash/isNil'\nimport AppSignal from 'appsignal'\n\n// Components\nimport API from 'api'\nimport { countDays, formatDateInvoice } from 'utils'\n\n// Employee keys\nconst EMPLOYEE_KEY = 'employee'\n\n// Payroll keys\nconst PAYROLL_KEY = 'payroll_mg'\nconst PAYROLL_VERSION_KEY = 'version'\nconst PAYROLL_TYPE_KEY = 'payroll_type'\nconst PAYROLL_DAYS_KEY = 'paid_days'\nconst PAYROLL_START_DATE_KEY = 'starting_payment_period'\nconst PAYROLL_END_DATE_KEY = 'ending_payment_period'\nconst PAYROLL_PAYMENT_DATE_KEY = 'payment_date'\n\nconst FULL_NAME_KEY = 'full_name'\n\nconst defaultPayroll = {\n  [PAYROLL_VERSION_KEY]: '1.2',\n  [PAYROLL_TYPE_KEY]: 'O',\n  [PAYROLL_START_DATE_KEY]: moment(),\n  [PAYROLL_END_DATE_KEY]: moment(),\n  [PAYROLL_DAYS_KEY]: 1,\n  [PAYROLL_PAYMENT_DATE_KEY]: moment()\n}\n\nclass Employee extends Component {\n  constructor () {\n    super()\n    this.data = {\n      [EMPLOYEE_KEY]: null,\n      [PAYROLL_KEY]: defaultPayroll,\n      isValid: {\n        [EMPLOYEE_KEY]: true\n      }\n    }\n    this.state = Object.assign({}, this.data)\n  }\n\n  // Get clients for current taxable entity\n  getEmployees (input) {\n    return API.EditClient.GetEmployeesList({\n      [FULL_NAME_KEY]: input,\n      deactivated: 'false'\n    })\n      .then(response => {\n        this.setState({ employees: response.employees })\n        return { options: this.parseEmployees(response.employees) }\n      })\n      .catch(error => {\n        AppSignal.sendError(error)\n        throw error\n      })\n  }\n\n  // Convert an array of employees in a format that react-select will understand\n  parseEmployees (employees) {\n    return employees\n      .map(employee => ({\n        value: employee.id,\n        label: employee[FULL_NAME_KEY]\n      }))\n      .filter(employee => employee.label)\n  }\n\n  // Export payroll data\n  exportPayroll () {\n    return Object.assign({}, this.state[PAYROLL_KEY], {\n      [PAYROLL_PAYMENT_DATE_KEY]: formatDateInvoice(\n        this.state[PAYROLL_KEY][PAYROLL_PAYMENT_DATE_KEY]\n      ),\n      [PAYROLL_START_DATE_KEY]: formatDateInvoice(\n        this.state[PAYROLL_KEY][PAYROLL_START_DATE_KEY]\n      ),\n      [PAYROLL_END_DATE_KEY]: formatDateInvoice(\n        this.state[PAYROLL_KEY][PAYROLL_END_DATE_KEY]\n      )\n    })\n  }\n\n  // Export employee data\n  exportEmployee () {\n    if (this.state[EMPLOYEE_KEY] && !_Nil(this.state[EMPLOYEE_KEY].value)) {\n      return {\n        id: this.state[EMPLOYEE_KEY].value,\n        cfdi_usage: 'P01'\n      }\n    }\n\n    return null\n  }\n\n  // Persist selected employee to state\n  setEmployee (employee) {\n    this.setState({ [EMPLOYEE_KEY]: employee }, this.isValidEmployee)\n  }\n\n  // Return false if employee is not set on state\n  isValidEmployee () {\n    this.setState({\n      isValid: update(this.state.isValid, {\n        [EMPLOYEE_KEY]: { $set: !!this.state[EMPLOYEE_KEY] }\n      })\n    })\n    const isValidEmployee = !!this.state[EMPLOYEE_KEY]\n    if (!isValidEmployee) {\n      this.props.onValidationError('empleado - campo requerido')\n    }\n    return isValidEmployee\n  }\n\n  // Handle changes to payroll startDate, counts days between payroll start and end date\n  onChangeStartDate (e) {\n    let payroll = update(this.state[PAYROLL_KEY], {\n      [PAYROLL_START_DATE_KEY]: { $set: e }\n    })\n    payroll = update(payroll, {\n      [PAYROLL_DAYS_KEY]: {\n        $set: countDays(e, this.state[PAYROLL_KEY][PAYROLL_END_DATE_KEY]) + 1\n      }\n    })\n    this.setState({ [PAYROLL_KEY]: payroll })\n  }\n\n  // Handle changes to payroll endDate, counts days between payroll start and end date\n  onChangeEndDate (e) {\n    let payroll = update(this.state[PAYROLL_KEY], {\n      [PAYROLL_END_DATE_KEY]: { $set: e }\n    })\n    payroll = update(payroll, {\n      [PAYROLL_DAYS_KEY]: {\n        $set: countDays(this.state[PAYROLL_KEY][PAYROLL_START_DATE_KEY], e) + 1\n      }\n    })\n    this.setState({ [PAYROLL_KEY]: payroll })\n  }\n\n  // Handle changes to payroll field\n  onChangePayroll (field, e) {\n    this.setState({\n      [PAYROLL_KEY]: update(this.state[PAYROLL_KEY], {\n        [field]: {\n          $set: field === PAYROLL_PAYMENT_DATE_KEY ? e : e.target.value\n        }\n      })\n    })\n  }\n\n  // Render employee select field and data if an employee is selected\n  renderEmployee () {\n    let renderEmployee = null\n    if (this.state[EMPLOYEE_KEY] && this.state.employees.length > 0) {\n      let employee = this.state.employees.find(\n        employee => employee.id === this.state[EMPLOYEE_KEY].value\n      )\n      let { [FULL_NAME_KEY]: fullName, rfc, curp } = employee\n      renderEmployee = (\n        <div className='card'>\n          <header className='card-header'>\n            {typeof fullName !== 'undefined' ? (\n              <p className='card-header-title'>Nombre: {fullName}</p>\n            ) : null}\n          </header>\n          <div className='card-content'>\n            <div className='content'>\n              {typeof rfc !== 'undefined' ? <p>RFC: {rfc}</p> : null}\n              {typeof curp !== 'undefined' ? <p>CURP: {curp}</p> : null}\n            </div>\n          </div>\n        </div>\n      )\n    }\n    return (\n      <div className='columns'>\n        <div className='column'>\n          <label className='caption'>Empleado *</label>\n          <div\n            className={classNames('control espacio-medium', {\n              'select-required': !this.state[EMPLOYEE_KEY]\n            })}\n          >\n            <Async\n              value={this.state[EMPLOYEE_KEY]}\n              loadOptions={this.getEmployees.bind(this)}\n              clearable\n              placeholder='Selecciona un Empleado'\n              loadingPlaceholder='Buscando'\n              searchPromptText='Teclear el nombre del empleado'\n              noResultsText='No encontrado'\n              onChange={this.setEmployee.bind(this)}\n              onBlur={this.isValidEmployee.bind(this)}\n              ignoreAccents={false}\n            />\n            <span\n              className={classNames('help is-danger', {\n                'is-hidden': this.state.isValid[EMPLOYEE_KEY]\n              })}\n            >\n              Este campo es requerido\n            </span>\n          </div>\n          {renderEmployee}\n        </div>\n      </div>\n    )\n  }\n\n  // Main render\n  render () {\n    return (\n      <div>\n        <h2 className='subheader-green'>Empleado</h2>\n        {this.renderEmployee()}\n        <div className='columns'>\n          <div className='column'>\n            <div className='field'>\n              <div className='columns'>\n                <div className='column'>\n                  <label className='caption'>Fecha inicial</label>\n                  <div className='control'>\n                    <DatePicker\n                      className={classNames('input', {\n                        'is-danger': moment(\n                          this.state[PAYROLL_KEY][PAYROLL_START_DATE_KEY]\n                        ).isAfter(this.state[PAYROLL_KEY][PAYROLL_END_DATE_KEY])\n                      })}\n                      selected={this.state[PAYROLL_KEY][PAYROLL_START_DATE_KEY]}\n                      onChange={this.onChangeStartDate.bind(this)}\n                      locale='es-MX'\n                    />\n                  </div>\n                </div>\n                <div className='column'>\n                  <label className='caption'>Fecha final</label>\n                  <div className='control'>\n                    <DatePicker\n                      className={classNames('input', {\n                        'is-danger': moment(\n                          this.state[PAYROLL_KEY][PAYROLL_START_DATE_KEY]\n                        ).isAfter(this.state[PAYROLL_KEY][PAYROLL_END_DATE_KEY])\n                      })}\n                      selected={this.state[PAYROLL_KEY][PAYROLL_END_DATE_KEY]}\n                      onChange={this.onChangeEndDate.bind(this)}\n                      locale='es-MX'\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className='columns'>\n                <div className='column'>\n                  <label className='caption'>Días pagados</label>\n                  <div className='control'>\n                    <input\n                      type='text'\n                      className='input is-disabled'\n                      value={this.state[PAYROLL_KEY][PAYROLL_DAYS_KEY]}\n                      disabled\n                    />\n                  </div>\n                </div>\n                <div className='column'>\n                  <label className='caption'>Fecha de pago</label>\n                  <div className='control'>\n                    <DatePicker\n                      className='input'\n                      selected={\n                        this.state[PAYROLL_KEY][PAYROLL_PAYMENT_DATE_KEY]\n                      }\n                      onChange={this.onChangePayroll.bind(\n                        this,\n                        PAYROLL_PAYMENT_DATE_KEY\n                      )}\n                      locale='es-MX'\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nEmployee.propTypes = {\n  onValidationError: PropTypes.func\n}\n\nEmployee.defaultProps = {\n  onValidationError: () => {}\n}\n\nexport default Employee\n"]},"metadata":{},"sourceType":"module"}