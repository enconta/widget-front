{"ast":null,"code":"import _defineProperty from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/reports/behaviors/components/history.js\";\nimport React, { Component } from 'react';\nimport SelectField from 'shared/selectField';\nimport { calculateDates } from '../../rankings/utils';\nimport { calculateData, getEndMonth } from '../utils';\nimport API from 'api';\nimport NotificationsActions from 'actions/notifications';\nimport AppSignal from 'appsignal';\nimport Chart from './chart';\nimport accounting from 'accounting';\nimport { MONTHS, YEARS } from 'shared/catalogs';\nimport { PERIODS, TYPES_LABELS, PERIOD_LABELS } from '../../constants';\nvar FILL = {\n  incomes: '#21c4bb',\n  expenses: '#4184F5'\n};\n\nvar HistoryBehavior =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(HistoryBehavior, _Component);\n\n  function HistoryBehavior() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, HistoryBehavior);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(HistoryBehavior)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: [],\n      total: 0,\n      subtotal: 0,\n      currentShow: 'total',\n      filters: {\n        period: 'trimester',\n        month: new Date().getMonth(),\n        year: YEARS[0].id // default current year\n\n      }\n    };\n    _this.loadData =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var type, _calculateDates, startMonth, endMonth, _ref2, report, _report$reduce, total, subtotal, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              type = _this.props.type;\n              _calculateDates = calculateDates(_this.state.filters), startMonth = _calculateDates.startMonth, endMonth = _calculateDates.endMonth;\n              _context.prev = 2;\n              _context.next = 5;\n              return API.Reports.History({\n                type: type,\n                end_month: endMonth.format('YYYY-MM'),\n                start_month: startMonth.format('YYYY-MM')\n              });\n\n            case 5:\n              _ref2 = _context.sent;\n              report = _ref2.report;\n              _report$reduce = report.reduce(calculateData(type), {\n                total: 0,\n                subtotal: 0,\n                data: []\n              }), total = _report$reduce.total, subtotal = _report$reduce.subtotal, data = _report$reduce.data;\n\n              _this.setState({\n                data: data,\n                total: total,\n                subtotal: subtotal\n              });\n\n              if (data.length > 0) {\n                _this.setState(function (state) {\n                  return {\n                    filters: _objectSpread({}, state.filters, {\n                      month: getEndMonth(data[data.length - 1].month)\n                    })\n                  };\n                });\n              }\n\n              _context.next = 16;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](2);\n              AppSignal.sendError(new Error(_context.t0));\n              NotificationsActions.error('No se ha podido cargar el historial');\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 12]]);\n    }));\n\n    _this.changeCurrentShow = function (e) {\n      var value = e.target.value;\n\n      _this.setState({\n        currentShow: value\n      });\n    };\n\n    _this.onChangeFilter = function (field) {\n      return function (e) {\n        var value = e.target.value;\n\n        _this.setState(function (state) {\n          return {\n            filters: _objectSpread({}, state.filters, _defineProperty({}, field, value))\n          };\n        }, _this.loadData);\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(HistoryBehavior, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          currentShow = _this$state.currentShow,\n          filters = _this$state.filters,\n          data = _this$state.data,\n          total = _this$state.total,\n          subtotal = _this$state.subtotal;\n      var type = this.props.type;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"rubrosChart__filters rubrosChart__filters-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"rubrosChart__filters rubrosChart__filters-filter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(SelectField, {\n        label: \"Periodo\",\n        options: PERIODS,\n        value: filters.period,\n        onChange: this.onChangeFilter('period'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"rubrosChart__filters rubrosChart__filters-filter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(SelectField, {\n        label: \"Mes final\",\n        options: MONTHS,\n        value: filters.month,\n        onChange: this.onChangeFilter('month'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"rubrosChart__filters rubrosChart__filters-filter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(SelectField, {\n        label: \"A\\xF1o\",\n        options: YEARS,\n        value: filters.year,\n        onChange: this.onChangeFilter('year'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column is-9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Chart, {\n        data: data,\n        show: currentShow,\n        fill: FILL[type],\n        type: type,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"column is-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"marginBottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"rubrosChart--label\",\n        htmlFor: \"total\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"total\",\n        type: \"radio\",\n        value: \"total\",\n        checked: currentShow === 'total',\n        onChange: this.changeCurrentShow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), ' ', \"Total\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"rubrosChart--label\",\n        htmlFor: \"subtotal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"subtotal\",\n        type: \"radio\",\n        value: \"subtotal\",\n        checked: currentShow === 'subtotal',\n        onChange: this.changeCurrentShow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), ' ', \"Subtotal\", ' ', React.createElement(\"span\", {\n        className: \"rubrosChart rubrosChart__table-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"(Total menos IVA)\"))), React.createElement(\"div\", {\n        className: \"marginBottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"rubrosChart rubrosChart__table-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, TYPES_LABELS[type], \" Total del \", PERIOD_LABELS[filters.period], \":\"), React.createElement(\"p\", {\n        className: \"rubrosChart rubrosChart__table-amount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, accounting.formatMoney(total, '$ ', 0))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"rubrosChart rubrosChart__table-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, TYPES_LABELS[type], \" Subtotal del\", ' ', PERIOD_LABELS[filters.period], \":\"), React.createElement(\"p\", {\n        className: \"rubrosChart rubrosChart__table-amount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, accounting.formatMoney(subtotal, '$ ', 0))), type === 'expenses' && React.createElement(\"div\", {\n        className: \"legend--container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"legend--text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"legend--square legend--square__max\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }), \"Mayor Gasto\"), React.createElement(\"span\", {\n        className: \"legend--text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"legend--square legend--square__min\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }), \"Menor Gasto\")))));\n    }\n  }]);\n\n  return HistoryBehavior;\n}(Component);\n\nexport { HistoryBehavior as default };","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/reports/behaviors/components/history.js"],"names":["React","Component","SelectField","calculateDates","calculateData","getEndMonth","API","NotificationsActions","AppSignal","Chart","accounting","MONTHS","YEARS","PERIODS","TYPES_LABELS","PERIOD_LABELS","FILL","incomes","expenses","HistoryBehavior","state","data","total","subtotal","currentShow","filters","period","month","Date","getMonth","year","id","loadData","type","props","startMonth","endMonth","Reports","History","end_month","format","start_month","report","reduce","setState","length","sendError","Error","error","changeCurrentShow","e","value","target","onChangeFilter","field","formatMoney"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport SelectField from 'shared/selectField'\n\nimport { calculateDates } from '../../rankings/utils'\nimport { calculateData, getEndMonth } from '../utils'\nimport API from 'api'\nimport NotificationsActions from 'actions/notifications'\nimport AppSignal from 'appsignal'\n\nimport Chart from './chart'\nimport accounting from 'accounting'\n\nimport { MONTHS, YEARS } from 'shared/catalogs'\nimport { PERIODS, TYPES_LABELS, PERIOD_LABELS } from '../../constants'\nconst FILL = {\n  incomes: '#21c4bb',\n  expenses: '#4184F5'\n}\n\nexport default class HistoryBehavior extends Component {\n  state = {\n    data: [],\n    total: 0,\n    subtotal: 0,\n    currentShow: 'total',\n    filters: {\n      period: 'trimester',\n      month: new Date().getMonth(),\n      year: YEARS[0].id // default current year\n    }\n  }\n\n  componentDidMount () {\n    this.loadData()\n  }\n\n  loadData = async () => {\n    const { type } = this.props\n    const { startMonth, endMonth } = calculateDates(this.state.filters)\n\n    try {\n      const { report } = await API.Reports.History({\n        type,\n        end_month: endMonth.format('YYYY-MM'),\n        start_month: startMonth.format('YYYY-MM')\n      })\n\n      const { total, subtotal, data } = report.reduce(calculateData(type), {\n        total: 0,\n        subtotal: 0,\n        data: []\n      })\n\n      this.setState({ data, total, subtotal })\n      if (data.length > 0) {\n        this.setState(state => ({\n          filters: {\n            ...state.filters,\n            month: getEndMonth(data[data.length - 1].month)\n          }\n        }))\n      }\n    } catch (error) {\n      AppSignal.sendError(new Error(error))\n      NotificationsActions.error('No se ha podido cargar el historial')\n    }\n  }\n\n  changeCurrentShow = e => {\n    const { value } = e.target\n\n    this.setState({ currentShow: value })\n  }\n\n  onChangeFilter = field => e => {\n    const { value } = e.target\n\n    this.setState(\n      state => ({ filters: { ...state.filters, [field]: value } }),\n      this.loadData\n    )\n  }\n\n  render () {\n    const { currentShow, filters, data, total, subtotal } = this.state\n    const { type } = this.props\n\n    return (\n      <div>\n        <div className='rubrosChart__filters rubrosChart__filters-wrap'>\n          <div className='rubrosChart__filters rubrosChart__filters-filter'>\n            <SelectField\n              label='Periodo'\n              options={PERIODS}\n              value={filters.period}\n              onChange={this.onChangeFilter('period')}\n            />\n          </div>\n          <div className='rubrosChart__filters rubrosChart__filters-filter'>\n            <SelectField\n              label='Mes final'\n              options={MONTHS}\n              value={filters.month}\n              onChange={this.onChangeFilter('month')}\n            />\n          </div>\n          <div className='rubrosChart__filters rubrosChart__filters-filter'>\n            <SelectField\n              label='Año'\n              options={YEARS}\n              value={filters.year}\n              onChange={this.onChangeFilter('year')}\n            />\n          </div>\n        </div>\n        <div className='columns'>\n          <div className='column is-9'>\n            <Chart\n              data={data}\n              show={currentShow}\n              fill={FILL[type]}\n              type={type}\n            />\n          </div>\n          <div className='column is-3'>\n            <div className='marginBottom'>\n              <label className='rubrosChart--label' htmlFor='total'>\n                <input\n                  id='total'\n                  type='radio'\n                  value='total'\n                  checked={currentShow === 'total'}\n                  onChange={this.changeCurrentShow}\n                />{' '}\n                Total\n              </label>\n              <br />\n              <label className='rubrosChart--label' htmlFor='subtotal'>\n                <input\n                  id='subtotal'\n                  type='radio'\n                  value='subtotal'\n                  checked={currentShow === 'subtotal'}\n                  onChange={this.changeCurrentShow}\n                />{' '}\n                Subtotal{' '}\n                <span className='rubrosChart rubrosChart__table-title'>\n                  (Total menos IVA)\n                </span>\n              </label>\n            </div>\n            <div className='marginBottom'>\n              <p className='rubrosChart rubrosChart__table-title'>\n                {TYPES_LABELS[type]} Total del {PERIOD_LABELS[filters.period]}:\n              </p>\n              <p className='rubrosChart rubrosChart__table-amount'>\n                {accounting.formatMoney(total, '$ ', 0)}\n              </p>\n            </div>\n            <div>\n              <p className='rubrosChart rubrosChart__table-title'>\n                {TYPES_LABELS[type]} Subtotal del{' '}\n                {PERIOD_LABELS[filters.period]}:\n              </p>\n              <p className='rubrosChart rubrosChart__table-amount'>\n                {accounting.formatMoney(subtotal, '$ ', 0)}\n              </p>\n            </div>\n            {type === 'expenses' && (\n              <div className='legend--container'>\n                <span className='legend--text'>\n                  <div className='legend--square legend--square__max' />\n                  Mayor Gasto\n                </span>\n                <span className='legend--text'>\n                  <div className='legend--square legend--square__min' />\n                  Menor Gasto\n                </span>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}