{"ast":null,"code":"import _objectSpread from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/shared/credentials/index.js\";\n// Required libraries\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport SessionStore from 'stores/session'; // Stores - action\n\nimport SatCredentialsStore from 'stores/satCredentials';\nimport SatCredentialsActions from 'actions/satCredentials'; // Custom components\n\nimport ExpirationCard from './components/ExpirationCard';\nimport CsdCard from './components/CsdCard';\nimport CsdModal from './components/CsdModal';\nimport CredentialsCard from './components/CredentialsCard';\n\nvar getCurrentState = function getCurrentState() {\n  return {\n    credentials: SatCredentialsStore.getCredentialStatus(),\n    currentEntity: SessionStore.getCurrentEntity(),\n    user: SessionStore.getUser()\n  };\n};\n\nexport var Credentials =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Credentials, _PureComponent);\n\n  function Credentials() {\n    var _this;\n\n    _classCallCheck(this, Credentials);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Credentials).call(this));\n\n    _this._onChange = function () {\n      // When the store changes, the state goes to it and pulls the updated data\n      // then sets it so the component rerenders\n      var state = getCurrentState();\n\n      _this.setState(state);\n    };\n\n    _this.state = _objectSpread({}, getCurrentState());\n    return _this;\n  }\n\n  _createClass(Credentials, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      SatCredentialsStore.addChangeListener(this._onChange);\n      this.loadData();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      SatCredentialsStore.removeChangeListener(this._onChange);\n    }\n  }, {\n    key: \"loadData\",\n    value: function loadData() {\n      SatCredentialsActions.getCredentialsStatus();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var id = this.state.currentEntity.id;\n      var alerts = []; // id current entity\n\n      var _this$props = this.props,\n          fiel = _this$props.fiel,\n          csd = _this$props.csd,\n          ciec = _this$props.ciec; // extract summary data\n\n      var _this$state$credentia = this.state.credentials,\n          hasCiec = _this$state$credentia.has_ciec,\n          hasCsd = _this$state$credentia.has_csd,\n          hasFiel = _this$state$credentia.has_fiel,\n          csdExpirationDate = _this$state$credentia.csd_expiration_date,\n          fielExpirationDate = _this$state$credentia.fiel_expiration_date; // Add 1 month to the current date\n\n      var monthFromNow = moment().add(1, 'M'); // If in one month we are going to be after or in the expiration date\n      // show the alert\n\n      var fielExpirated = moment(fielExpirationDate).isBefore();\n      var csdExpirated = moment(csdExpirationDate).isBefore();\n      var isShowedCiec = ciec && !hasCiec;\n      var isShowedFiel = fiel && (!hasFiel || fielExpirated);\n\n      if (csd && hasCsd && csdExpirationDate && !csdExpirated && monthFromNow.isSameOrAfter(csdExpirationDate, 'day')) {\n        alerts.push(React.createElement(ExpirationCard, {\n          key: \"csd_expiration\",\n          days: moment(csdExpirationDate).diff(moment(), 'days'),\n          title: \"Tu CSD est\\xE1 por expirar\",\n          content: \"Sin tu sello no podr\\xE1s emitir facturas y tus declaraciones pueden sufrir retrasos. \\xBFQuieres actualizarla ahora?\",\n          cta: \"Actualizar CSD\",\n          link: \"/entidades/\".concat(id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }));\n      }\n\n      if (fiel && hasFiel && fielExpirationDate && !fielExpirated && monthFromNow.isSameOrAfter(fielExpirationDate, 'day')) {\n        alerts.push(React.createElement(ExpirationCard, {\n          key: \"fiel_expiration\",\n          days: moment(fielExpirationDate).diff(moment(), 'days'),\n          title: \"Tu FIEL est\\xE1 por expirar\",\n          content: \"Sin ella no nos podemos sincronizar con el SAT y tus declaraciones\\n            pueden sufrir retrasos. \\xBFQuieres actualizarla ahora?\",\n          cta: \"Actualizar FIEL\",\n          link: \"/entidades/\".concat(id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }));\n      }\n\n      if (csd && (!hasCsd || csdExpirated)) {\n        alerts.push(React.createElement(CsdCard, {\n          entity: id,\n          key: \"csd_card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }));\n        alerts.push(React.createElement(CsdModal, {\n          entity: id,\n          active: true,\n          key: \"csd_modal\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }));\n      }\n\n      if (isShowedCiec || isShowedFiel) {\n        alerts.push(React.createElement(CredentialsCard, {\n          isShowedCiec: isShowedCiec,\n          isShowedFiel: isShowedFiel,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }));\n      }\n\n      return alerts;\n    }\n  }]);\n\n  return Credentials;\n}(PureComponent);\nCredentials.propTypes = {\n  fiel: PropTypes.bool,\n  csd: PropTypes.bool,\n  ciec: PropTypes.bool\n};\nCredentials.defaultProps = {\n  fiel: false,\n  csd: false,\n  ciec: false\n};\nexport default Credentials;","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/shared/credentials/index.js"],"names":["React","PureComponent","PropTypes","moment","SessionStore","SatCredentialsStore","SatCredentialsActions","ExpirationCard","CsdCard","CsdModal","CredentialsCard","getCurrentState","credentials","getCredentialStatus","currentEntity","getCurrentEntity","user","getUser","Credentials","_onChange","state","setState","addChangeListener","loadData","removeChangeListener","getCredentialsStatus","id","alerts","props","fiel","csd","ciec","hasCiec","has_ciec","hasCsd","has_csd","hasFiel","has_fiel","csdExpirationDate","csd_expiration_date","fielExpirationDate","fiel_expiration_date","monthFromNow","add","fielExpirated","isBefore","csdExpirated","isShowedCiec","isShowedFiel","isSameOrAfter","push","diff","propTypes","bool","defaultProps"],"mappings":"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","sourcesContent":["// Required libraries\nimport React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport moment from 'moment'\nimport SessionStore from 'stores/session'\n\n// Stores - action\nimport SatCredentialsStore from 'stores/satCredentials'\nimport SatCredentialsActions from 'actions/satCredentials'\n\n// Custom components\nimport ExpirationCard from './components/ExpirationCard'\nimport CsdCard from './components/CsdCard'\nimport CsdModal from './components/CsdModal'\nimport CredentialsCard from './components/CredentialsCard'\n\nconst getCurrentState = () => {\n  return {\n    credentials: SatCredentialsStore.getCredentialStatus(),\n    currentEntity: SessionStore.getCurrentEntity(),\n    user: SessionStore.getUser()\n  }\n}\n\nexport class Credentials extends PureComponent {\n  constructor () {\n    super()\n    this.state = { ...getCurrentState() }\n  }\n\n  componentDidMount () {\n    SatCredentialsStore.addChangeListener(this._onChange)\n    this.loadData()\n  }\n\n  componentWillUnmount () {\n    SatCredentialsStore.removeChangeListener(this._onChange)\n  }\n\n  _onChange = () => {\n    // When the store changes, the state goes to it and pulls the updated data\n    // then sets it so the component rerenders\n    const state = getCurrentState()\n\n    this.setState(state)\n  }\n\n  loadData () {\n    SatCredentialsActions.getCredentialsStatus()\n  }\n\n  render () {\n    const {\n      currentEntity: { id }\n    } = this.state\n\n    let alerts = []\n\n    // id current entity\n    const { fiel, csd, ciec } = this.props\n\n    // extract summary data\n    const {\n      has_ciec: hasCiec,\n      has_csd: hasCsd,\n      has_fiel: hasFiel,\n      csd_expiration_date: csdExpirationDate,\n      fiel_expiration_date: fielExpirationDate\n    } = this.state.credentials\n\n    // Add 1 month to the current date\n    const monthFromNow = moment().add(1, 'M')\n    // If in one month we are going to be after or in the expiration date\n    // show the alert\n\n    const fielExpirated = moment(fielExpirationDate).isBefore()\n    const csdExpirated = moment(csdExpirationDate).isBefore()\n    const isShowedCiec = ciec && !hasCiec\n    const isShowedFiel = fiel && (!hasFiel || fielExpirated)\n\n    if (\n      csd &&\n      hasCsd &&\n      csdExpirationDate &&\n      !csdExpirated &&\n      monthFromNow.isSameOrAfter(csdExpirationDate, 'day')\n    ) {\n      alerts.push(\n        <ExpirationCard\n          key='csd_expiration'\n          days={moment(csdExpirationDate).diff(moment(), 'days')}\n          title='Tu CSD está por expirar'\n          content={`Sin tu sello no podrás emitir facturas y tus declaraciones pueden sufrir retrasos. ¿Quieres actualizarla ahora?`}\n          cta='Actualizar CSD'\n          link={`/entidades/${id}`}\n        />\n      )\n    }\n\n    if (\n      fiel &&\n      hasFiel &&\n      fielExpirationDate &&\n      !fielExpirated &&\n      monthFromNow.isSameOrAfter(fielExpirationDate, 'day')\n    ) {\n      alerts.push(\n        <ExpirationCard\n          key='fiel_expiration'\n          days={moment(fielExpirationDate).diff(moment(), 'days')}\n          title='Tu FIEL está por expirar'\n          content={`Sin ella no nos podemos sincronizar con el SAT y tus declaraciones\n            pueden sufrir retrasos. ¿Quieres actualizarla ahora?`}\n          cta='Actualizar FIEL'\n          link={`/entidades/${id}`}\n        />\n      )\n    }\n\n    if (csd && (!hasCsd || csdExpirated)) {\n      alerts.push(<CsdCard entity={id} key='csd_card' />)\n      alerts.push(<CsdModal entity={id} active key='csd_modal' />)\n    }\n\n    if (isShowedCiec || isShowedFiel) {\n      alerts.push(\n        <CredentialsCard\n          isShowedCiec={isShowedCiec}\n          isShowedFiel={isShowedFiel}\n        />\n      )\n    }\n\n    return alerts\n  }\n}\n\nCredentials.propTypes = {\n  fiel: PropTypes.bool,\n  csd: PropTypes.bool,\n  ciec: PropTypes.bool\n}\n\nCredentials.defaultProps = {\n  fiel: false,\n  csd: false,\n  ciec: false\n}\n\nexport default Credentials\n"]},"metadata":{},"sourceType":"module"}