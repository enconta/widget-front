{"ast":null,"code":"import _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/accountingPeriods/details/index.js\";\n// Libraries\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport AppSignal from 'appsignal'; // Components\n\nimport Notification from 'actions/notifications';\nimport Messages from '../messages';\nimport Card from 'shared/card';\nimport Review from '../review';\nimport TaxStatements from '../taxStatement';\nimport UploadStatements from '../uploadStatements';\nimport AccountingAccepted from '../accountingAccepted';\nimport { prettyPeriod, getMonthLabel } from 'utils';\nimport { STEPPER_PERIODS, STEPS_PERIOD } from 'shared/catalogs';\nimport API from 'api';\nimport Loading from 'shared/loading';\n/**\n * @typedef {import('api').AccountingPeriod} AccountingPeriod\n * @typedef {{ id: number }} Params\n * @typedef {import('react-router').RouteComponentProps<Params, Params>} Props\n * @typedef {{loading: boolean, accountingPeriod: AccountingPeriod | null}} State\n * @extends {Component<Props, State>}\n */\n\nvar AccountingPeriodsDetails =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AccountingPeriodsDetails, _Component);\n\n  function AccountingPeriodsDetails() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AccountingPeriodsDetails);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AccountingPeriodsDetails)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loading: false,\n      accountingPeriod: null\n    };\n\n    _this.renderContent = function () {\n      var accountingPeriod = _this.state.accountingPeriod;\n      if (!accountingPeriod) return null;\n\n      switch (accountingPeriod.actual_step) {\n        case 'started':\n          return React.createElement(UploadStatements, {\n            period: accountingPeriod,\n            isOpen: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113\n            },\n            __self: this\n          });\n\n        case 'accounting_done':\n          return React.createElement(Review, {\n            period: accountingPeriod,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115\n            },\n            __self: this\n          });\n\n        case 'tax_statement_done':\n          return React.createElement(TaxStatements, {\n            period: accountingPeriod,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117\n            },\n            __self: this\n          });\n\n        case 'accounting_accepted':\n          return React.createElement(AccountingAccepted, {\n            period: accountingPeriod,\n            isOpen: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119\n            },\n            __self: this\n          });\n\n        case 'received_account_statement':\n          return React.createElement(UploadStatements, {\n            period: accountingPeriod,\n            isOpen: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121\n            },\n            __self: this\n          });\n\n        default:\n          return null;\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(AccountingPeriodsDetails, [{\n    key: \"componentDidMount\",\n    // Call accounting pariod details\n    value: function componentDidMount() {\n      this.getAccountingPeriodDetails();\n      var id = this.props.params.id;\n      AppSignal.addBreadcrumb({\n        category: 'Mi contabilidad',\n        action: \"Error en: /mi-contabilidad/\".concat(id, \"/ver\"),\n        metadata: {\n          periodID: id\n        }\n      });\n    } // Get accounting period details from api and set in the state\n\n  }, {\n    key: \"getAccountingPeriodDetails\",\n    value: function getAccountingPeriodDetails() {\n      var _this2 = this;\n\n      var params = this.props.params;\n      API.AccountingPeriods.Details(params.id).then(function (_ref) {\n        var accountingPeriod = _ref.accounting_period;\n\n        _this2.setState({\n          accountingPeriod: accountingPeriod\n        });\n      }).catch(function (error) {\n        AppSignal.sendError(new Error(error.error));\n        Notification.error(error);\n      });\n    } // Render individual step\n\n  }, {\n    key: \"renderStep\",\n    value: function renderStep(_ref2) {\n      var stepId = _ref2.id;\n      var _this$state = this.state,\n          accountingPeriod = _this$state.accountingPeriod,\n          loading = _this$state.loading;\n      if (!accountingPeriod) return null;\n      var currentLabel = STEPPER_PERIODS.find(function (step) {\n        return accountingPeriod.actual_step === step.id;\n      });\n      var stepNumber = STEPPER_PERIODS.find(function (step) {\n        return step.id === stepId;\n      });\n      var stepLabel = STEPS_PERIOD[stepId];\n      var stepIndex = STEPPER_PERIODS.findIndex(function (step) {\n        return step.id === stepId;\n      });\n      var isCurrentLabel = !currentLabel ? !loading : currentLabel.label;\n      var currentIndex = STEPPER_PERIODS.indexOf(currentLabel);\n      return React.createElement(\"li\", {\n        key: stepId,\n        className: classNames('step__item', {\n          'step__item--current-step': isCurrentLabel === stepLabel,\n          'step__item--past-step': stepIndex < currentIndex\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"step__item__text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, stepIndex < currentIndex ? React.createElement(\"i\", {\n        className: \"mdi mdi-check-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }) : React.createElement(\"span\", {\n        className: \"is-semibold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, stepNumber.number), ' ', stepLabel));\n    } // Render steps from accounting period\n\n  }, {\n    key: \"renderSteps\",\n    value: function renderSteps() {\n      return React.createElement(\"div\", {\n        className: \"container is-half-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"step\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, STEPPER_PERIODS.map(this.renderStep.bind(this))));\n    }\n  }, {\n    key: \"render\",\n    // Main render\n    value: function render() {\n      var _this$props = this.props,\n          location = _this$props.location,\n          params = _this$props.params;\n      var accountingPeriod = this.state.accountingPeriod;\n      if (!accountingPeriod) return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"headline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Mi contabilidad\"), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"flex-start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"containerBottomLine column is-full\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"subheader-green noBottomLine margin--none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, accountingPeriod.term_type === 'bimonthly' ? \"\".concat(getMonthLabel(accountingPeriod.month), \"-\").concat(getMonthLabel(accountingPeriod.month + 1), \" \").concat(accountingPeriod.year) : \"\".concat(prettyPeriod(\"\".concat(accountingPeriod.year).concat(accountingPeriod.month), undefined, false, ' '))))), this.renderSteps(), this.renderContent(), accountingPeriod.actual_step === 'tax_statement_done' && React.createElement(AccountingAccepted, {\n        period: accountingPeriod,\n        isOpen: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), accountingPeriod.actual_step !== 'started' && accountingPeriod.actual_step !== 'received_account_statement' && React.createElement(UploadStatements, {\n        period: accountingPeriod,\n        isOpen: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }), React.createElement(Messages, {\n        period: params.id,\n        location: location,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return AccountingPeriodsDetails;\n}(Component);\n\nexport { AccountingPeriodsDetails as default };","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/accountingPeriods/details/index.js"],"names":["React","Component","classNames","AppSignal","Notification","Messages","Card","Review","TaxStatements","UploadStatements","AccountingAccepted","prettyPeriod","getMonthLabel","STEPPER_PERIODS","STEPS_PERIOD","API","Loading","AccountingPeriodsDetails","state","loading","accountingPeriod","renderContent","actual_step","getAccountingPeriodDetails","id","props","params","addBreadcrumb","category","action","metadata","periodID","AccountingPeriods","Details","then","accounting_period","setState","catch","error","sendError","Error","stepId","currentLabel","find","step","stepNumber","stepLabel","stepIndex","findIndex","isCurrentLabel","label","currentIndex","indexOf","number","map","renderStep","bind","location","term_type","month","year","undefined","renderSteps"],"mappings":"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","sourcesContent":["// Libraries\nimport React, { Component } from 'react'\nimport classNames from 'classnames'\nimport AppSignal from 'appsignal'\n\n// Components\nimport Notification from 'actions/notifications'\nimport Messages from '../messages'\nimport Card from 'shared/card'\nimport Review from '../review'\nimport TaxStatements from '../taxStatement'\nimport UploadStatements from '../uploadStatements'\nimport AccountingAccepted from '../accountingAccepted'\nimport { prettyPeriod, getMonthLabel } from 'utils'\nimport { STEPPER_PERIODS, STEPS_PERIOD } from 'shared/catalogs'\n\nimport API from 'api'\nimport Loading from 'shared/loading'\n\n/**\n * @typedef {import('api').AccountingPeriod} AccountingPeriod\n * @typedef {{ id: number }} Params\n * @typedef {import('react-router').RouteComponentProps<Params, Params>} Props\n * @typedef {{loading: boolean, accountingPeriod: AccountingPeriod | null}} State\n * @extends {Component<Props, State>}\n */\nexport default class AccountingPeriodsDetails extends Component {\n  /**\n   * @type {State}\n   */\n  state = {\n    loading: false,\n    accountingPeriod: null\n  }\n\n  // Call accounting pariod details\n  componentDidMount () {\n    this.getAccountingPeriodDetails()\n    const { id } = this.props.params\n\n    AppSignal.addBreadcrumb({\n      category: 'Mi contabilidad',\n      action: `Error en: /mi-contabilidad/${id}/ver`,\n      metadata: { periodID: id }\n    })\n  }\n\n  // Get accounting period details from api and set in the state\n  getAccountingPeriodDetails () {\n    const { params } = this.props\n\n    API.AccountingPeriods.Details(params.id)\n      .then(({ accounting_period: accountingPeriod }) => {\n        this.setState({ accountingPeriod })\n      })\n      .catch(error => {\n        AppSignal.sendError(new Error(error.error))\n        Notification.error(error)\n      })\n  }\n\n  // Render individual step\n  renderStep ({ id: stepId }) {\n    const { accountingPeriod, loading } = this.state\n    if (!accountingPeriod) return null\n    const currentLabel = STEPPER_PERIODS.find(\n      step => accountingPeriod.actual_step === step.id\n    )\n    const stepNumber = STEPPER_PERIODS.find(step => step.id === stepId)\n\n    const stepLabel = STEPS_PERIOD[stepId]\n    const stepIndex = STEPPER_PERIODS.findIndex(step => step.id === stepId)\n    const isCurrentLabel = !currentLabel ? !loading : currentLabel.label\n    const currentIndex = STEPPER_PERIODS.indexOf(currentLabel)\n    return (\n      <li\n        key={stepId}\n        className={classNames('step__item', {\n          'step__item--current-step': isCurrentLabel === stepLabel,\n          'step__item--past-step': stepIndex < currentIndex\n        })}\n      >\n        <p className='step__item__text'>\n          {stepIndex < currentIndex ? (\n            <i className='mdi mdi-check-bold' />\n          ) : (\n            <span className='is-semibold'>{stepNumber.number}</span>\n          )}{' '}\n          {stepLabel}\n        </p>\n      </li>\n    )\n  }\n\n  // Render steps from accounting period\n  renderSteps () {\n    return (\n      <div className='container is-half-fluid'>\n        <ul className='step'>\n          {STEPPER_PERIODS.map(this.renderStep.bind(this))}\n        </ul>\n      </div>\n    )\n  }\n\n  renderContent = () => {\n    const { accountingPeriod } = this.state\n\n    if (!accountingPeriod) return null\n\n    switch (accountingPeriod.actual_step) {\n      case 'started':\n        return <UploadStatements period={accountingPeriod} isOpen />\n      case 'accounting_done':\n        return <Review period={accountingPeriod} />\n      case 'tax_statement_done':\n        return <TaxStatements period={accountingPeriod} />\n      case 'accounting_accepted':\n        return <AccountingAccepted period={accountingPeriod} isOpen />\n      case 'received_account_statement':\n        return <UploadStatements period={accountingPeriod} isOpen />\n      default:\n        return null\n    }\n  }\n\n  // Main render\n  render () {\n    const { location, params } = this.props\n    const { accountingPeriod } = this.state\n\n    if (!accountingPeriod) return <Loading />\n\n    return (\n      <div>\n        <h1 className='headline'>Mi contabilidad</h1>\n        <Card>\n          <div className='flex-start'>\n            <div className='containerBottomLine column is-full'>\n              <p className='subheader-green noBottomLine margin--none'>\n                {accountingPeriod.term_type === 'bimonthly'\n                  ? `${getMonthLabel(accountingPeriod.month)}-${getMonthLabel(\n                    accountingPeriod.month + 1\n                  )} ${accountingPeriod.year}`\n                  : `${prettyPeriod(\n                    `${accountingPeriod.year}${accountingPeriod.month}`,\n                    undefined,\n                    false,\n                    ' '\n                  )}`}\n              </p>\n            </div>\n          </div>\n          {this.renderSteps()}\n          {this.renderContent()}\n          {accountingPeriod.actual_step === 'tax_statement_done' && (\n            <AccountingAccepted period={accountingPeriod} isOpen={false} />\n          )}\n          {accountingPeriod.actual_step !== 'started' &&\n            accountingPeriod.actual_step !== 'received_account_statement' && (\n            <UploadStatements period={accountingPeriod} isOpen={false} />\n          )}\n\n          <Messages period={params.id} location={location} />\n        </Card>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}