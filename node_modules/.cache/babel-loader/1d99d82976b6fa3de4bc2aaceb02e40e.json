{"ast":null,"code":"import _objectSpread from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/editClient/synchronization/index.js\";\nimport React, { Component, Fragment } from 'react';\nimport { withRouter } from 'react-router';\nimport BanksSynchronizationActions from 'actions/smartsync';\nimport BanksSynchronizationStores from 'stores/smartsync';\n\nfunction getCurrentState() {\n  return {\n    widgetToken: BanksSynchronizationStores.getWidgetToken()\n  };\n}\n\nexport var NewBank =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewBank, _Component);\n\n  function NewBank() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NewBank);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NewBank)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.defaultState = {};\n    _this.state = _objectSpread({}, _this.defaultState, getCurrentState());\n\n    _this._onChange = function () {\n      _this.setState(getCurrentState());\n    };\n\n    _this.onEventCallbackFunction = function (data) {// Do something with the event data\n    };\n\n    _this.onExitCallbackFunction = function (data) {// Do something with the exit data\n    };\n\n    _this.successCallbackFunction = function (link, institution) {// Do something with the link_id or institution name\n    };\n\n    _this.openBelvoWidget = function () {\n      var widgetToken = _this.state.widgetToken;\n      belvoSDK // eslint-disable-line\n      .createWidget(widgetToken, {\n        locale: 'es',\n        company_name: 'Enconta',\n        // institution: 'bancomer_mx_retail', // to start the widget directly on a specific institution credentials page\n        // institution_types: ['fiscal', 'retail', 'business', 'gig'], // to select the type of institution to show in the widget\n        access_mode: 'recurrent',\n        // to specify the type of link to be created from the widget\n        country_codes: ['MX'],\n        callback: function callback(link, institution) {\n          return _this.successCallbackFunction(link, institution);\n        },\n        onExit: function onExit(data) {\n          return _this.onExitCallbackFunction(data);\n        },\n        onEvent: function onEvent(data) {\n          return _this.onEventCallbackFunction(data);\n        }\n      }).build();\n    };\n\n    return _this;\n  }\n\n  _createClass(NewBank, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      BanksSynchronizationActions.getWidgetToken();\n      BanksSynchronizationStores.addChangeListener(this._onChange);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, this.openBelvoWidget());\n    }\n  }]);\n\n  return NewBank;\n}(Component);\nexport default withRouter(NewBank);","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/editClient/synchronization/index.js"],"names":["React","Component","Fragment","withRouter","BanksSynchronizationActions","BanksSynchronizationStores","getCurrentState","widgetToken","getWidgetToken","NewBank","defaultState","state","_onChange","setState","onEventCallbackFunction","data","onExitCallbackFunction","successCallbackFunction","link","institution","openBelvoWidget","belvoSDK","createWidget","locale","company_name","access_mode","country_codes","callback","onExit","onEvent","build","addChangeListener"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,2BAAP,MAAwC,mBAAxC;AACA,OAAOC,0BAAP,MAAuC,kBAAvC;;AAEA,SAASC,eAAT,GAA4B;AAC1B,SAAO;AACLC,IAAAA,WAAW,EAAEF,0BAA0B,CAACG,cAA3B;AADR,GAAP;AAGD;;AAED,WAAaC,OAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,UACEC,YADF,GACiB,EADjB;AAAA,UAKEC,KALF,qBAKe,MAAKD,YALpB,EAKqCJ,eAAe,EALpD;;AAAA,UAYEM,SAZF,GAYc,YAAM;AAChB,YAAKC,QAAL,CAAcP,eAAe,EAA7B;AACD,KAdH;;AAAA,UAgBEQ,uBAhBF,GAgB4B,UAAAC,IAAI,EAAI,CAChC;AACD,KAlBH;;AAAA,UAoBEC,sBApBF,GAoB2B,UAAAD,IAAI,EAAI,CAC/B;AACD,KAtBH;;AAAA,UAwBEE,uBAxBF,GAwB4B,UAACC,IAAD,EAAOC,WAAP,EAAuB,CAC/C;AACD,KA1BH;;AAAA,UA4BEC,eA5BF,GA4BoB,YAAM;AAAA,UACdb,WADc,GACE,MAAKI,KADP,CACdJ,WADc;AAEtBc,MAAAA,QAAQ,CAAC;AAAD,OACLC,YADH,CACgBf,WADhB,EAC6B;AACzBgB,QAAAA,MAAM,EAAE,IADiB;AAEzBC,QAAAA,YAAY,EAAE,SAFW;AAGzB;AACA;AACAC,QAAAA,WAAW,EAAE,WALY;AAKC;AAC1BC,QAAAA,aAAa,EAAE,CAAC,IAAD,CANU;AAOzBC,QAAAA,QAAQ,EAAE,kBAACT,IAAD,EAAOC,WAAP;AAAA,iBACR,MAAKF,uBAAL,CAA6BC,IAA7B,EAAmCC,WAAnC,CADQ;AAAA,SAPe;AASzBS,QAAAA,MAAM,EAAE,gBAAAb,IAAI;AAAA,iBAAI,MAAKC,sBAAL,CAA4BD,IAA5B,CAAJ;AAAA,SATa;AAUzBc,QAAAA,OAAO,EAAE,iBAAAd,IAAI;AAAA,iBAAI,MAAKD,uBAAL,CAA6BC,IAA7B,CAAJ;AAAA;AAVY,OAD7B,EAaGe,KAbH;AAcD,KA5CH;;AAAA;AAAA;;AAAA;AAAA;AAAA,wCAOuB;AACnB1B,MAAAA,2BAA2B,CAACI,cAA5B;AACAH,MAAAA,0BAA0B,CAAC0B,iBAA3B,CAA6C,KAAKnB,SAAlD;AACD;AAVH;AAAA;AAAA,6BAgDY;AAER,aACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKQ,eAAL,EADH,CADF;AAKD;AAvDH;;AAAA;AAAA,EAA6BnB,SAA7B;AA0DA,eAAeE,UAAU,CAACM,OAAD,CAAzB","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { withRouter } from 'react-router' \nimport BanksSynchronizationActions from 'actions/smartsync'\nimport BanksSynchronizationStores from 'stores/smartsync'\n\nfunction getCurrentState () {\n  return {\n    widgetToken: BanksSynchronizationStores.getWidgetToken()\n  }\n}\n\nexport class NewBank extends Component {\n  defaultState = {\n\n  }\n\n  state = { ...this.defaultState, ...getCurrentState() }\n\n  componentDidMount () {\n    BanksSynchronizationActions.getWidgetToken()\n    BanksSynchronizationStores.addChangeListener(this._onChange)\n  }\n\n  _onChange = () => {\n    this.setState(getCurrentState())\n  }\n\n  onEventCallbackFunction = data => {\n    // Do something with the event data\n  }\n\n  onExitCallbackFunction = data => {\n    // Do something with the exit data\n  }\n\n  successCallbackFunction = (link, institution) => {\n    // Do something with the link_id or institution name\n  }\n\n  openBelvoWidget = () => {\n    const { widgetToken } = this.state\n    belvoSDK // eslint-disable-line\n      .createWidget(widgetToken, {\n        locale: 'es',\n        company_name: 'Enconta',\n        // institution: 'bancomer_mx_retail', // to start the widget directly on a specific institution credentials page\n        // institution_types: ['fiscal', 'retail', 'business', 'gig'], // to select the type of institution to show in the widget\n        access_mode: 'recurrent', // to specify the type of link to be created from the widget\n        country_codes: ['MX'],\n        callback: (link, institution) =>\n          this.successCallbackFunction(link, institution),\n        onExit: data => this.onExitCallbackFunction(data),\n        onEvent: data => this.onEventCallbackFunction(data)\n      })\n      .build()\n  }\n\n  \n\n  render () {\n   \n    return (\n      <Fragment>\n        {this.openBelvoWidget()}\n      </Fragment>\n    )\n  }\n}\n\nexport default withRouter(NewBank)\n"]},"metadata":{},"sourceType":"module"}