{"ast":null,"code":"import _defineProperty from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/editClient/clients/index.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router';\nimport accounting from 'accounting';\nimport EditClientActions from 'actions/editClient';\nimport ClientsStore from 'stores/clients';\nimport Paginator from 'shared/paginator';\nimport IconButton from 'shared/iconButton';\nimport TextField from 'shared/textField';\nimport SelectField from 'shared/selectField';\nimport TableFilter from 'shared/tableFilter';\n\nfunction getCurrentState() {\n  var clients = ClientsStore.getClientsList();\n  var totalPages = ClientsStore.getTotalPages();\n  var totalItems = ClientsStore.getTotalItems();\n  return {\n    clients: clients,\n    totalItems: totalItems,\n    totalPages: totalPages\n  };\n}\n\nvar PLATFORM_STATUS_OPTIONS = [{\n  id: 'all',\n  label: 'Todos'\n}, {\n  id: 'active',\n  label: 'Activos'\n}, {\n  id: 'inactive',\n  label: 'Inactivos'\n}];\n\nvar ClientsTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ClientsTable, _Component);\n\n  function ClientsTable() {\n    var _this;\n\n    _classCallCheck(this, ClientsTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ClientsTable).call(this));\n    _this.data = {\n      filters: {\n        legal_name: '',\n        platform_status: '',\n        rfc: ''\n      }\n    };\n    _this.state = Object.assign({}, _this.data, getCurrentState());\n    _this._onChange = _this._onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ClientsTable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Adds listener, when the Store changes, trigger the _onChange callback func\n      ClientsStore.addChangeListener(this._onChange);\n      this.loadData();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.location.search !== prevProps.location.search) {\n        this.loadData(this.props);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // Removes the listener to avoid memory leaks\n      ClientsStore.removeChangeListener(this._onChange);\n    }\n  }, {\n    key: \"_onChange\",\n    value: function _onChange() {\n      // When the store changes, the state goes to it and pulls the updated data\n      // then sets it so the component rerenders\n      var state = getCurrentState();\n      this.setState(state);\n    } // Toggles Client Status (active: true/false)\n\n  }, {\n    key: \"toggleClientStatus\",\n    value: function toggleClientStatus(id, active) {\n      // active is a boolean, request is a string that is going to be sent to the API via URL\n      var request = active ? 'deactivate' : 'activate';\n      EditClientActions.toggleClientStatus(id, request);\n    }\n  }, {\n    key: \"loadData\",\n    value: function loadData() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n\n      var params = _objectSpread({}, this.state.filters, props.location.query, {\n        client_type: props.type\n      });\n\n      EditClientActions.getClientsList(params);\n      this.setState({\n        filters: params\n      });\n    }\n  }, {\n    key: \"onChangeFilter\",\n    value: function onChangeFilter(field, e) {\n      var filter = _defineProperty({}, field, e.target.value);\n\n      this.setState(function (prevState) {\n        return {\n          filters: Object.assign({}, prevState.filters, filter)\n        };\n      });\n    } // Reset all filters and data to default\n\n  }, {\n    key: \"clearFilters\",\n    value: function clearFilters() {\n      this.setState({\n        filters: this.data.filters\n      });\n    } // Render a wrapper for the filters element\n\n  }, {\n    key: \"renderFilters\",\n    value: function renderFilters() {\n      var filters = this.state.filters;\n      var pathname = this.props.location.pathname;\n      var route = pathname.includes('clientes') ? '/clientes' : '/proveedores';\n      return React.createElement(TableFilter, {\n        baseUrl: \"\".concat(route),\n        filters: filters,\n        onClearFilters: this.clearFilters.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        placeholder: \"Raz\\xF3n Social\",\n        value: this.state.filters.legal_name,\n        onChange: this.onChangeFilter.bind(this, 'legal_name'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        placeholder: \"RFC\",\n        value: this.state.filters.rfc,\n        onChange: this.onChangeFilter.bind(this, 'rfc'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(SelectField, {\n        placeholder: \"Activos / Inactivos\",\n        value: this.state.filters.platform_status,\n        options: PLATFORM_STATUS_OPTIONS,\n        onChange: this.onChangeFilter.bind(this, 'platform_status'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }));\n    } // Renders each client and adds them as a row in the table\n\n  }, {\n    key: \"renderTableBody\",\n    value: function renderTableBody() {\n      var _this2 = this;\n\n      var pathname = this.props.location.pathname;\n      var route = pathname === '/clientes' ? 'cliente' : 'proveedor';\n      var rows = this.state.clients.map(function (client, index) {\n        return React.createElement(\"tr\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          className: \"align-left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, client.nickname || client.legalName), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, client.rfc), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, client.email), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"link\",\n          onClick: _this2.toggleClientStatus.bind(_this2, client.id, client.deactivated),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, client.deactivated ? 'Inactivo' : 'Activo')), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/\".concat(route, \"/\").concat(client.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          icon: \"pencil\",\n          tooltip: \"Editar\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }))));\n      });\n      return React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, rows);\n    }\n  }, {\n    key: \"renderTable\",\n    value: function renderTable() {\n      var table = React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"block unselectable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"No hay clientes\")));\n\n      if (this.state.clients.length > 0) {\n        table = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, React.createElement(\"table\", {\n          className: \"table\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, React.createElement(\"thead\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          className: \"align-left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, \"Raz\\xF3n Social\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }, \"RFC\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }, \"Correo\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }, \"Estado\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }))), this.renderTableBody()), React.createElement(Paginator, {\n          totalPages: this.state.totalPages,\n          location: this.props.location,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }));\n      }\n\n      return table;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, this.renderFilters(), React.createElement(\"div\", {\n        className: \"caption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, accounting.formatNumber(this.state.totalItems), \" elementos visibles\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }), this.renderTable());\n    }\n  }]);\n\n  return ClientsTable;\n}(Component);\n\nClientsTable.propTypes = {\n  location: PropTypes.object\n};\nexport default ClientsTable;","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/editClient/clients/index.js"],"names":["React","Component","PropTypes","Link","accounting","EditClientActions","ClientsStore","Paginator","IconButton","TextField","SelectField","TableFilter","getCurrentState","clients","getClientsList","totalPages","getTotalPages","totalItems","getTotalItems","PLATFORM_STATUS_OPTIONS","id","label","ClientsTable","data","filters","legal_name","platform_status","rfc","state","Object","assign","_onChange","bind","addChangeListener","loadData","prevProps","props","location","search","removeChangeListener","setState","active","request","toggleClientStatus","params","query","client_type","type","field","e","filter","target","value","prevState","pathname","route","includes","clearFilters","onChangeFilter","rows","map","client","index","nickname","legalName","email","deactivated","table","length","renderTableBody","renderFilters","formatNumber","renderTable","propTypes","object"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router'\nimport accounting from 'accounting'\n\nimport EditClientActions from 'actions/editClient'\nimport ClientsStore from 'stores/clients'\nimport Paginator from 'shared/paginator'\nimport IconButton from 'shared/iconButton'\nimport TextField from 'shared/textField'\nimport SelectField from 'shared/selectField'\nimport TableFilter from 'shared/tableFilter'\n\nfunction getCurrentState () {\n  const clients = ClientsStore.getClientsList()\n  const totalPages = ClientsStore.getTotalPages()\n  const totalItems = ClientsStore.getTotalItems()\n  return {\n    clients,\n    totalItems,\n    totalPages\n  }\n}\n\nconst PLATFORM_STATUS_OPTIONS = [\n  { id: 'all', label: 'Todos' },\n  { id: 'active', label: 'Activos' },\n  { id: 'inactive', label: 'Inactivos' }\n]\n\nclass ClientsTable extends Component {\n  constructor () {\n    super()\n    this.data = {\n      filters: {\n        legal_name: '',\n        platform_status: '',\n        rfc: ''\n      }\n    }\n    this.state = Object.assign({}, this.data, getCurrentState())\n    this._onChange = this._onChange.bind(this)\n  }\n\n  componentDidMount () {\n    // Adds listener, when the Store changes, trigger the _onChange callback func\n    ClientsStore.addChangeListener(this._onChange)\n    this.loadData()\n  }\n\n  componentDidUpdate (prevProps) {\n    if (this.props.location.search !== prevProps.location.search) {\n      this.loadData(this.props)\n    }\n  }\n\n  componentWillUnmount () {\n    // Removes the listener to avoid memory leaks\n    ClientsStore.removeChangeListener(this._onChange)\n  }\n\n  _onChange () {\n    // When the store changes, the state goes to it and pulls the updated data\n    // then sets it so the component rerenders\n    const state = getCurrentState()\n    this.setState(state)\n  }\n\n  // Toggles Client Status (active: true/false)\n  toggleClientStatus (id, active) {\n    // active is a boolean, request is a string that is going to be sent to the API via URL\n    const request = active ? 'deactivate' : 'activate'\n    EditClientActions.toggleClientStatus(id, request)\n  }\n\n  loadData (props = this.props) {\n    const params = {\n      ...this.state.filters,\n      ...props.location.query,\n      client_type: props.type\n    }\n\n    EditClientActions.getClientsList(params)\n    this.setState({ filters: params })\n  }\n\n  onChangeFilter (field, e) {\n    const filter = { [field]: e.target.value }\n    this.setState(prevState => ({\n      filters: Object.assign({}, prevState.filters, filter)\n    }))\n  }\n\n  // Reset all filters and data to default\n  clearFilters () {\n    this.setState({ filters: this.data.filters })\n  }\n\n  // Render a wrapper for the filters element\n  renderFilters () {\n    const { filters } = this.state\n    const pathname = this.props.location.pathname\n    const route = pathname.includes('clientes') ? '/clientes' : '/proveedores'\n    return (\n      <TableFilter\n        baseUrl={`${route}`}\n        filters={filters}\n        onClearFilters={this.clearFilters.bind(this)}\n      >\n        <TextField\n          placeholder='Razón Social'\n          value={this.state.filters.legal_name}\n          onChange={this.onChangeFilter.bind(this, 'legal_name')}\n        />\n        <TextField\n          placeholder='RFC'\n          value={this.state.filters.rfc}\n          onChange={this.onChangeFilter.bind(this, 'rfc')}\n        />\n        <SelectField\n          placeholder='Activos / Inactivos'\n          value={this.state.filters.platform_status}\n          options={PLATFORM_STATUS_OPTIONS}\n          onChange={this.onChangeFilter.bind(this, 'platform_status')}\n        />\n      </TableFilter>\n    )\n  }\n\n  // Renders each client and adds them as a row in the table\n  renderTableBody () {\n    const pathname = this.props.location.pathname\n    const route = pathname === '/clientes' ? 'cliente' : 'proveedor'\n    let rows = this.state.clients.map((client, index) => {\n      return (\n        <tr key={index}>\n          <td className='align-left'>{client.nickname || client.legalName}</td>\n          <td>{client.rfc}</td>\n          <td>{client.email}</td>\n          <td>\n            <button\n              className='link'\n              onClick={this.toggleClientStatus.bind(\n                this,\n                client.id,\n                client.deactivated\n              )}\n            >\n              {client.deactivated ? 'Inactivo' : 'Activo'}\n            </button>\n          </td>\n          <td>\n            <Link to={`/${route}/${client.id}`}>\n              <IconButton icon='pencil' tooltip='Editar' />\n            </Link>\n          </td>\n        </tr>\n      )\n    })\n\n    return <tbody>{rows}</tbody>\n  }\n\n  renderTable () {\n    let table = (\n      <div className='content'>\n        <div className='block unselectable'>\n          <p>No hay clientes</p>\n        </div>\n      </div>\n    )\n    if (this.state.clients.length > 0) {\n      table = (\n        <div>\n          <table className='table'>\n            <thead>\n              <tr>\n                <th className='align-left'>Razón Social</th>\n                <th>RFC</th>\n                <th>Correo</th>\n                <th>Estado</th>\n                <th />\n              </tr>\n            </thead>\n            {this.renderTableBody()}\n          </table>\n          <Paginator\n            totalPages={this.state.totalPages}\n            location={this.props.location}\n          />\n        </div>\n      )\n    }\n    return table\n  }\n\n  render () {\n    return (\n      <div>\n        {this.renderFilters()}\n        <div className='caption'>\n          {accounting.formatNumber(this.state.totalItems)} elementos visibles\n        </div>\n        <br />\n        {this.renderTable()}\n      </div>\n    )\n  }\n}\n\nClientsTable.propTypes = {\n  location: PropTypes.object\n}\nexport default ClientsTable\n"]},"metadata":{},"sourceType":"module"}