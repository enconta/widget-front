{"ast":null,"code":"import _toConsumableArray from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/newInvoice/complementos/foreignTrade/generalInfo/index.js\";\n// Libraries\nimport React from 'react';\nimport accounting from 'accounting'; // Components\n\nimport TextField from 'shared/textField';\nimport SelectField from 'shared/selectField';\nimport { TRADE_INTERNATIONAL_TERMS } from 'shared/catalogs';\nimport { absolutify } from 'utils';\nvar OPERATION_TYPE_KEY = 'operation_type';\nvar REQUEST_KEY_KEY = 'request_key';\nvar ORIGIN_CERTIFICATE_KEY = 'origin_certificate';\nvar ORIGIN_CERTIFICATE_FOLIO_KEY = 'origin_certificate_folio';\nvar INCOTERM_KEY = 'incoterm';\nvar SUBDIVISION_KEY = 'subdivision';\nvar COMMENTS_KEY = 'comments';\nvar USD_EXCHANGE_RATE_KEY = 'usd_exchange_rate';\nvar USD_TOTAL_KEY = 'usd_total';\nvar ORIGIN_CERTIFICATE = [{\n  id: '0',\n  label: 'No funge como certificado de origen'\n}, {\n  id: '1',\n  label: 'Funge como certificado de origen'\n}];\nvar requiredFields = new Set();\n\nvar GeneralInfo =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GeneralInfo, _React$Component);\n\n  function GeneralInfo(props) {\n    var _this$data;\n\n    var _this;\n\n    _classCallCheck(this, GeneralInfo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GeneralInfo).call(this, props));\n    _this.data = (_this$data = {}, _defineProperty(_this$data, OPERATION_TYPE_KEY, '2'), _defineProperty(_this$data, REQUEST_KEY_KEY, 'A1'), _defineProperty(_this$data, ORIGIN_CERTIFICATE_KEY, '1'), _defineProperty(_this$data, ORIGIN_CERTIFICATE_FOLIO_KEY, ''), _defineProperty(_this$data, INCOTERM_KEY, 'FCA'), _defineProperty(_this$data, SUBDIVISION_KEY, '0'), _defineProperty(_this$data, COMMENTS_KEY, ''), _defineProperty(_this$data, USD_EXCHANGE_RATE_KEY, '0'), _defineProperty(_this$data, USD_TOTAL_KEY, '0'), _this$data);\n    _this.state = Object.assign({}, _this.data);\n    return _this;\n  }\n\n  _createClass(GeneralInfo, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // Clears the stored requiredFields\n      requiredFields.clear();\n    } // Iterates over required fields and validates every one of them\n    // Then it returns true if all validations succeedeed, else false.\n\n  }, {\n    key: \"validate\",\n    value: function validate() {\n      return _toConsumableArray(requiredFields) // Converts the Set() into an array\n      .filter(Boolean) // Filters the array from any falsy value\n      .map(function (form) {\n        return form.validate();\n      }) // Calls the validate() method on each form\n      .every(function (e) {\n        return e;\n      }); // Checks if all validations suceeded\n    } // Exports state data\n\n  }, {\n    key: \"export\",\n    value: function _export() {\n      return Object.assign({}, this.state);\n    } // Updates an input's value when it changes\n\n  }, {\n    key: \"onChange\",\n    value: function onChange(field, e) {\n      this.setState(_defineProperty({}, field, e.target.value));\n    } // Sets the correct format to the content field when it losses the focus\n\n  }, {\n    key: \"formatField\",\n    value: function formatField(field) {\n      var kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'string';\n      var formatted = this.setFormat(this.state[field], kind);\n      this.setState(_defineProperty({}, field, formatted));\n    } // Formats the current field as number when it gets the focus\n\n  }, {\n    key: \"unformatField\",\n    value: function unformatField(field) {\n      var kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'string';\n      var unformatted = kind === 'string' ? this.state[field] : accounting.unformat(this.state[field]);\n      this.setState(_defineProperty({}, field, unformatted));\n    } // Sets a specific format depending of the kind\n\n  }, {\n    key: \"setFormat\",\n    value: function setFormat(value) {\n      var kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'string';\n\n      switch (kind) {\n        case 'money':\n          return accounting.formatMoney(absolutify(value), '$ ');\n\n        case 'integer':\n          return absolutify(value).toString();\n\n        case 'percentage':\n          return accounting.formatMoney(absolutify(value), {\n            symbol: '%',\n            format: '%v %s'\n          });\n\n        case 'string':\n          return value;\n\n        default:\n          return value;\n      }\n    } // Renders origin certificate folio if required\n\n  }, {\n    key: \"rendeOriginCertificateFolio\",\n    value: function rendeOriginCertificateFolio() {\n      if (this.shouldRenderOriginCertificateFolio()) {\n        return React.createElement(TextField // origin_certificate_folio    6 a 40 caracteres alfanum√©ricos. Si CertificadoOrigen === 0, este dato no debe existir\n        , {\n          label: \"Folio del certificado de origen\",\n          placeholder: \"Folio del certificado de origen\",\n          value: this.state[ORIGIN_CERTIFICATE_FOLIO_KEY] // 6 a 40 caracteres alfanumericos\n          ,\n          onChange: this.onChange.bind(this, ORIGIN_CERTIFICATE_FOLIO_KEY),\n          required: this.shouldRenderOriginCertificateFolio(),\n          ref: function ref(r) {\n            return requiredFields.add(r);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        });\n      } else {\n        requiredFields.clear();\n      }\n    } // Checks if origin certificate folio text field should be rendered\n\n  }, {\n    key: \"shouldRenderOriginCertificateFolio\",\n    value: function shouldRenderOriginCertificateFolio() {\n      return this.state[ORIGIN_CERTIFICATE_KEY] === '1';\n    } // Renders general info component\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(SelectField // Select origin_certificate: No funge como certificado de origen, val=0 | Funge como certificado de origen, val=1\n      , {\n        label: \"Certificado de origen\",\n        key: \"ORIGIN_CERTIFICATE\",\n        placeholder: \"Selecciona un tipo\",\n        options: ORIGIN_CERTIFICATE,\n        value: this.state[ORIGIN_CERTIFICATE_KEY],\n        onChange: this.onChange.bind(this, ORIGIN_CERTIFICATE_KEY),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), this.rendeOriginCertificateFolio(), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }), React.createElement(SelectField // select c_INCOTERM\n      , {\n        label: \"T\\xE9rminos Internacionales de Comercio\",\n        key: \"TRADE_INTERNATIONAL_TERMS\",\n        placeholder: \"Selecciona uno\",\n        options: TRADE_INTERNATIONAL_TERMS,\n        value: this.state[INCOTERM_KEY],\n        onChange: this.onChange.bind(this, INCOTERM_KEY),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"caption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Comentarios\"), React.createElement(\"div\", {\n        className: \"control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        // libre comments\n        value: this.state[COMMENTS_KEY],\n        onChange: this.onChange.bind(this, COMMENTS_KEY),\n        className: \"textarea\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(TextField // libre usd_exchange_rate\n      , {\n        label: \"Tipo de cambio USD\",\n        placeholder: \"Tipo de cambio USD\",\n        value: this.state[USD_EXCHANGE_RATE_KEY],\n        onChange: this.onChange.bind(this, USD_EXCHANGE_RATE_KEY),\n        onBlur: this.formatField.bind(this, USD_EXCHANGE_RATE_KEY, 'money'),\n        onFocus: this.unformatField.bind(this, USD_EXCHANGE_RATE_KEY, 'money'),\n        required: true,\n        ref: function ref(r) {\n          return requiredFields.add(r);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }), React.createElement(TextField // calculado usd_total\n      , {\n        label: \"Importe total USD\",\n        placeholder: \"Importe total USD\",\n        value: this.state[USD_TOTAL_KEY],\n        onChange: this.onChange.bind(this, USD_TOTAL_KEY),\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return GeneralInfo;\n}(React.Component);\n\nexport default GeneralInfo;","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/newInvoice/complementos/foreignTrade/generalInfo/index.js"],"names":["React","accounting","TextField","SelectField","TRADE_INTERNATIONAL_TERMS","absolutify","OPERATION_TYPE_KEY","REQUEST_KEY_KEY","ORIGIN_CERTIFICATE_KEY","ORIGIN_CERTIFICATE_FOLIO_KEY","INCOTERM_KEY","SUBDIVISION_KEY","COMMENTS_KEY","USD_EXCHANGE_RATE_KEY","USD_TOTAL_KEY","ORIGIN_CERTIFICATE","id","label","requiredFields","Set","GeneralInfo","props","data","state","Object","assign","clear","filter","Boolean","map","form","validate","every","e","field","setState","target","value","kind","formatted","setFormat","unformatted","unformat","formatMoney","toString","symbol","format","shouldRenderOriginCertificateFolio","onChange","bind","r","add","rendeOriginCertificateFolio","formatField","unformatField","Component"],"mappings":"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","sourcesContent":["// Libraries\nimport React from 'react'\nimport accounting from 'accounting'\n\n// Components\nimport TextField from 'shared/textField'\nimport SelectField from 'shared/selectField'\nimport { TRADE_INTERNATIONAL_TERMS } from 'shared/catalogs'\nimport { absolutify } from 'utils'\n\nconst OPERATION_TYPE_KEY = 'operation_type'\nconst REQUEST_KEY_KEY = 'request_key'\nconst ORIGIN_CERTIFICATE_KEY = 'origin_certificate'\nconst ORIGIN_CERTIFICATE_FOLIO_KEY = 'origin_certificate_folio'\nconst INCOTERM_KEY = 'incoterm'\nconst SUBDIVISION_KEY = 'subdivision'\nconst COMMENTS_KEY = 'comments'\nconst USD_EXCHANGE_RATE_KEY = 'usd_exchange_rate'\nconst USD_TOTAL_KEY = 'usd_total'\n\nconst ORIGIN_CERTIFICATE = [\n  { id: '0', label: 'No funge como certificado de origen' },\n  { id: '1', label: 'Funge como certificado de origen' }\n]\n\nconst requiredFields = new Set()\n\nclass GeneralInfo extends React.Component {\n  constructor (props) {\n    super(props)\n    this.data = {\n      [OPERATION_TYPE_KEY]: '2',\n      [REQUEST_KEY_KEY]: 'A1',\n      [ORIGIN_CERTIFICATE_KEY]: '1',\n      [ORIGIN_CERTIFICATE_FOLIO_KEY]: '',\n      [INCOTERM_KEY]: 'FCA',\n      [SUBDIVISION_KEY]: '0',\n      [COMMENTS_KEY]: '',\n      [USD_EXCHANGE_RATE_KEY]: '0',\n      [USD_TOTAL_KEY]: '0'\n    }\n    this.state = Object.assign({}, this.data)\n  }\n\n  componentWillUnmount () {\n    // Clears the stored requiredFields\n    requiredFields.clear()\n  }\n\n  // Iterates over required fields and validates every one of them\n  // Then it returns true if all validations succeedeed, else false.\n  validate () {\n    return [...requiredFields] // Converts the Set() into an array\n      .filter(Boolean) // Filters the array from any falsy value\n      .map(form => form.validate()) // Calls the validate() method on each form\n      .every(e => e) // Checks if all validations suceeded\n  }\n\n  // Exports state data\n  export () {\n    return Object.assign({}, this.state)\n  }\n\n  // Updates an input's value when it changes\n  onChange (field, e) {\n    this.setState({\n      [field]: e.target.value\n    })\n  }\n\n  // Sets the correct format to the content field when it losses the focus\n  formatField (field, kind = 'string') {\n    const formatted = this.setFormat(this.state[field], kind)\n    this.setState({\n      [field]: formatted\n    })\n  }\n\n  // Formats the current field as number when it gets the focus\n  unformatField (field, kind = 'string') {\n    const unformatted =\n      kind === 'string'\n        ? this.state[field]\n        : accounting.unformat(this.state[field])\n    this.setState({\n      [field]: unformatted\n    })\n  }\n\n  // Sets a specific format depending of the kind\n  setFormat (value, kind = 'string') {\n    switch (kind) {\n      case 'money':\n        return accounting.formatMoney(absolutify(value), '$ ')\n      case 'integer':\n        return absolutify(value).toString()\n      case 'percentage':\n        return accounting.formatMoney(absolutify(value), {\n          symbol: '%',\n          format: '%v %s'\n        })\n      case 'string':\n        return value\n      default:\n        return value\n    }\n  }\n\n  // Renders origin certificate folio if required\n  rendeOriginCertificateFolio () {\n    if (this.shouldRenderOriginCertificateFolio()) {\n      return (\n        <TextField // origin_certificate_folio    6 a 40 caracteres alfanum√©ricos. Si CertificadoOrigen === 0, este dato no debe existir\n          label='Folio del certificado de origen'\n          placeholder='Folio del certificado de origen'\n          value={this.state[ORIGIN_CERTIFICATE_FOLIO_KEY]} // 6 a 40 caracteres alfanumericos\n          onChange={this.onChange.bind(this, ORIGIN_CERTIFICATE_FOLIO_KEY)}\n          required={this.shouldRenderOriginCertificateFolio()}\n          ref={r => requiredFields.add(r)}\n        />\n      )\n    } else {\n      requiredFields.clear()\n    }\n  }\n\n  // Checks if origin certificate folio text field should be rendered\n  shouldRenderOriginCertificateFolio () {\n    return this.state[ORIGIN_CERTIFICATE_KEY] === '1'\n  }\n\n  // Renders general info component\n  render () {\n    return (\n      <div>\n        <SelectField // Select origin_certificate: No funge como certificado de origen, val=0 | Funge como certificado de origen, val=1\n          label='Certificado de origen'\n          key='ORIGIN_CERTIFICATE'\n          placeholder='Selecciona un tipo'\n          options={ORIGIN_CERTIFICATE}\n          value={this.state[ORIGIN_CERTIFICATE_KEY]}\n          onChange={this.onChange.bind(this, ORIGIN_CERTIFICATE_KEY)}\n        />\n        <br />\n        {this.rendeOriginCertificateFolio()}\n        <br />\n        <SelectField // select c_INCOTERM\n          label='T√©rminos Internacionales de Comercio'\n          key='TRADE_INTERNATIONAL_TERMS'\n          placeholder='Selecciona uno'\n          options={TRADE_INTERNATIONAL_TERMS}\n          value={this.state[INCOTERM_KEY]}\n          onChange={this.onChange.bind(this, INCOTERM_KEY)}\n        />\n        <br />\n        <div className='columns'>\n          <div className='column'>\n            <label className='caption'>Comentarios</label>\n            <div className='control'>\n              <textarea // libre comments\n                value={this.state[COMMENTS_KEY]}\n                onChange={this.onChange.bind(this, COMMENTS_KEY)}\n                className='textarea'\n              />\n            </div>\n          </div>\n          <div className='column'>\n            <TextField // libre usd_exchange_rate\n              label='Tipo de cambio USD'\n              placeholder='Tipo de cambio USD'\n              value={this.state[USD_EXCHANGE_RATE_KEY]}\n              onChange={this.onChange.bind(this, USD_EXCHANGE_RATE_KEY)}\n              onBlur={this.formatField.bind(\n                this,\n                USD_EXCHANGE_RATE_KEY,\n                'money'\n              )}\n              onFocus={this.unformatField.bind(\n                this,\n                USD_EXCHANGE_RATE_KEY,\n                'money'\n              )}\n              required\n              ref={r => requiredFields.add(r)}\n            />\n            <br />\n            <TextField // calculado usd_total\n              label='Importe total USD'\n              placeholder='Importe total USD'\n              value={this.state[USD_TOTAL_KEY]}\n              onChange={this.onChange.bind(this, USD_TOTAL_KEY)}\n              disabled\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default GeneralInfo\n"]},"metadata":{},"sourceType":"module"}