{"ast":null,"code":"import _toConsumableArray from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/newInvoice/shared/payrollCharges/perceptions/index.js\";\n// Libraries\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport classNames from 'classnames';\nimport accounting from 'accounting'; // Components\n\nimport Button from 'shared/button';\nimport { amountToCents, absolutify } from 'utils'; // Catalogs\n\nimport { PERCEPTION_TYPE } from 'shared/catalogs';\nimport SelectField from 'shared/selectField';\nimport IconButton from 'shared/iconButton';\nimport TextField from 'shared/textField'; // Keys\n\nvar CHARGES_KEY = 'charges';\nvar CHARGES_KIND_KEY = 'perception_type';\nvar CHARGES_CATEGORY_KEY = 'clave';\nvar CHARGES_CONCEPT_KEY = 'concept';\nvar CHARGES_TAXED_AMOUNT_KEY = 'taxed_amount_cents';\nvar CHARGES_TAXED_EXEMPT_KEY = 'exempt_amount_cents';\nvar SUBTOTAL_KEY = 'subtotal'; // Prevent rendering this special cases\n\nvar DO_NOT_RENDER = ['019', '014', '022', '023', '025'];\nvar requiredFields = new Set();\n\nvar Perceptions =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Perceptions, _Component);\n\n  function Perceptions() {\n    var _this$data;\n\n    var _this;\n\n    _classCallCheck(this, Perceptions);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Perceptions).call(this));\n    _this.data = (_this$data = {}, _defineProperty(_this$data, CHARGES_KEY, []), _defineProperty(_this$data, SUBTOTAL_KEY, 0), _this$data);\n    _this.state = Object.assign({}, _this.data);\n    return _this;\n  }\n\n  _createClass(Perceptions, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Add the first, non-removable perception\n      this.addItem();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // Clears the stored requiredFields\n      requiredFields.clear();\n    } // Iterates over every charge in the state and returns an array of the charges with the amounts formatted to cents\n\n  }, {\n    key: \"exportPerceptions\",\n    value: function exportPerceptions() {\n      return this.state[CHARGES_KEY].map(function (charge) {\n        var _Object$assign;\n\n        return Object.assign({}, charge, (_Object$assign = {}, _defineProperty(_Object$assign, CHARGES_TAXED_AMOUNT_KEY, amountToCents(charge[CHARGES_TAXED_AMOUNT_KEY])), _defineProperty(_Object$assign, CHARGES_TAXED_EXEMPT_KEY, amountToCents(charge[CHARGES_TAXED_EXEMPT_KEY])), _Object$assign));\n      });\n    } // Iterates over required fields and validates every one of them\n    // Then it returns true if all validations succeedeed, else false.\n\n  }, {\n    key: \"validateRequiredFields\",\n    value: function validateRequiredFields() {\n      var _this2 = this;\n\n      return _toConsumableArray(requiredFields) // Converts the Set() into an array\n      .filter(Boolean) // Filters the array from any falsy value\n      .map(function (form) {\n        return form.validate.call(_this2);\n      }) // Calls the validate() method on each form\n      .every(function (e) {\n        return e;\n      }); // Checks if all validations suceeded\n    } // Adds one perception to this.state.charges\n\n  }, {\n    key: \"addItem\",\n    value: function addItem() {\n      var _charges$push;\n\n      var charges = this.state.charges;\n      charges.push((_charges$push = {}, _defineProperty(_charges$push, CHARGES_KIND_KEY, ''), _defineProperty(_charges$push, CHARGES_CATEGORY_KEY, ''), _defineProperty(_charges$push, CHARGES_CONCEPT_KEY, ''), _defineProperty(_charges$push, CHARGES_TAXED_AMOUNT_KEY, '$ 0.00'), _defineProperty(_charges$push, CHARGES_TAXED_EXEMPT_KEY, '$ 0.00'), _charges$push));\n      this.setState(_defineProperty({}, CHARGES_KEY, charges));\n    } // Persist changes to charges[charge] in field\n\n  }, {\n    key: \"onChange\",\n    value: function onChange(charge, field, e) {\n      var _this3 = this;\n\n      this.setState(_defineProperty({}, CHARGES_KEY, update(this.state[CHARGES_KEY], _defineProperty({}, charge, _defineProperty({}, field, {\n        $set: e.target.value\n      })))), function () {\n        if (field === CHARGES_TAXED_AMOUNT_KEY || field === CHARGES_TAXED_EXEMPT_KEY) {\n          _this3.updateSubtotals();\n        }\n      });\n    } // Format price as $ 1,234.56\n\n  }, {\n    key: \"formatPrice\",\n    value: function formatPrice(index, field) {\n      var formatted = accounting.formatMoney(absolutify(this.state[CHARGES_KEY][index][field]), '$ ');\n      this.setState(_defineProperty({}, CHARGES_KEY, update(this.state[CHARGES_KEY], _defineProperty({}, index, _defineProperty({}, field, {\n        $set: formatted\n      })))));\n    } // Parse formatted price\n\n  }, {\n    key: \"unformatPrice\",\n    value: function unformatPrice(index, field) {\n      var unformatted = absolutify(this.state[CHARGES_KEY][index][field]);\n      this.setState(_defineProperty({}, CHARGES_KEY, update(this.state[CHARGES_KEY], _defineProperty({}, index, _defineProperty({}, field, {\n        $set: unformatted\n      })))));\n    } // Update subtotal\n\n  }, {\n    key: \"updateSubtotals\",\n    value: function updateSubtotals() {\n      // Iterates over every charge and acumulativamente adds it and assigns the result to subtotal\n      var subtotal = this.state[CHARGES_KEY].reduce(function (acc, charge) {\n        return acc + absolutify(charge[CHARGES_TAXED_AMOUNT_KEY]) + absolutify(charge[CHARGES_TAXED_EXEMPT_KEY]);\n      }, 0); // Update parent totals and subtotals\n\n      this.props.updatePayrollTotals(this.props.keyId, subtotal);\n      this.setState(_defineProperty({}, SUBTOTAL_KEY, subtotal));\n    } // Delete a perception from this.state.charges\n\n  }, {\n    key: \"deleteItem\",\n    value: function deleteItem(index) {\n      requiredFields.clear();\n      var charges = this.state[CHARGES_KEY];\n      charges.splice(index, 1);\n      this.setState(_defineProperty({}, CHARGES_KEY, charges), this.updateSubtotals);\n    } // Items\n\n  }, {\n    key: \"renderItemList\",\n    value: function renderItemList() {\n      var _this4 = this;\n\n      var chargeList = null;\n\n      if (this.state[CHARGES_KEY].length > 0) {\n        chargeList = this.state[CHARGES_KEY].map(function (charge, index) {\n          return React.createElement(\"tr\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 159\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            className: \"is-one-quarter\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 160\n            },\n            __self: this\n          }, React.createElement(SelectField, {\n            placeholder: \"Selecciona una opci\\xF3n\",\n            name: \"Tipo de percepci\\xF3n\",\n            value: charge[CHARGES_KIND_KEY],\n            onChange: _this4.onChange.bind(_this4, index, CHARGES_KIND_KEY),\n            options: PERCEPTION_TYPE,\n            hiddenOptions: DO_NOT_RENDER,\n            showId: true,\n            required: true,\n            onValidationError: _this4.props.onValidationError,\n            ref: function ref(r) {\n              return requiredFields.add(r);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 161\n            },\n            __self: this\n          })), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 174\n            },\n            __self: this\n          }, React.createElement(TextField, {\n            value: charge[CHARGES_CATEGORY_KEY],\n            onChange: _this4.onChange.bind(_this4, index, CHARGES_CATEGORY_KEY),\n            name: \"Clave de percepci\\xF3n\",\n            required: true,\n            onValidationError: _this4.props.onValidationError,\n            ref: function ref(r) {\n              return requiredFields.add(r);\n            },\n            selectAllOnFocus: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 175\n            },\n            __self: this\n          })), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 185\n            },\n            __self: this\n          }, React.createElement(TextField, {\n            value: charge[CHARGES_CONCEPT_KEY],\n            onChange: _this4.onChange.bind(_this4, index, CHARGES_CONCEPT_KEY),\n            onValidationError: _this4.props.onValidationError,\n            name: \"Concepto de percepci\\xF3n\",\n            required: true,\n            ref: function ref(r) {\n              return requiredFields.add(r);\n            },\n            selectAllOnFocus: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 186\n            },\n            __self: this\n          })), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 196\n            },\n            __self: this\n          }, React.createElement(TextField, {\n            value: charge[CHARGES_TAXED_AMOUNT_KEY],\n            onChange: _this4.onChange.bind(_this4, index, CHARGES_TAXED_AMOUNT_KEY),\n            onBlur: _this4.formatPrice.bind(_this4, index, CHARGES_TAXED_AMOUNT_KEY),\n            onFocus: _this4.unformatPrice.bind(_this4, index, CHARGES_TAXED_AMOUNT_KEY),\n            selectAllOnFocus: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 197\n            },\n            __self: this\n          })), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 217\n            },\n            __self: this\n          }, React.createElement(TextField, {\n            value: charge[CHARGES_TAXED_EXEMPT_KEY],\n            onChange: _this4.onChange.bind(_this4, index, CHARGES_TAXED_EXEMPT_KEY),\n            onBlur: _this4.formatPrice.bind(_this4, index, CHARGES_TAXED_EXEMPT_KEY),\n            onFocus: _this4.unformatPrice.bind(_this4, index, CHARGES_TAXED_EXEMPT_KEY),\n            selectAllOnFocus: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 218\n            },\n            __self: this\n          })), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 238\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            className: classNames('table--actions', {\n              'is-hidden': _this4.state[CHARGES_KEY].length <= 1\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 239\n            },\n            __self: this\n          }, React.createElement(IconButton, {\n            icon: \"delete\",\n            onClick: _this4.deleteItem.bind(_this4, index),\n            tooltip: \"Borrar\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 244\n            },\n            __self: this\n          }))));\n        });\n      }\n\n      return chargeList;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"subheader-green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, \"Percepciones\"), React.createElement(\"table\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, \"Tipo\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, \"Clave\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, \"Concepto\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, \"Importe Gravado\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, \"Importe Exento\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, \"Acciones\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, this.renderItemList()), React.createElement(Button, {\n        buttonStyle: \"primaryLink\",\n        icon: \"plus\",\n        onClick: this.addItem.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, \"Agregar Percepci\\xF3n\"), React.createElement(\"tfoot\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, \"Subtotal:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, accounting.formatMoney(this.state[SUBTOTAL_KEY], '$ ', 2)), React.createElement(\"td\", {\n        colSpan: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Perceptions;\n}(Component);\n\nPerceptions.propTypes = {\n  onValidationError: PropTypes.func,\n  updatePayrollTotals: PropTypes.func,\n  keyId: PropTypes.string\n};\nPerceptions.defaultProps = {\n  onValidationError: function onValidationError() {}\n};\nexport default Perceptions;","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/newInvoice/shared/payrollCharges/perceptions/index.js"],"names":["React","Component","PropTypes","update","classNames","accounting","Button","amountToCents","absolutify","PERCEPTION_TYPE","SelectField","IconButton","TextField","CHARGES_KEY","CHARGES_KIND_KEY","CHARGES_CATEGORY_KEY","CHARGES_CONCEPT_KEY","CHARGES_TAXED_AMOUNT_KEY","CHARGES_TAXED_EXEMPT_KEY","SUBTOTAL_KEY","DO_NOT_RENDER","requiredFields","Set","Perceptions","data","state","Object","assign","addItem","clear","map","charge","filter","Boolean","form","validate","call","every","e","charges","push","setState","field","$set","target","value","updateSubtotals","index","formatted","formatMoney","unformatted","subtotal","reduce","acc","props","updatePayrollTotals","keyId","splice","chargeList","length","onChange","bind","onValidationError","r","add","formatPrice","unformatPrice","deleteItem","renderItemList","propTypes","func","string","defaultProps"],"mappings":";;;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C,C,CAEA;;AACA,SAASC,eAAT,QAAgC,iBAAhC;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,SAAP,MAAsB,kBAAtB,C,CAEA;;AACA,IAAIC,WAAW,GAAG,SAAlB;AACA,IAAIC,gBAAgB,GAAG,iBAAvB;AACA,IAAIC,oBAAoB,GAAG,OAA3B;AACA,IAAIC,mBAAmB,GAAG,SAA1B;AACA,IAAIC,wBAAwB,GAAG,oBAA/B;AACA,IAAIC,wBAAwB,GAAG,qBAA/B;AACA,IAAIC,YAAY,GAAG,UAAnB,C,CAEA;;AACA,IAAMC,aAAa,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,CAAtB;AAEA,IAAMC,cAAc,GAAG,IAAIC,GAAJ,EAAvB;;IAEMC,W;;;;;AACJ,yBAAe;AAAA;;AAAA;;AAAA;;AACb;AACA,UAAKC,IAAL,iDACGX,WADH,EACiB,EADjB,+BAEGM,YAFH,EAEkB,CAFlB;AAIA,UAAKM,KAAL,GAAaC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,MAAKH,IAAvB,CAAb;AANa;AAOd;;;;wCAEoB;AACnB;AACA,WAAKI,OAAL;AACD;;;2CAEuB;AACtB;AACAP,MAAAA,cAAc,CAACQ,KAAf;AACD,K,CAED;;;;wCACqB;AACnB,aAAO,KAAKJ,KAAL,CAAWZ,WAAX,EAAwBiB,GAAxB,CAA4B,UAAAC,MAAM;AAAA;;AAAA,eACvCL,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBI,MAAlB,wDACGd,wBADH,EAC8BV,aAAa,CACvCwB,MAAM,CAACd,wBAAD,CADiC,CAD3C,mCAIGC,wBAJH,EAI8BX,aAAa,CACvCwB,MAAM,CAACb,wBAAD,CADiC,CAJ3C,mBADuC;AAAA,OAAlC,CAAP;AAUD,K,CAED;AACA;;;;6CAC0B;AAAA;;AACxB,aAAO,mBAAIG,cAAJ,EAAoB;AAApB,OACJW,MADI,CACGC,OADH,EACY;AADZ,OAEJH,GAFI,CAEA,UAAAI,IAAI;AAAA,eAAIA,IAAI,CAACC,QAAL,CAAcC,IAAd,CAAmB,MAAnB,CAAJ;AAAA,OAFJ,EAEkC;AAFlC,OAGJC,KAHI,CAGE,UAAAC,CAAC;AAAA,eAAIA,CAAJ;AAAA,OAHH,CAAP,CADwB,CAIP;AAClB,K,CAED;;;;8BACW;AAAA;;AAAA,UACHC,OADG,GACS,KAAKd,KADd,CACHc,OADG;AAETA,MAAAA,OAAO,CAACC,IAAR,qDACG1B,gBADH,EACsB,EADtB,kCAEGC,oBAFH,EAE0B,EAF1B,kCAGGC,mBAHH,EAGyB,EAHzB,kCAIGC,wBAJH,EAI8B,QAJ9B,kCAKGC,wBALH,EAK8B,QAL9B;AAOA,WAAKuB,QAAL,qBAAiB5B,WAAjB,EAA+B0B,OAA/B;AACD,K,CAED;;;;6BACUR,M,EAAQW,K,EAAOJ,C,EAAG;AAAA;;AAC1B,WAAKG,QAAL,qBAEK5B,WAFL,EAEmBV,MAAM,CAAC,KAAKsB,KAAL,CAAWZ,WAAX,CAAD,sBAClBkB,MADkB,sBACNW,KADM,EACE;AAAEC,QAAAA,IAAI,EAAEL,CAAC,CAACM,MAAF,CAASC;AAAjB,OADF,GAFzB,GAME,YAAM;AACJ,YACEH,KAAK,KAAKzB,wBAAV,IACAyB,KAAK,KAAKxB,wBAFZ,EAGE;AACA,UAAA,MAAI,CAAC4B,eAAL;AACD;AACF,OAbH;AAeD,K,CAED;;;;gCACaC,K,EAAOL,K,EAAO;AACzB,UAAIM,SAAS,GAAG3C,UAAU,CAAC4C,WAAX,CACdzC,UAAU,CAAC,KAAKiB,KAAL,CAAWZ,WAAX,EAAwBkC,KAAxB,EAA+BL,KAA/B,CAAD,CADI,EAEd,IAFc,CAAhB;AAIA,WAAKD,QAAL,qBACG5B,WADH,EACiBV,MAAM,CAAC,KAAKsB,KAAL,CAAWZ,WAAX,CAAD,sBAClBkC,KADkB,sBACPL,KADO,EACC;AAAEC,QAAAA,IAAI,EAAEK;AAAR,OADD,GADvB;AAKD,K,CAED;;;;kCACeD,K,EAAOL,K,EAAO;AAC3B,UAAIQ,WAAW,GAAG1C,UAAU,CAAC,KAAKiB,KAAL,CAAWZ,WAAX,EAAwBkC,KAAxB,EAA+BL,KAA/B,CAAD,CAA5B;AACA,WAAKD,QAAL,qBACG5B,WADH,EACiBV,MAAM,CAAC,KAAKsB,KAAL,CAAWZ,WAAX,CAAD,sBAClBkC,KADkB,sBACPL,KADO,EACC;AAAEC,QAAAA,IAAI,EAAEO;AAAR,OADD,GADvB;AAKD,K,CAED;;;;sCACmB;AACjB;AACA,UAAIC,QAAQ,GAAG,KAAK1B,KAAL,CAAWZ,WAAX,EAAwBuC,MAAxB,CAA+B,UAACC,GAAD,EAAMtB,MAAN,EAAiB;AAC7D,eACEsB,GAAG,GACH7C,UAAU,CAACuB,MAAM,CAACd,wBAAD,CAAP,CADV,GAEAT,UAAU,CAACuB,MAAM,CAACb,wBAAD,CAAP,CAHZ;AAKD,OANc,EAMZ,CANY,CAAf,CAFiB,CASjB;;AACA,WAAKoC,KAAL,CAAWC,mBAAX,CAA+B,KAAKD,KAAL,CAAWE,KAA1C,EAAiDL,QAAjD;AACA,WAAKV,QAAL,qBAAiBtB,YAAjB,EAAgCgC,QAAhC;AACD,K,CAED;;;;+BACYJ,K,EAAO;AACjB1B,MAAAA,cAAc,CAACQ,KAAf;AACA,UAAIU,OAAO,GAAG,KAAKd,KAAL,CAAWZ,WAAX,CAAd;AACA0B,MAAAA,OAAO,CAACkB,MAAR,CAAeV,KAAf,EAAsB,CAAtB;AACA,WAAKN,QAAL,qBAAiB5B,WAAjB,EAA+B0B,OAA/B,GAA0C,KAAKO,eAA/C;AACD,K,CAED;;;;qCACkB;AAAA;;AAChB,UAAIY,UAAU,GAAG,IAAjB;;AACA,UAAI,KAAKjC,KAAL,CAAWZ,WAAX,EAAwB8C,MAAxB,GAAiC,CAArC,EAAwC;AACtCD,QAAAA,UAAU,GAAG,KAAKjC,KAAL,CAAWZ,WAAX,EAAwBiB,GAAxB,CAA4B,UAACC,MAAD,EAASgB,KAAT,EAAmB;AAC1D,iBACE;AAAI,YAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAI,YAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,WAAD;AACE,YAAA,WAAW,EAAC,0BADd;AAEE,YAAA,IAAI,EAAC,uBAFP;AAGE,YAAA,KAAK,EAAEhB,MAAM,CAACjB,gBAAD,CAHf;AAIE,YAAA,QAAQ,EAAE,MAAI,CAAC8C,QAAL,CAAcC,IAAd,CAAmB,MAAnB,EAAyBd,KAAzB,EAAgCjC,gBAAhC,CAJZ;AAKE,YAAA,OAAO,EAAEL,eALX;AAME,YAAA,aAAa,EAAEW,aANjB;AAOE,YAAA,MAAM,MAPR;AAQE,YAAA,QAAQ,MARV;AASE,YAAA,iBAAiB,EAAE,MAAI,CAACkC,KAAL,CAAWQ,iBAThC;AAUE,YAAA,GAAG,EAAE,aAAAC,CAAC;AAAA,qBAAI1C,cAAc,CAAC2C,GAAf,CAAmBD,CAAnB,CAAJ;AAAA,aAVR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,SAAD;AACE,YAAA,KAAK,EAAEhC,MAAM,CAAChB,oBAAD,CADf;AAEE,YAAA,QAAQ,EAAE,MAAI,CAAC6C,QAAL,CAAcC,IAAd,CAAmB,MAAnB,EAAyBd,KAAzB,EAAgChC,oBAAhC,CAFZ;AAGE,YAAA,IAAI,EAAC,wBAHP;AAIE,YAAA,QAAQ,MAJV;AAKE,YAAA,iBAAiB,EAAE,MAAI,CAACuC,KAAL,CAAWQ,iBALhC;AAME,YAAA,GAAG,EAAE,aAAAC,CAAC;AAAA,qBAAI1C,cAAc,CAAC2C,GAAf,CAAmBD,CAAnB,CAAJ;AAAA,aANR;AAOE,YAAA,gBAAgB,MAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAfF,EA0BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,SAAD;AACE,YAAA,KAAK,EAAEhC,MAAM,CAACf,mBAAD,CADf;AAEE,YAAA,QAAQ,EAAE,MAAI,CAAC4C,QAAL,CAAcC,IAAd,CAAmB,MAAnB,EAAyBd,KAAzB,EAAgC/B,mBAAhC,CAFZ;AAGE,YAAA,iBAAiB,EAAE,MAAI,CAACsC,KAAL,CAAWQ,iBAHhC;AAIE,YAAA,IAAI,EAAC,2BAJP;AAKE,YAAA,QAAQ,MALV;AAME,YAAA,GAAG,EAAE,aAAAC,CAAC;AAAA,qBAAI1C,cAAc,CAAC2C,GAAf,CAAmBD,CAAnB,CAAJ;AAAA,aANR;AAOE,YAAA,gBAAgB,MAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CA1BF,EAqCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,SAAD;AACE,YAAA,KAAK,EAAEhC,MAAM,CAACd,wBAAD,CADf;AAEE,YAAA,QAAQ,EAAE,MAAI,CAAC2C,QAAL,CAAcC,IAAd,CACR,MADQ,EAERd,KAFQ,EAGR9B,wBAHQ,CAFZ;AAOE,YAAA,MAAM,EAAE,MAAI,CAACgD,WAAL,CAAiBJ,IAAjB,CACN,MADM,EAENd,KAFM,EAGN9B,wBAHM,CAPV;AAYE,YAAA,OAAO,EAAE,MAAI,CAACiD,aAAL,CAAmBL,IAAnB,CACP,MADO,EAEPd,KAFO,EAGP9B,wBAHO,CAZX;AAiBE,YAAA,gBAAgB,MAjBlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CArCF,EA0DE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,SAAD;AACE,YAAA,KAAK,EAAEc,MAAM,CAACb,wBAAD,CADf;AAEE,YAAA,QAAQ,EAAE,MAAI,CAAC0C,QAAL,CAAcC,IAAd,CACR,MADQ,EAERd,KAFQ,EAGR7B,wBAHQ,CAFZ;AAOE,YAAA,MAAM,EAAE,MAAI,CAAC+C,WAAL,CAAiBJ,IAAjB,CACN,MADM,EAENd,KAFM,EAGN7B,wBAHM,CAPV;AAYE,YAAA,OAAO,EAAE,MAAI,CAACgD,aAAL,CAAmBL,IAAnB,CACP,MADO,EAEPd,KAFO,EAGP7B,wBAHO,CAZX;AAiBE,YAAA,gBAAgB,MAjBlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CA1DF,EA+EE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AACE,YAAA,SAAS,EAAEd,UAAU,CAAC,gBAAD,EAAmB;AACtC,2BAAa,MAAI,CAACqB,KAAL,CAAWZ,WAAX,EAAwB8C,MAAxB,IAAkC;AADT,aAAnB,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAKE,oBAAC,UAAD;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,OAAO,EAAE,MAAI,CAACQ,UAAL,CAAgBN,IAAhB,CAAqB,MAArB,EAA2Bd,KAA3B,CAFX;AAGE,YAAA,OAAO,EAAC,QAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,CADF,CA/EF,CADF;AA+FD,SAhGY,CAAb;AAiGD;;AACD,aAAOW,UAAP;AACD;;;6BAES;AACR,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,CADF,CADF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQ,KAAKU,cAAL,EAAR,CAXF,EAYE,oBAAC,MAAD;AACE,QAAA,WAAW,EAAC,aADd;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,OAAO,EAAE,KAAKxC,OAAL,CAAaiC,IAAb,CAAkB,IAAlB,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAZF,EAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,OAAO,EAAE,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGxD,UAAU,CAAC4C,WAAX,CAAuB,KAAKxB,KAAL,CAAWN,YAAX,CAAvB,EAAiD,IAAjD,EAAuD,CAAvD,CADH,CAHF,EAME;AAAI,QAAA,OAAO,EAAE,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADF,CAnBF,CAFF,CADF;AAmCD;;;;EAtQuBlB,S;;AAyQ1BsB,WAAW,CAAC8C,SAAZ,GAAwB;AACtBP,EAAAA,iBAAiB,EAAE5D,SAAS,CAACoE,IADP;AAEtBf,EAAAA,mBAAmB,EAAErD,SAAS,CAACoE,IAFT;AAGtBd,EAAAA,KAAK,EAAEtD,SAAS,CAACqE;AAHK,CAAxB;AAMAhD,WAAW,CAACiD,YAAZ,GAA2B;AACzBV,EAAAA,iBAAiB,EAAE,6BAAM,CAAE;AADF,CAA3B;AAIA,eAAevC,WAAf","sourcesContent":["// Libraries\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport update from 'immutability-helper'\nimport classNames from 'classnames'\nimport accounting from 'accounting'\n\n// Components\nimport Button from 'shared/button'\nimport { amountToCents, absolutify } from 'utils'\n\n// Catalogs\nimport { PERCEPTION_TYPE } from 'shared/catalogs'\nimport SelectField from 'shared/selectField'\nimport IconButton from 'shared/iconButton'\nimport TextField from 'shared/textField'\n\n// Keys\nlet CHARGES_KEY = 'charges'\nlet CHARGES_KIND_KEY = 'perception_type'\nlet CHARGES_CATEGORY_KEY = 'clave'\nlet CHARGES_CONCEPT_KEY = 'concept'\nlet CHARGES_TAXED_AMOUNT_KEY = 'taxed_amount_cents'\nlet CHARGES_TAXED_EXEMPT_KEY = 'exempt_amount_cents'\nlet SUBTOTAL_KEY = 'subtotal'\n\n// Prevent rendering this special cases\nconst DO_NOT_RENDER = ['019', '014', '022', '023', '025']\n\nconst requiredFields = new Set()\n\nclass Perceptions extends Component {\n  constructor () {\n    super()\n    this.data = {\n      [CHARGES_KEY]: [],\n      [SUBTOTAL_KEY]: 0\n    }\n    this.state = Object.assign({}, this.data)\n  }\n\n  componentDidMount () {\n    // Add the first, non-removable perception\n    this.addItem()\n  }\n\n  componentWillUnmount () {\n    // Clears the stored requiredFields\n    requiredFields.clear()\n  }\n\n  // Iterates over every charge in the state and returns an array of the charges with the amounts formatted to cents\n  exportPerceptions () {\n    return this.state[CHARGES_KEY].map(charge =>\n      Object.assign({}, charge, {\n        [CHARGES_TAXED_AMOUNT_KEY]: amountToCents(\n          charge[CHARGES_TAXED_AMOUNT_KEY]\n        ),\n        [CHARGES_TAXED_EXEMPT_KEY]: amountToCents(\n          charge[CHARGES_TAXED_EXEMPT_KEY]\n        )\n      })\n    )\n  }\n\n  // Iterates over required fields and validates every one of them\n  // Then it returns true if all validations succeedeed, else false.\n  validateRequiredFields () {\n    return [...requiredFields] // Converts the Set() into an array\n      .filter(Boolean) // Filters the array from any falsy value\n      .map(form => form.validate.call(this)) // Calls the validate() method on each form\n      .every(e => e) // Checks if all validations suceeded\n  }\n\n  // Adds one perception to this.state.charges\n  addItem () {\n    let { charges } = this.state\n    charges.push({\n      [CHARGES_KIND_KEY]: '',\n      [CHARGES_CATEGORY_KEY]: '',\n      [CHARGES_CONCEPT_KEY]: '',\n      [CHARGES_TAXED_AMOUNT_KEY]: '$ 0.00',\n      [CHARGES_TAXED_EXEMPT_KEY]: '$ 0.00'\n    })\n    this.setState({ [CHARGES_KEY]: charges })\n  }\n\n  // Persist changes to charges[charge] in field\n  onChange (charge, field, e) {\n    this.setState(\n      {\n        [CHARGES_KEY]: update(this.state[CHARGES_KEY], {\n          [charge]: { [field]: { $set: e.target.value } }\n        })\n      },\n      () => {\n        if (\n          field === CHARGES_TAXED_AMOUNT_KEY ||\n          field === CHARGES_TAXED_EXEMPT_KEY\n        ) {\n          this.updateSubtotals()\n        }\n      }\n    )\n  }\n\n  // Format price as $ 1,234.56\n  formatPrice (index, field) {\n    let formatted = accounting.formatMoney(\n      absolutify(this.state[CHARGES_KEY][index][field]),\n      '$ '\n    )\n    this.setState({\n      [CHARGES_KEY]: update(this.state[CHARGES_KEY], {\n        [index]: { [field]: { $set: formatted } }\n      })\n    })\n  }\n\n  // Parse formatted price\n  unformatPrice (index, field) {\n    let unformatted = absolutify(this.state[CHARGES_KEY][index][field])\n    this.setState({\n      [CHARGES_KEY]: update(this.state[CHARGES_KEY], {\n        [index]: { [field]: { $set: unformatted } }\n      })\n    })\n  }\n\n  // Update subtotal\n  updateSubtotals () {\n    // Iterates over every charge and acumulativamente adds it and assigns the result to subtotal\n    let subtotal = this.state[CHARGES_KEY].reduce((acc, charge) => {\n      return (\n        acc +\n        absolutify(charge[CHARGES_TAXED_AMOUNT_KEY]) +\n        absolutify(charge[CHARGES_TAXED_EXEMPT_KEY])\n      )\n    }, 0)\n    // Update parent totals and subtotals\n    this.props.updatePayrollTotals(this.props.keyId, subtotal)\n    this.setState({ [SUBTOTAL_KEY]: subtotal })\n  }\n\n  // Delete a perception from this.state.charges\n  deleteItem (index) {\n    requiredFields.clear()\n    let charges = this.state[CHARGES_KEY]\n    charges.splice(index, 1)\n    this.setState({ [CHARGES_KEY]: charges }, this.updateSubtotals)\n  }\n\n  // Items\n  renderItemList () {\n    let chargeList = null\n    if (this.state[CHARGES_KEY].length > 0) {\n      chargeList = this.state[CHARGES_KEY].map((charge, index) => {\n        return (\n          <tr key={index}>\n            <td className='is-one-quarter'>\n              <SelectField\n                placeholder='Selecciona una opción'\n                name='Tipo de percepción'\n                value={charge[CHARGES_KIND_KEY]}\n                onChange={this.onChange.bind(this, index, CHARGES_KIND_KEY)}\n                options={PERCEPTION_TYPE}\n                hiddenOptions={DO_NOT_RENDER}\n                showId\n                required\n                onValidationError={this.props.onValidationError}\n                ref={r => requiredFields.add(r)}\n              />\n            </td>\n            <td>\n              <TextField\n                value={charge[CHARGES_CATEGORY_KEY]}\n                onChange={this.onChange.bind(this, index, CHARGES_CATEGORY_KEY)}\n                name='Clave de percepción'\n                required\n                onValidationError={this.props.onValidationError}\n                ref={r => requiredFields.add(r)}\n                selectAllOnFocus\n              />\n            </td>\n            <td>\n              <TextField\n                value={charge[CHARGES_CONCEPT_KEY]}\n                onChange={this.onChange.bind(this, index, CHARGES_CONCEPT_KEY)}\n                onValidationError={this.props.onValidationError}\n                name='Concepto de percepción'\n                required\n                ref={r => requiredFields.add(r)}\n                selectAllOnFocus\n              />\n            </td>\n            <td>\n              <TextField\n                value={charge[CHARGES_TAXED_AMOUNT_KEY]}\n                onChange={this.onChange.bind(\n                  this,\n                  index,\n                  CHARGES_TAXED_AMOUNT_KEY\n                )}\n                onBlur={this.formatPrice.bind(\n                  this,\n                  index,\n                  CHARGES_TAXED_AMOUNT_KEY\n                )}\n                onFocus={this.unformatPrice.bind(\n                  this,\n                  index,\n                  CHARGES_TAXED_AMOUNT_KEY\n                )}\n                selectAllOnFocus\n              />\n            </td>\n            <td>\n              <TextField\n                value={charge[CHARGES_TAXED_EXEMPT_KEY]}\n                onChange={this.onChange.bind(\n                  this,\n                  index,\n                  CHARGES_TAXED_EXEMPT_KEY\n                )}\n                onBlur={this.formatPrice.bind(\n                  this,\n                  index,\n                  CHARGES_TAXED_EXEMPT_KEY\n                )}\n                onFocus={this.unformatPrice.bind(\n                  this,\n                  index,\n                  CHARGES_TAXED_EXEMPT_KEY\n                )}\n                selectAllOnFocus\n              />\n            </td>\n            <td>\n              <p\n                className={classNames('table--actions', {\n                  'is-hidden': this.state[CHARGES_KEY].length <= 1\n                })}\n              >\n                <IconButton\n                  icon='delete'\n                  onClick={this.deleteItem.bind(this, index)}\n                  tooltip='Borrar'\n                />\n              </p>\n            </td>\n          </tr>\n        )\n      })\n    }\n    return chargeList\n  }\n\n  render () {\n    return (\n      <div>\n        <h3 className='subheader-green'>Percepciones</h3>\n        <table className='table'>\n          <thead>\n            <tr>\n              <th>Tipo</th>\n              <th>Clave</th>\n              <th>Concepto</th>\n              <th>Importe Gravado</th>\n              <th>Importe Exento</th>\n              <th>Acciones</th>\n            </tr>\n          </thead>\n          <tbody>{this.renderItemList()}</tbody>\n          <Button\n            buttonStyle='primaryLink'\n            icon='plus'\n            onClick={this.addItem.bind(this)}\n          >\n            Agregar Percepción\n          </Button>\n          <tfoot>\n            <tr>\n              <td colSpan={3} />\n              <td>Subtotal:</td>\n              <td>\n                {accounting.formatMoney(this.state[SUBTOTAL_KEY], '$ ', 2)}\n              </td>\n              <td colSpan={1} />\n            </tr>\n          </tfoot>\n        </table>\n      </div>\n    )\n  }\n}\n\nPerceptions.propTypes = {\n  onValidationError: PropTypes.func,\n  updatePayrollTotals: PropTypes.func,\n  keyId: PropTypes.string\n}\n\nPerceptions.defaultProps = {\n  onValidationError: () => {}\n}\n\nexport default Perceptions\n"]},"metadata":{},"sourceType":"module"}