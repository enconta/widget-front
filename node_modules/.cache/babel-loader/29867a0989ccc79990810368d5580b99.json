{"ast":null,"code":"import _toConsumableArray from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/newInvoice/shared/recipient/index.js\";\n// Libraries\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport classNames from 'classnames';\nimport { Async } from 'react-select';\nimport AppSignal from 'appsignal'; // Components\n\nimport SelectField from 'shared/selectField';\nimport TextField from 'shared/textField';\nimport AddClientModal from '../AddClientModal';\nimport { CFDI_USAGE } from 'shared/catalogs';\nimport API from 'api';\nimport { RECIPIENT_KEY, RECIPIENT_ID_KEY, CFDI_USAGE_KEY, INVOICE_KEY, PAYMENT_FORM_KEY, PAYMENT_METHOD_KEY, FISCAL_ENTITY, FISCAL_RESIDENCY } from '../../constants';\nimport { AVAILABLE_PAYMENT_METHODS, PAYMENT_CATEGORIES_SORTED, createRecipient } from '../../utils';\nvar TO_BE_DEFINED_ID = '99';\nvar PARTIAL_PAYMENTS_ID = 'PPD';\nvar SINGLE_PAYMENT_ID = 'PUE';\nvar requiredFields = new Set();\n\nvar Recipient =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Recipient, _Component);\n\n  _createClass(Recipient, null, [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props) {\n      if (props.data) {\n        return props.data;\n      }\n\n      return null;\n    }\n  }]);\n\n  function Recipient(props) {\n    var _this;\n\n    _classCallCheck(this, Recipient);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Recipient).call(this, props));\n\n    _this.onChangeRecipientField = function (field) {\n      return function (e) {\n        _this.setState(_defineProperty({}, RECIPIENT_KEY, update(_this.state[RECIPIENT_KEY], _defineProperty({}, field, {\n          $set: e.target.value\n        }))));\n      };\n    };\n\n    _this.toggleModalClient = function () {\n      _this.setState(function (state) {\n        return {\n          showModalAddCliente: !state.showModalAddCliente\n        };\n      });\n    };\n\n    _this.getClient = function (client) {\n      _this.setRecipient({\n        value: client.id,\n        label: client.legal_name\n      });\n\n      _this.toggleModalClient();\n    };\n\n    _this.data = _objectSpread({}, createRecipient(), {\n      showModalAddCliente: false\n    });\n    _this.state = _objectSpread({}, _this.data);\n    return _this;\n  }\n\n  _createClass(Recipient, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // Clears the stored requiredFields\n      requiredFields.clear();\n    } // Iterates over required fields and validates every one of them\n    // Then it returns true if all validations succeedeed, else false.\n\n  }, {\n    key: \"validateRequiredFields\",\n    value: function validateRequiredFields() {\n      var _this2 = this;\n\n      return this.isValidRecipient() && _toConsumableArray(requiredFields) // Converts the Set() into an array\n      .filter(Boolean) // Filters the array from any falsy value\n      .map(function (form) {\n        return form.validate.call(_this2);\n      }) // Calls the validate() method on each form\n      .every(function (e) {\n        return e;\n      }) // Checks if all validations suceeded\n      ;\n    } // Get clients for current taxable entity\n\n  }, {\n    key: \"getClients\",\n    value: function getClients(input) {\n      var _this3 = this;\n\n      return API.EditClient.GetClientsList({\n        legal_name: input,\n        active_status: 'active',\n        client_type: 'client'\n      }).then(function (response) {\n        return {\n          options: _this3.parseClients(response.clients)\n        };\n      }).catch(function (error) {\n        AppSignal.sendError(error);\n        throw error;\n      });\n    } // Export invoice component data for outside component retrieval\n\n  }, {\n    key: \"exportInvoice\",\n    value: function exportInvoice() {\n      return this.state[INVOICE_KEY];\n    } // Export recipient component data for outside component retrieval\n\n  }, {\n    key: \"exportRecipient\",\n    value: function exportRecipient() {\n      var recipient = Object.assign({}, this.state[RECIPIENT_KEY]);\n      recipient.id = recipient.id.value;\n      return recipient;\n    } // Persist recipient_id to state\n\n  }, {\n    key: \"onChangeRecipientId\",\n    value: function onChangeRecipientId(e) {\n      this.setState(_defineProperty({}, RECIPIENT_KEY, update(this.state[RECIPIENT_KEY], _defineProperty({}, RECIPIENT_ID_KEY, {\n        $set: e.target.value\n      }))));\n    }\n  }, {\n    key: \"onChangeCFDIUsage\",\n    // Persist CFDI usage to state\n    value: function onChangeCFDIUsage(e) {\n      this.setState(_defineProperty({}, RECIPIENT_KEY, update(this.state[RECIPIENT_KEY], _defineProperty({}, CFDI_USAGE_KEY, {\n        $set: e.target.value\n      }))));\n    } // Persist payment_form to state\n\n  }, {\n    key: \"onChangePaymentForm\",\n    value: function onChangePaymentForm(e) {\n      this.setState(_defineProperty({}, INVOICE_KEY, update(this.state[INVOICE_KEY], _defineProperty({}, PAYMENT_FORM_KEY, {\n        $set: e.target.value\n      }))), this.setPaymentMethod.bind(this, e.target.value), requiredFields.clear());\n    } // Sets the paymento method according of the payment form selected\n\n  }, {\n    key: \"setPaymentMethod\",\n    value: function setPaymentMethod(paymentForm) {\n      var methodKey = paymentForm === TO_BE_DEFINED_ID ? PARTIAL_PAYMENTS_ID : SINGLE_PAYMENT_ID;\n      this.setState(_defineProperty({}, INVOICE_KEY, update(this.state[INVOICE_KEY], _defineProperty({}, PAYMENT_METHOD_KEY, {\n        $set: methodKey\n      }))));\n    } // Persist payment_method to state\n\n  }, {\n    key: \"onChangePaymentMethod\",\n    value: function onChangePaymentMethod(e) {\n      this.setState(_defineProperty({}, INVOICE_KEY, update(this.state[INVOICE_KEY], _defineProperty({}, PAYMENT_METHOD_KEY, {\n        $set: e.target.value\n      }))), requiredFields.clear());\n    } // Convert an array of clients in a format that react-select will understand\n\n  }, {\n    key: \"parseClients\",\n    value: function parseClients(clients) {\n      return clients.map(function (client) {\n        return {\n          value: client.id,\n          label: client.legal_name\n        };\n      }).filter(function (client) {\n        return client.label;\n      });\n    } // Set selected recipient to state\n\n  }, {\n    key: \"setRecipient\",\n    value: function setRecipient(value) {\n      this.setState(_defineProperty({}, RECIPIENT_KEY, update(this.state[RECIPIENT_KEY], _defineProperty({}, RECIPIENT_ID_KEY, {\n        $set: value\n      }))), this.isValidRecipient);\n    }\n  }, {\n    key: \"isValidRecipient\",\n    value: function isValidRecipient() {\n      this.setState({\n        isValid: update(this.state.isValid, _defineProperty({}, RECIPIENT_KEY, {\n          $set: !!this.state[RECIPIENT_KEY][RECIPIENT_ID_KEY]\n        }))\n      });\n      var isValidRecipient = !!this.state[RECIPIENT_KEY][RECIPIENT_ID_KEY];\n\n      if (!isValidRecipient) {\n        this.props.onValidationError('cliente - Este campo es requerido');\n      }\n\n      return isValidRecipient;\n    } // Render recipient card\n\n  }, {\n    key: \"renderRecipient\",\n    value: function renderRecipient() {\n      if (this.state[RECIPIENT_KEY][RECIPIENT_ID_KEY] !== null) {\n        // Get recipient details\n        return React.createElement(\"div\", {\n          className: \"card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        }, React.createElement(\"footer\", {\n          className: \"card-footer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          className: \"card-footer-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"mdi mdi-pencil\",\n          \"aria-hidden\": \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        }), \"Editar\"), React.createElement(\"a\", {\n          className: \"card-footer-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"mdi mdi-delete\",\n          \"aria-hidden\": \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }), \"Borrar\"), React.createElement(\"a\", {\n          className: \"card-footer-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"mdi mdi-plus\",\n          \"aria-hidden\": \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }), \"Nueva sucursal\")));\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"render\",\n    // Main render\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"subheader-green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, \"Receptor\"), React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"caption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"Cliente *\"), React.createElement(\"div\", {\n        className: classNames('control has-info', {\n          'select-required': !this.state[RECIPIENT_KEY][RECIPIENT_ID_KEY]\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(Async, {\n        value: this.state[RECIPIENT_KEY][RECIPIENT_ID_KEY],\n        loadOptions: this.getClients.bind(this),\n        clearable: true,\n        placeholder: \"Seleccione un Cliente\",\n        loadingPlaceholder: \"Buscando\",\n        searchPromptText: \"Teclear la raz\\xF3n social del cliente\",\n        noResultsText: \"No encontrado\",\n        onChange: this.setRecipient.bind(this),\n        onBlur: this.isValidRecipient.bind(this),\n        ignoreAccents: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"icon info-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"tooltip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, \"Agregar un nuevo cliente\"), React.createElement(\"button\", {\n        onClick: this.toggleModalClient,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"mdi mdi-plus-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }))), React.createElement(\"span\", {\n        className: classNames('help is-danger', {\n          'is-hidden': this.state.isValid[RECIPIENT_KEY]\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, \"Este campo es requerido\")), this.props.hasFiscalFields && React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"Registro Fiscal\",\n        value: this.state[RECIPIENT_KEY][FISCAL_ENTITY],\n        onChange: this.onChangeRecipientField(FISCAL_ENTITY),\n        required: this.props.hasFiscalFields,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        label: \"Residencia Fiscal\",\n        value: this.state[RECIPIENT_KEY][FISCAL_RESIDENCY],\n        onChange: this.onChangeRecipientField(FISCAL_RESIDENCY),\n        required: this.props.hasFiscalFields,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, React.createElement(SelectField, {\n        label: \"Forma de pago\",\n        options: PAYMENT_CATEGORIES_SORTED,\n        placeholder: \"Selecciona una forma de pago\",\n        value: this.state[INVOICE_KEY][PAYMENT_FORM_KEY],\n        onChange: this.onChangePaymentForm.bind(this),\n        onValidationError: this.props.onValidationError,\n        showId: true,\n        required: true,\n        ref: function ref(r) {\n          return requiredFields.add(r);\n        },\n        info: \"Forma de pago con el que se liquidar\\xE1 la operaci\\xF3n\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }), React.createElement(SelectField, {\n        label: \"M\\xE9todo de pago\",\n        options: AVAILABLE_PAYMENT_METHODS,\n        placeholder: \"Selecciona un m\\xE9todo de pago\",\n        value: this.state[INVOICE_KEY][PAYMENT_METHOD_KEY],\n        onChange: this.onChangePaymentMethod.bind(this),\n        showId: true,\n        required: true,\n        ref: function ref(r) {\n          return requiredFields.add(r);\n        },\n        info: \"M\\xE9todo como el que se har\\xE1n los pagos\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }), React.createElement(SelectField, {\n        label: \"Uso CFDI\",\n        options: CFDI_USAGE,\n        placeholder: \"Selecciona un uso\",\n        value: this.state[RECIPIENT_KEY][CFDI_USAGE_KEY],\n        onChange: this.onChangeCFDIUsage.bind(this),\n        showId: true,\n        required: true,\n        ref: function ref(r) {\n          return requiredFields.add(r);\n        },\n        info: \"Uso que le dar\\xE1 el receptor a la factura\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"caption required\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, \"* Campos obligatorios\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }), React.createElement(AddClientModal, {\n        toggleModal: this.toggleModalClient,\n        isActive: this.state.showModalAddCliente,\n        getClient: this.getClient,\n        primaryButton: \"Agregar Cliente\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Recipient;\n}(Component);\n\nRecipient.propTypes = {\n  onValidationError: PropTypes.func,\n  hasFiscalFields: PropTypes.bool\n};\nRecipient.defaultProps = {\n  onValidationError: function onValidationError() {},\n  hasFiscalFields: false\n};\nexport default Recipient;","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/newInvoice/shared/recipient/index.js"],"names":["React","Component","Fragment","PropTypes","update","classNames","Async","AppSignal","SelectField","TextField","AddClientModal","CFDI_USAGE","API","RECIPIENT_KEY","RECIPIENT_ID_KEY","CFDI_USAGE_KEY","INVOICE_KEY","PAYMENT_FORM_KEY","PAYMENT_METHOD_KEY","FISCAL_ENTITY","FISCAL_RESIDENCY","AVAILABLE_PAYMENT_METHODS","PAYMENT_CATEGORIES_SORTED","createRecipient","TO_BE_DEFINED_ID","PARTIAL_PAYMENTS_ID","SINGLE_PAYMENT_ID","requiredFields","Set","Recipient","props","data","onChangeRecipientField","field","e","setState","state","$set","target","value","toggleModalClient","showModalAddCliente","getClient","client","setRecipient","id","label","legal_name","clear","isValidRecipient","filter","Boolean","map","form","validate","call","every","input","EditClient","GetClientsList","active_status","client_type","then","response","options","parseClients","clients","catch","error","sendError","recipient","Object","assign","setPaymentMethod","bind","paymentForm","methodKey","isValid","onValidationError","getClients","hasFiscalFields","onChangePaymentForm","r","add","onChangePaymentMethod","onChangeCFDIUsage","propTypes","func","bool","defaultProps"],"mappings":"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","sourcesContent":["// Libraries\nimport React, { Component, Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport update from 'immutability-helper'\nimport classNames from 'classnames'\nimport { Async } from 'react-select'\nimport AppSignal from 'appsignal'\n\n// Components\nimport SelectField from 'shared/selectField'\nimport TextField from 'shared/textField'\nimport AddClientModal from '../AddClientModal'\n\nimport { CFDI_USAGE } from 'shared/catalogs'\nimport API from 'api'\n\nimport {\n  RECIPIENT_KEY,\n  RECIPIENT_ID_KEY,\n  CFDI_USAGE_KEY,\n  INVOICE_KEY,\n  PAYMENT_FORM_KEY,\n  PAYMENT_METHOD_KEY,\n  FISCAL_ENTITY,\n  FISCAL_RESIDENCY\n} from '../../constants'\n\nimport {\n  AVAILABLE_PAYMENT_METHODS,\n  PAYMENT_CATEGORIES_SORTED,\n  createRecipient\n} from '../../utils'\n\nconst TO_BE_DEFINED_ID = '99'\nconst PARTIAL_PAYMENTS_ID = 'PPD'\nconst SINGLE_PAYMENT_ID = 'PUE'\n\nconst requiredFields = new Set()\n\nclass Recipient extends Component {\n  static getDerivedStateFromProps (props) {\n    if (props.data) {\n      return props.data\n    }\n\n    return null\n  }\n\n  constructor (props) {\n    super(props)\n    this.data = { ...createRecipient(), showModalAddCliente: false }\n    this.state = { ...this.data }\n  }\n\n  componentWillUnmount () {\n    // Clears the stored requiredFields\n    requiredFields.clear()\n  }\n\n  // Iterates over required fields and validates every one of them\n  // Then it returns true if all validations succeedeed, else false.\n  validateRequiredFields () {\n    return (\n      this.isValidRecipient() &&\n      [...requiredFields] // Converts the Set() into an array\n        .filter(Boolean) // Filters the array from any falsy value\n        .map(form => form.validate.call(this)) // Calls the validate() method on each form\n        .every(e => e) // Checks if all validations suceeded\n    )\n  }\n\n  // Get clients for current taxable entity\n  getClients (input) {\n    return API.EditClient.GetClientsList({\n      legal_name: input,\n      active_status: 'active',\n      client_type: 'client'\n    })\n      .then(response => ({ options: this.parseClients(response.clients) }))\n      .catch(error => {\n        AppSignal.sendError(error)\n        throw error\n      })\n  }\n\n  // Export invoice component data for outside component retrieval\n  exportInvoice () {\n    return this.state[INVOICE_KEY]\n  }\n\n  // Export recipient component data for outside component retrieval\n  exportRecipient () {\n    let recipient = Object.assign({}, this.state[RECIPIENT_KEY])\n    recipient.id = recipient.id.value\n    return recipient\n  }\n\n  // Persist recipient_id to state\n  onChangeRecipientId (e) {\n    this.setState({\n      [RECIPIENT_KEY]: update(this.state[RECIPIENT_KEY], {\n        [RECIPIENT_ID_KEY]: { $set: e.target.value }\n      })\n    })\n  }\n\n  onChangeRecipientField = field => e => {\n    this.setState({\n      [RECIPIENT_KEY]: update(this.state[RECIPIENT_KEY], {\n        [field]: { $set: e.target.value }\n      })\n    })\n  }\n\n  // Persist CFDI usage to state\n  onChangeCFDIUsage (e) {\n    this.setState({\n      [RECIPIENT_KEY]: update(this.state[RECIPIENT_KEY], {\n        [CFDI_USAGE_KEY]: { $set: e.target.value }\n      })\n    })\n  }\n\n  // Persist payment_form to state\n  onChangePaymentForm (e) {\n    this.setState(\n      {\n        [INVOICE_KEY]: update(this.state[INVOICE_KEY], {\n          [PAYMENT_FORM_KEY]: { $set: e.target.value }\n        })\n      },\n      this.setPaymentMethod.bind(this, e.target.value),\n      requiredFields.clear()\n    )\n  }\n\n  // Sets the paymento method according of the payment form selected\n  setPaymentMethod (paymentForm) {\n    const methodKey =\n      paymentForm === TO_BE_DEFINED_ID ? PARTIAL_PAYMENTS_ID : SINGLE_PAYMENT_ID\n    this.setState({\n      [INVOICE_KEY]: update(this.state[INVOICE_KEY], {\n        [PAYMENT_METHOD_KEY]: { $set: methodKey }\n      })\n    })\n  }\n\n  // Persist payment_method to state\n  onChangePaymentMethod (e) {\n    this.setState(\n      {\n        [INVOICE_KEY]: update(this.state[INVOICE_KEY], {\n          [PAYMENT_METHOD_KEY]: { $set: e.target.value }\n        })\n      },\n      requiredFields.clear()\n    )\n  }\n\n  // Convert an array of clients in a format that react-select will understand\n  parseClients (clients) {\n    return clients\n      .map(client => ({\n        value: client.id,\n        label: client.legal_name\n      }))\n      .filter(client => client.label)\n  }\n\n  // Set selected recipient to state\n  setRecipient (value) {\n    this.setState(\n      {\n        [RECIPIENT_KEY]: update(this.state[RECIPIENT_KEY], {\n          [RECIPIENT_ID_KEY]: { $set: value }\n        })\n      },\n      this.isValidRecipient\n    )\n  }\n\n  toggleModalClient = () => {\n    this.setState(state => ({\n      showModalAddCliente: !state.showModalAddCliente\n    }))\n  }\n\n  isValidRecipient () {\n    this.setState({\n      isValid: update(this.state.isValid, {\n        [RECIPIENT_KEY]: { $set: !!this.state[RECIPIENT_KEY][RECIPIENT_ID_KEY] }\n      })\n    })\n    const isValidRecipient = !!this.state[RECIPIENT_KEY][RECIPIENT_ID_KEY]\n    if (!isValidRecipient) {\n      this.props.onValidationError('cliente - Este campo es requerido')\n    }\n    return isValidRecipient\n  }\n\n  // Render recipient card\n  renderRecipient () {\n    if (this.state[RECIPIENT_KEY][RECIPIENT_ID_KEY] !== null) {\n      // Get recipient details\n      return (\n        <div className='card'>\n          <footer className='card-footer'>\n            <a className='card-footer-item'>\n              <i className='mdi mdi-pencil' aria-hidden='true' />\n              Editar\n            </a>\n            <a className='card-footer-item'>\n              <i className='mdi mdi-delete' aria-hidden='true' />\n              Borrar\n            </a>\n            <a className='card-footer-item'>\n              <i className='mdi mdi-plus' aria-hidden='true' />\n              Nueva sucursal\n            </a>\n          </footer>\n        </div>\n      )\n    } else {\n      return null\n    }\n  }\n\n  getClient = client => {\n    this.setRecipient({\n      value: client.id,\n      label: client.legal_name\n    })\n    this.toggleModalClient()\n  }\n\n  // Main render\n  render () {\n    return (\n      <div>\n        <h2 className='subheader-green'>Receptor</h2>\n        <div className='columns'>\n          <div className='column'>\n            <label className='caption'>Cliente *</label>\n            <div\n              className={classNames('control has-info', {\n                'select-required': !this.state[RECIPIENT_KEY][RECIPIENT_ID_KEY]\n              })}\n            >\n              <Async\n                value={this.state[RECIPIENT_KEY][RECIPIENT_ID_KEY]}\n                loadOptions={this.getClients.bind(this)}\n                clearable\n                placeholder='Seleccione un Cliente'\n                loadingPlaceholder='Buscando'\n                searchPromptText='Teclear la razón social del cliente'\n                noResultsText='No encontrado'\n                onChange={this.setRecipient.bind(this)}\n                onBlur={this.isValidRecipient.bind(this)}\n                ignoreAccents={false}\n              />\n              <span className='icon info-icon'>\n                <span className='tooltip'>Agregar un nuevo cliente</span>\n                <button onClick={this.toggleModalClient}>\n                  <i className='mdi mdi-plus-circle' />\n                </button>\n              </span>\n              <span\n                className={classNames('help is-danger', {\n                  'is-hidden': this.state.isValid[RECIPIENT_KEY]\n                })}\n              >\n                Este campo es requerido\n              </span>\n            </div>\n            {this.props.hasFiscalFields && (\n              <Fragment>\n                <TextField\n                  label='Registro Fiscal'\n                  value={this.state[RECIPIENT_KEY][FISCAL_ENTITY]}\n                  onChange={this.onChangeRecipientField(FISCAL_ENTITY)}\n                  required={this.props.hasFiscalFields}\n                />\n                <TextField\n                  label='Residencia Fiscal'\n                  value={this.state[RECIPIENT_KEY][FISCAL_RESIDENCY]}\n                  onChange={this.onChangeRecipientField(FISCAL_RESIDENCY)}\n                  required={this.props.hasFiscalFields}\n                />\n              </Fragment>\n            )}\n          </div>\n          <div className='column'>\n            <SelectField\n              label='Forma de pago'\n              options={PAYMENT_CATEGORIES_SORTED}\n              placeholder='Selecciona una forma de pago'\n              value={this.state[INVOICE_KEY][PAYMENT_FORM_KEY]}\n              onChange={this.onChangePaymentForm.bind(this)}\n              onValidationError={this.props.onValidationError}\n              showId\n              required\n              ref={r => requiredFields.add(r)}\n              info='Forma de pago con el que se liquidará la operación'\n            />\n            <SelectField\n              label='Método de pago'\n              options={AVAILABLE_PAYMENT_METHODS}\n              placeholder='Selecciona un método de pago'\n              value={this.state[INVOICE_KEY][PAYMENT_METHOD_KEY]}\n              onChange={this.onChangePaymentMethod.bind(this)}\n              showId\n              required\n              ref={r => requiredFields.add(r)}\n              info='Método como el que se harán los pagos'\n              disabled\n            />\n            <SelectField\n              label='Uso CFDI'\n              options={CFDI_USAGE}\n              placeholder='Selecciona un uso'\n              value={this.state[RECIPIENT_KEY][CFDI_USAGE_KEY]}\n              onChange={this.onChangeCFDIUsage.bind(this)}\n              showId\n              required\n              ref={r => requiredFields.add(r)}\n              info='Uso que le dará el receptor a la factura'\n            />\n          </div>\n        </div>\n        <br />\n        <div className='caption required'>* Campos obligatorios</div>\n        <br />\n        <AddClientModal\n          toggleModal={this.toggleModalClient}\n          isActive={this.state.showModalAddCliente}\n          getClient={this.getClient}\n          primaryButton='Agregar Cliente'\n        />\n      </div>\n    )\n  }\n}\n\nRecipient.propTypes = {\n  onValidationError: PropTypes.func,\n  hasFiscalFields: PropTypes.bool\n}\n\nRecipient.defaultProps = {\n  onValidationError: () => {},\n  hasFiscalFields: false\n}\n\nexport default Recipient\n"]},"metadata":{},"sourceType":"module"}