{"ast":null,"code":"import AppDispatcher from '../dispatcher';\nvar timer = null;\nvar loaderPercent = 0;\nvar SECONDS_TO_TIMEOUT = 15; // a.k.a. Seconds for the loader to reach 100%\n\nvar MILISECONDS_TO_INCREMENT_LOADER = 60 / SECONDS_TO_TIMEOUT;\nexport default {\n  // Starts loader, it increments 1% width every 'MILISECONDS_TO_INCREMENT_LOADER'\n  startLoader: function startLoader() {\n    if (timer !== null) this.finishLoader();\n    timer = setInterval(function () {\n      switch (true) {\n        case loaderPercent < 20:\n          loaderPercent += 20;\n          break;\n\n        case loaderPercent < 80:\n          loaderPercent += 1;\n          break;\n\n        case loaderPercent >= 98:\n          break;\n\n        case loaderPercent >= 80:\n          loaderPercent += 0.01;\n          break;\n      }\n\n      AppDispatcher.handleAction({\n        actionType: 'LOADER_CHANGED',\n        data: loaderPercent\n      });\n    }, MILISECONDS_TO_INCREMENT_LOADER);\n  },\n  // Clears timer and sets loader percentage to zero\n  finishLoader: function finishLoader() {\n    clearInterval(timer);\n    timer = null;\n    loaderPercent = 100;\n    AppDispatcher.handleAction({\n      actionType: 'LOADER_CHANGED',\n      data: loaderPercent\n    });\n    loaderPercent = 0;\n  }\n};","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/actions/topbar.js"],"names":["AppDispatcher","timer","loaderPercent","SECONDS_TO_TIMEOUT","MILISECONDS_TO_INCREMENT_LOADER","startLoader","finishLoader","setInterval","handleAction","actionType","data","clearInterval"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,eAA1B;AAEA,IAAIC,KAAK,GAAG,IAAZ;AACA,IAAIC,aAAa,GAAG,CAApB;AAEA,IAAMC,kBAAkB,GAAG,EAA3B,C,CAA8B;;AAC9B,IAAMC,+BAA+B,GAAG,KAAKD,kBAA7C;AACA,eAAe;AACb;AACAE,EAAAA,WAFa,yBAEE;AACb,QAAIJ,KAAK,KAAK,IAAd,EAAoB,KAAKK,YAAL;AACpBL,IAAAA,KAAK,GAAGM,WAAW,CAAC,YAAM;AACxB,cAAQ,IAAR;AACE,aAAKL,aAAa,GAAG,EAArB;AACEA,UAAAA,aAAa,IAAI,EAAjB;AACA;;AACF,aAAKA,aAAa,GAAG,EAArB;AACEA,UAAAA,aAAa,IAAI,CAAjB;AACA;;AACF,aAAKA,aAAa,IAAI,EAAtB;AACE;;AACF,aAAKA,aAAa,IAAI,EAAtB;AACEA,UAAAA,aAAa,IAAI,IAAjB;AACA;AAXJ;;AAaAF,MAAAA,aAAa,CAACQ,YAAd,CAA2B;AACzBC,QAAAA,UAAU,EAAE,gBADa;AAEzBC,QAAAA,IAAI,EAAER;AAFmB,OAA3B;AAID,KAlBkB,EAkBhBE,+BAlBgB,CAAnB;AAmBD,GAvBY;AAwBb;AACAE,EAAAA,YAzBa,0BAyBG;AACdK,IAAAA,aAAa,CAACV,KAAD,CAAb;AACAA,IAAAA,KAAK,GAAG,IAAR;AACAC,IAAAA,aAAa,GAAG,GAAhB;AACAF,IAAAA,aAAa,CAACQ,YAAd,CAA2B;AACzBC,MAAAA,UAAU,EAAE,gBADa;AAEzBC,MAAAA,IAAI,EAAER;AAFmB,KAA3B;AAIAA,IAAAA,aAAa,GAAG,CAAhB;AACD;AAlCY,CAAf","sourcesContent":["import AppDispatcher from '../dispatcher'\n\nlet timer = null\nlet loaderPercent = 0\n\nconst SECONDS_TO_TIMEOUT = 15 // a.k.a. Seconds for the loader to reach 100%\nconst MILISECONDS_TO_INCREMENT_LOADER = 60 / SECONDS_TO_TIMEOUT\nexport default {\n  // Starts loader, it increments 1% width every 'MILISECONDS_TO_INCREMENT_LOADER'\n  startLoader () {\n    if (timer !== null) this.finishLoader()\n    timer = setInterval(() => {\n      switch (true) {\n        case loaderPercent < 20:\n          loaderPercent += 20\n          break\n        case loaderPercent < 80:\n          loaderPercent += 1\n          break\n        case loaderPercent >= 98:\n          break\n        case loaderPercent >= 80:\n          loaderPercent += 0.01\n          break\n      }\n      AppDispatcher.handleAction({\n        actionType: 'LOADER_CHANGED',\n        data: loaderPercent\n      })\n    }, MILISECONDS_TO_INCREMENT_LOADER)\n  },\n  // Clears timer and sets loader percentage to zero\n  finishLoader () {\n    clearInterval(timer)\n    timer = null\n    loaderPercent = 100\n    AppDispatcher.handleAction({\n      actionType: 'LOADER_CHANGED',\n      data: loaderPercent\n    })\n    loaderPercent = 0\n  }\n}\n"]},"metadata":{},"sourceType":"module"}