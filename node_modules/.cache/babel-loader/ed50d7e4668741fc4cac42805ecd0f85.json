{"ast":null,"code":"import _objectSpread from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/dashboard/index.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router';\nimport accounting from 'accounting';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport DashboardActions from 'actions/dashboard';\nimport DashboardStore from 'stores/dashboard';\nimport Chart from 'shared/chart';\nimport Card from 'shared/card';\nimport Button from 'shared/button';\nimport StatusIcon from 'shared/statusIcon';\nimport CredentialsExpire from 'shared/credentials';\nimport Modal from 'shared/modal';\nimport { prettyDate, resetScroll, getClientsPlan, askRemainingPlanDays, handleModals } from 'utils';\nimport { INVOICE_PAYMENT_STATUS, MONTHS, CHART_PERIODS } from 'shared/catalogs';\nimport BankStatements from './bankStatements';\nimport { modalPlans } from '../viewInvoice/utilsRestrictions';\nimport SessionStore from 'stores/session';\nvar CHARTS = 'chartData';\nvar INCOMES = 'incomes';\nvar EXPENSES = 'expenses';\nvar CHART_PERIOD_KEY = 'period';\nvar MONTHS_SHORT = MONTHS.map(function (m) {\n  return m.label.substr(0, 3);\n});\n\nvar getCurrentState = function getCurrentState() {\n  var _ref;\n\n  return _ref = {\n    currentEntity: SessionStore.getCurrentEntity()\n  }, _defineProperty(_ref, CHARTS, DashboardStore.getChartData()), _defineProperty(_ref, INCOMES, DashboardStore.getRecentIncomes()), _defineProperty(_ref, EXPENSES, DashboardStore.getRecentExpenses()), _ref;\n};\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard() {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this));\n\n    _this.setInfoSurvey = function () {\n      var windowGlobal = typeof window !== 'undefined' && window;\n      windowGlobal.localStorage.setItem('answeredSurvey', true);\n\n      _this.toggleSatisfactionSurvey();\n    };\n\n    _this.toggleSatisfactionSurvey = function () {\n      _this.setState(function (state) {\n        return {\n          modalOpen: !state.modalOpen\n        };\n      });\n    };\n\n    _this.setPlanModal = function () {\n      var _window$localStorage = window.localStorage,\n          dayBefore = _window$localStorage.dayBefore,\n          sawPlanModal = _window$localStorage.sawPlanModal;\n      var currentDay = moment().format('YYYY-MM-DD');\n\n      if (dayBefore) {\n        if (dayBefore !== currentDay && sawPlanModal === 'viewed') {\n          window.localStorage.setItem('sawPlanModal', 'not-seen');\n        }\n      } else {\n        window.localStorage.setItem('dayBefore', currentDay);\n        window.localStorage.setItem('sawPlanModal', 'not-seen');\n      }\n    };\n\n    _this.handleModalPlan = function () {\n      var currentDay = moment().format('YYYY-MM-DD');\n      window.localStorage.setItem('sawPlanModal', 'viewed');\n      window.localStorage.setItem('dayBefore', currentDay);\n      handleModals('showBannerModal', _assertThisInitialized(_assertThisInitialized(_this)));\n    };\n\n    _this.data = _defineProperty({}, CHART_PERIOD_KEY, 'semester');\n    _this.state = _objectSpread({}, _this.data, getCurrentState(), {\n      modalOpen: true,\n      showBannerModal: true\n    });\n    _this._onChange = _this._onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      SessionStore.addChangeListener(this._onChange);\n      DashboardStore.addChangeListener(this._onChange);\n      this.loadData();\n      askRemainingPlanDays();\n      resetScroll();\n      this.setPlanModal();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      SessionStore.removeChangeListener(this._onChange);\n      DashboardStore.removeChangeListener(this._onChange);\n      this.handleModalPlan();\n    }\n  }, {\n    key: \"_onChange\",\n    value: function _onChange() {\n      var state = getCurrentState();\n      this.setState(state);\n    }\n  }, {\n    key: \"loadData\",\n    value: function loadData() {\n      DashboardActions.getRecentIncomes();\n      DashboardActions.getRecentExpenses();\n      DashboardActions.getChartData({\n        period: this.state[CHART_PERIOD_KEY]\n      });\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(field, e) {\n      var _this2 = this;\n\n      this.setState(_defineProperty({}, field, e.target.value), function () {\n        if (field === CHART_PERIOD_KEY) _this2.loadData();\n      });\n    }\n  }, {\n    key: \"onChangePeriod\",\n    value: function onChangePeriod(periodId) {\n      var _this3 = this;\n\n      this.setState(_defineProperty({}, CHART_PERIOD_KEY, periodId), function () {\n        DashboardActions.getChartData({\n          period: _this3.state[CHART_PERIOD_KEY]\n        });\n      });\n    }\n  }, {\n    key: \"renderModalSatisfactionSurvey\",\n    value: function renderModalSatisfactionSurvey() {\n      var modalOpen = this.state.modalOpen;\n      var taxableEntities = SessionStore.getTaxableEntities();\n      var entity = taxableEntities.find(function (entity) {\n        return entity;\n      });\n      return React.createElement(Modal, {\n        isActive: modalOpen,\n        toggleModal: this.toggleSatisfactionSurvey,\n        noFooter: true,\n        isAlert: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"columns referral-promo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column is-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"referral-promo__title brake-line\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"En Enconta t\\xFA eres nuestra prioridad \")), React.createElement(\"div\", {\n        className: \"columns is-centered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column is-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"img/contabilidad.svg\",\n        alt: 'Promoci√≥n de referidos',\n        className: \"referral-promo__img\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }))), React.createElement(\"p\", {\n        className: \"referral-promo__content brake-line\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Es por eso que te pedimos apoyo para responder nuestra breve encuesta, la cual no te tomar\\xE1 m\\xE1s de 1 minuto. Esto con el fin de mejorar nuestro servicio y tu experiencia como cliente.\")), React.createElement(Link, {\n        to: \"https://docs.google.com/forms/d/e/1FAIpQLSeXTL2M3ZwIemcZ-itGdDTdoyP5VxGE-ZmwjN9-KlXSvI6u_w/viewform?entry.1384753369=\".concat(entity && entity.rfc),\n        className: \"referral-promo__link\",\n        target: '_blank',\n        onClick: this.setInfoSurvey,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"Valora nuestro servicio\"))));\n    }\n  }, {\n    key: \"renderTable\",\n    value: function renderTable(tableName) {\n      var data = this.state[tableName];\n      var lowStatusWord = '';\n      var capStatusWord = '';\n\n      if (tableName === INCOMES) {\n        lowStatusWord = 'cobrar';\n        capStatusWord = 'Cobrada';\n      }\n\n      if (tableName === EXPENSES) {\n        lowStatusWord = 'pagar';\n        capStatusWord = 'Pagada';\n      }\n\n      var tableBody = data.map(function (invoice, index) {\n        if (index < 5) {\n          return React.createElement(\"tr\", {\n            key: invoice.id,\n            className: \"cursor-pointer\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 192\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            className: \"align-left\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 193\n            },\n            __self: this\n          }, React.createElement(Link, {\n            to: \"/facturas/ver/\".concat(invoice.id),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 194\n            },\n            __self: this\n          }, invoice.legal_name)), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 198\n            },\n            __self: this\n          }, prettyDate(invoice.issue_date, false, true, false, '/')), React.createElement(\"td\", {\n            className: \"is-money\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 199\n            },\n            __self: this\n          }, accounting.formatMoney(invoice.subtotal, '')), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 202\n            },\n            __self: this\n          }, React.createElement(StatusIcon, {\n            className: INVOICE_PAYMENT_STATUS[invoice.payment_status],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 203\n            },\n            __self: this\n          })));\n        }\n      });\n\n      if (this.state[tableName].length > 0) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"flex-column\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"caption flex-end\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        }, React.createElement(StatusIcon, {\n          className: \"warning\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }), \"Por \", lowStatusWord), React.createElement(\"span\", {\n          style: {\n            marginLeft: '1.6rem'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }, React.createElement(StatusIcon, {\n          className: \"info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          },\n          __self: this\n        }), capStatusWord, \" parcialmente\"), React.createElement(\"span\", {\n          style: {\n            marginLeft: '1.6rem'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224\n          },\n          __self: this\n        }, React.createElement(StatusIcon, {\n          className: \"success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225\n          },\n          __self: this\n        }), capStatusWord), React.createElement(\"span\", {\n          style: {\n            marginLeft: '1.6rem'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228\n          },\n          __self: this\n        }, React.createElement(StatusIcon, {\n          className: \"danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        }), \"Cancelada\"))), React.createElement(\"table\", {\n          className: \"table\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234\n          },\n          __self: this\n        }, React.createElement(\"thead\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          className: \"align-left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237\n          },\n          __self: this\n        }, \"RAZ\\xD3N SOCIAL\"), React.createElement(\"th\", {\n          style: {\n            width: '6rem'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238\n          },\n          __self: this\n        }, \"FECHA\"), React.createElement(\"th\", {\n          style: {\n            width: '9rem'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239\n          },\n          __self: this\n        }, \"SUBTOTAL\"), React.createElement(\"th\", {\n          style: {\n            width: '5rem'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          },\n          __self: this\n        }, \"Estado\"))), React.createElement(\"tbody\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243\n          },\n          __self: this\n        }, tableBody)));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"block unselectable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, \"No hay facturas\"));\n    }\n  }, {\n    key: \"renderChart\",\n    value: function renderChart() {\n      var _this4 = this;\n\n      // bars prop passed to Chart must be an array of objects with:\n      // dataName: the label to be shown to the user\n      // dataKey: the data object key name to get the actual data for each bar\n      // fill: the color for that kind of bar\n      // all of this could change, this is a demo so it's to be defined\n      var bars = [{\n        dataName: 'Ingreso',\n        dataKey: 'revenue',\n        fill: '#00BCB4'\n      }, {\n        dataName: 'Gasto',\n        dataKey: 'expense',\n        fill: '#4184F5'\n      }];\n      var parsedChartData = this.state[CHARTS].map(function (item) {\n        return Object.assign({}, item, {\n          month: MONTHS_SHORT[item.month],\n          expense: Math.ceil(item.expense),\n          revenue: Math.ceil(item.revenue)\n        });\n      });\n\n      if (parsedChartData.length > 0) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"espacio-medium\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"tabs is-toggle is-small\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279\n          },\n          __self: this\n        }, CHART_PERIODS.map(function (period, i) {\n          return React.createElement(\"li\", {\n            className: classNames({\n              'is-active': _this4.state[CHART_PERIOD_KEY] === period.id\n            }),\n            key: i,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 281\n            },\n            __self: this\n          }, React.createElement(\"button\", {\n            onClick: _this4.onChangePeriod.bind(_this4, period.id),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 287\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 288\n            },\n            __self: this\n          }, period.label)));\n        })))), React.createElement(Chart, {\n          data: parsedChartData,\n          bars: bars,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, \"Cargando datos...\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var windowGlobal = typeof window !== 'undefined' && window;\n      var _windowGlobal$localSt = windowGlobal.localStorage,\n          answeredSurvey = _windowGlobal$localSt.answeredSurvey,\n          sawPlanModal = _windowGlobal$localSt.sawPlanModal;\n      var plan = getClientsPlan();\n      var isShowedPlans = (plan === 'free' || plan === 'free_premium') && sawPlanModal === 'not-seen';\n      var showModalSurvey = moment().date() >= 23;\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, isShowedPlans && modalPlans(this), React.createElement(CredentialsExpire, {\n        ciec: true,\n        fiel: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }), React.createElement(BankStatements, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: \"Ingresos y Gastos Mensuales\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, this.renderChart()))), React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"is-fullheight flex-column\",\n        title: \"\\xDAltimos Ingresos\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, this.renderTable(INCOMES), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/ingresos\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, React.createElement(Button, {\n        buttonStyle: \"link\",\n        className: \"is-pulled-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, \"Ver todos\"))))), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"is-fullheight flex-column\",\n        title: \"\\xDAltimos Gastos\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, this.renderTable(EXPENSES), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/gastos\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, React.createElement(Button, {\n        buttonStyle: \"link\",\n        className: \"is-pulled-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, \"Ver todos\"))))), showModalSurvey && !answeredSurvey && this.renderModalSatisfactionSurvey()));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/dashboard/index.js"],"names":["React","Component","Fragment","Link","accounting","classNames","moment","DashboardActions","DashboardStore","Chart","Card","Button","StatusIcon","CredentialsExpire","Modal","prettyDate","resetScroll","getClientsPlan","askRemainingPlanDays","handleModals","INVOICE_PAYMENT_STATUS","MONTHS","CHART_PERIODS","BankStatements","modalPlans","SessionStore","CHARTS","INCOMES","EXPENSES","CHART_PERIOD_KEY","MONTHS_SHORT","map","m","label","substr","getCurrentState","currentEntity","getCurrentEntity","getChartData","getRecentIncomes","getRecentExpenses","Dashboard","setInfoSurvey","windowGlobal","window","localStorage","setItem","toggleSatisfactionSurvey","setState","state","modalOpen","setPlanModal","dayBefore","sawPlanModal","currentDay","format","handleModalPlan","data","showBannerModal","_onChange","bind","addChangeListener","loadData","removeChangeListener","period","field","e","target","value","periodId","taxableEntities","getTaxableEntities","entity","find","rfc","tableName","lowStatusWord","capStatusWord","tableBody","invoice","index","id","legal_name","issue_date","formatMoney","subtotal","payment_status","length","marginLeft","width","bars","dataName","dataKey","fill","parsedChartData","item","Object","assign","month","expense","Math","ceil","revenue","i","onChangePeriod","answeredSurvey","plan","isShowedPlans","showModalSurvey","date","renderChart","renderTable","renderModalSatisfactionSurvey"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { Link } from 'react-router'\nimport accounting from 'accounting'\nimport classNames from 'classnames'\nimport moment from 'moment'\n\nimport DashboardActions from 'actions/dashboard'\nimport DashboardStore from 'stores/dashboard'\nimport Chart from 'shared/chart'\nimport Card from 'shared/card'\nimport Button from 'shared/button'\nimport StatusIcon from 'shared/statusIcon'\nimport CredentialsExpire from 'shared/credentials'\nimport Modal from 'shared/modal'\nimport {\n  prettyDate,\n  resetScroll,\n  getClientsPlan,\n  askRemainingPlanDays,\n  handleModals\n} from 'utils'\nimport { INVOICE_PAYMENT_STATUS, MONTHS, CHART_PERIODS } from 'shared/catalogs'\nimport BankStatements from './bankStatements'\nimport { modalPlans } from '../viewInvoice/utilsRestrictions'\n\nimport SessionStore from 'stores/session'\n\nconst CHARTS = 'chartData'\nconst INCOMES = 'incomes'\nconst EXPENSES = 'expenses'\nconst CHART_PERIOD_KEY = 'period'\nconst MONTHS_SHORT = MONTHS.map(m => m.label.substr(0, 3))\n\nconst getCurrentState = () => {\n  return {\n    currentEntity: SessionStore.getCurrentEntity(),\n    [CHARTS]: DashboardStore.getChartData(),\n    [INCOMES]: DashboardStore.getRecentIncomes(),\n    [EXPENSES]: DashboardStore.getRecentExpenses()\n  }\n}\n\nclass Dashboard extends Component {\n  constructor () {\n    super()\n    this.data = {\n      [CHART_PERIOD_KEY]: 'semester'\n    }\n    this.state = {\n      ...this.data,\n      ...getCurrentState(),\n      modalOpen: true,\n      showBannerModal: true\n    }\n    this._onChange = this._onChange.bind(this)\n  }\n\n  componentDidMount () {\n    SessionStore.addChangeListener(this._onChange)\n    DashboardStore.addChangeListener(this._onChange)\n    this.loadData()\n    askRemainingPlanDays()\n    resetScroll()\n    this.setPlanModal()\n  }\n\n  componentWillUnmount () {\n    SessionStore.removeChangeListener(this._onChange)\n    DashboardStore.removeChangeListener(this._onChange)\n    this.handleModalPlan()\n  }\n\n  _onChange () {\n    const state = getCurrentState()\n    this.setState(state)\n  }\n\n  loadData () {\n    DashboardActions.getRecentIncomes()\n    DashboardActions.getRecentExpenses()\n    DashboardActions.getChartData({ period: this.state[CHART_PERIOD_KEY] })\n  }\n\n  setInfoSurvey = () => {\n    const windowGlobal = typeof window !== 'undefined' && window\n\n    windowGlobal.localStorage.setItem('answeredSurvey', true)\n    this.toggleSatisfactionSurvey()\n  }\n\n  toggleSatisfactionSurvey = () => {\n    this.setState(state => ({\n      modalOpen: !state.modalOpen\n    }))\n  }\n\n  onChange (field, e) {\n    this.setState({ [field]: e.target.value }, () => {\n      if (field === CHART_PERIOD_KEY) this.loadData()\n    })\n  }\n\n  onChangePeriod (periodId) {\n    this.setState({ [CHART_PERIOD_KEY]: periodId }, () => {\n      DashboardActions.getChartData({ period: this.state[CHART_PERIOD_KEY] })\n    })\n  }\n\n  setPlanModal = () => {\n    const { dayBefore, sawPlanModal } = window.localStorage\n    const currentDay = moment().format('YYYY-MM-DD')\n    if (dayBefore) {\n      if (dayBefore !== currentDay && sawPlanModal === 'viewed') {\n        window.localStorage.setItem('sawPlanModal', 'not-seen')\n      }\n    } else {\n      window.localStorage.setItem('dayBefore', currentDay)\n      window.localStorage.setItem('sawPlanModal', 'not-seen')\n    }\n  }\n\n  handleModalPlan = () => {\n    const currentDay = moment().format('YYYY-MM-DD')\n    window.localStorage.setItem('sawPlanModal', 'viewed')\n    window.localStorage.setItem('dayBefore', currentDay)\n    handleModals('showBannerModal', this)\n  }\n\n  renderModalSatisfactionSurvey () {\n    const { modalOpen } = this.state\n    const taxableEntities = SessionStore.getTaxableEntities()\n    const entity = taxableEntities.find(entity => entity)\n\n    return (\n      <Modal\n        isActive={modalOpen}\n        toggleModal={this.toggleSatisfactionSurvey}\n        noFooter\n        isAlert\n      >\n        <div className='columns referral-promo'>\n          <div className='column is-12'>\n            <p className='referral-promo__title brake-line'>\n              <span>En Enconta t√∫ eres nuestra prioridad </span>\n            </p>\n            <div className='columns is-centered'>\n              <div className='column is-6'>\n                <img\n                  src={`img/contabilidad.svg`}\n                  alt={'Promoci√≥n de referidos'}\n                  className='referral-promo__img'\n                />\n              </div>\n            </div>\n            <p className='referral-promo__content brake-line'>\n              <span>\n                Es por eso que te pedimos apoyo para responder nuestra breve\n                encuesta, la cual no te tomar√° m√°s de 1 minuto. Esto con el fin\n                de mejorar nuestro servicio y tu experiencia como cliente.\n              </span>\n            </p>\n            <Link\n              to={`https://docs.google.com/forms/d/e/1FAIpQLSeXTL2M3ZwIemcZ-itGdDTdoyP5VxGE-ZmwjN9-KlXSvI6u_w/viewform?entry.1384753369=${entity &&\n                entity.rfc}`}\n              className='referral-promo__link'\n              target={'_blank'}\n              onClick={this.setInfoSurvey}\n            >\n              Valora nuestro servicio\n            </Link>\n          </div>\n        </div>\n      </Modal>\n    )\n  }\n\n  renderTable (tableName) {\n    const data = this.state[tableName]\n    let lowStatusWord = ''\n    let capStatusWord = ''\n    if (tableName === INCOMES) {\n      lowStatusWord = 'cobrar'\n      capStatusWord = 'Cobrada'\n    }\n    if (tableName === EXPENSES) {\n      lowStatusWord = 'pagar'\n      capStatusWord = 'Pagada'\n    }\n    const tableBody = data.map((invoice, index) => {\n      if (index < 5) {\n        return (\n          <tr key={invoice.id} className='cursor-pointer'>\n            <td className='align-left'>\n              <Link to={`/facturas/ver/${invoice.id}`}>\n                {invoice.legal_name}\n              </Link>\n            </td>\n            <td>{prettyDate(invoice.issue_date, false, true, false, '/')}</td>\n            <td className='is-money'>\n              {accounting.formatMoney(invoice.subtotal, '')}\n            </td>\n            <td>\n              <StatusIcon\n                className={INVOICE_PAYMENT_STATUS[invoice.payment_status]}\n              />\n            </td>\n          </tr>\n        )\n      }\n    })\n    if (this.state[tableName].length > 0) {\n      return (\n        <div>\n          <div className='flex-column'>\n            <div className='caption flex-end'>\n              <span>\n                <StatusIcon className='warning' />\n                Por {lowStatusWord}\n              </span>\n              <span style={{ marginLeft: '1.6rem' }}>\n                <StatusIcon className='info' />\n                {capStatusWord} parcialmente\n              </span>\n              <span style={{ marginLeft: '1.6rem' }}>\n                <StatusIcon className='success' />\n                {capStatusWord}\n              </span>\n              <span style={{ marginLeft: '1.6rem' }}>\n                <StatusIcon className='danger' />\n                Cancelada\n              </span>\n            </div>\n          </div>\n          <table className='table'>\n            <thead>\n              <tr>\n                <th className='align-left'>RAZ√ìN SOCIAL</th>\n                <th style={{ width: '6rem' }}>FECHA</th>\n                <th style={{ width: '9rem' }}>SUBTOTAL</th>\n                <th style={{ width: '5rem' }}>Estado</th>\n              </tr>\n            </thead>\n            <tbody>{tableBody}</tbody>\n          </table>\n        </div>\n      )\n    }\n    return (\n      <div className='block unselectable'>\n        <p>No hay facturas</p>\n      </div>\n    )\n  }\n\n  renderChart () {\n    // bars prop passed to Chart must be an array of objects with:\n    // dataName: the label to be shown to the user\n    // dataKey: the data object key name to get the actual data for each bar\n    // fill: the color for that kind of bar\n    // all of this could change, this is a demo so it's to be defined\n    const bars = [\n      { dataName: 'Ingreso', dataKey: 'revenue', fill: '#00BCB4' },\n      { dataName: 'Gasto', dataKey: 'expense', fill: '#4184F5' }\n    ]\n\n    const parsedChartData = this.state[CHARTS].map(item =>\n      Object.assign({}, item, {\n        month: MONTHS_SHORT[item.month],\n        expense: Math.ceil(item.expense),\n        revenue: Math.ceil(item.revenue)\n      })\n    )\n\n    if (parsedChartData.length > 0) {\n      return (\n        <div>\n          <div className='espacio-medium'>\n            <div className='tabs is-toggle is-small'>\n              <ul>\n                {CHART_PERIODS.map((period, i) => (\n                  <li\n                    className={classNames({\n                      'is-active': this.state[CHART_PERIOD_KEY] === period.id\n                    })}\n                    key={i}\n                  >\n                    <button onClick={this.onChangePeriod.bind(this, period.id)}>\n                      <span>{period.label}</span>\n                    </button>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n          <Chart data={parsedChartData} bars={bars} />\n        </div>\n      )\n    }\n    return <p>Cargando datos...</p>\n  }\n\n  render () {\n    const windowGlobal = typeof window !== 'undefined' && window\n    const { answeredSurvey, sawPlanModal } = windowGlobal.localStorage\n    const plan = getClientsPlan()\n    const isShowedPlans =\n      (plan === 'free' || plan === 'free_premium') &&\n      sawPlanModal === 'not-seen'\n    const showModalSurvey = moment().date() >= 23\n\n    return (\n      <Fragment>\n        {isShowedPlans && modalPlans(this)}\n        <CredentialsExpire ciec fiel />\n        <BankStatements />\n        <hr />\n        <div className='columns'>\n          <div className='column'>\n            <Card title='Ingresos y Gastos Mensuales'>\n              {this.renderChart()}\n            </Card>\n          </div>\n        </div>\n        <div className='columns'>\n          <div className='column'>\n            <Card\n              className='is-fullheight flex-column'\n              title='√öltimos Ingresos'\n            >\n              {this.renderTable(INCOMES)}\n              <div>\n                <Link to='/ingresos'>\n                  <Button buttonStyle='link' className='is-pulled-right'>\n                    Ver todos\n                  </Button>\n                </Link>\n              </div>\n            </Card>\n          </div>\n          <div className='column'>\n            <Card className='is-fullheight flex-column' title='√öltimos Gastos'>\n              {this.renderTable(EXPENSES)}\n              <div>\n                <Link to='/gastos'>\n                  <Button buttonStyle='link' className='is-pulled-right'>\n                    Ver todos\n                  </Button>\n                </Link>\n              </div>\n            </Card>\n          </div>\n          {showModalSurvey &&\n            !answeredSurvey &&\n            this.renderModalSatisfactionSurvey()}\n        </div>\n      </Fragment>\n    )\n  }\n}\n\nexport default Dashboard\n"]},"metadata":{},"sourceType":"module"}