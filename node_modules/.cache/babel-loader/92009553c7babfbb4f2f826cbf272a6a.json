{"ast":null,"code":"var _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/shared/waitAdvertisment/index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Lottie from 'react-lottie';\nimport Button from 'shared/button';\n\nvar WaitAdvertisment = function WaitAdvertisment(props) {\n  var animationData = props.animationData,\n      text = props.text,\n      button = props.button,\n      tryAgain = props.tryAgain;\n  var defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: 'xMidYMid slice'\n    }\n  };\n  return React.createElement(\"div\", {\n    className: \"wait-response\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Lottie, {\n    options: defaultOptions,\n    height: 190,\n    width: 190,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"wait-response--text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, text), button && React.createElement(Button, {\n    buttonStyle: \"primary\",\n    type: \"submit\",\n    onClick: tryAgain,\n    className: \"synchronization--margin-top\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Intentar nuevamente\"));\n};\n\nexport default WaitAdvertisment;\nWaitAdvertisment.propTypes = {\n  text: PropTypes.string.isRequired,\n  animationData: PropTypes.string.isRequired\n};\nWaitAdvertisment.defaultProps = {\n  text: '',\n  animationData: ''\n};","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/shared/waitAdvertisment/index.js"],"names":["React","PropTypes","Lottie","Button","WaitAdvertisment","props","animationData","text","button","tryAgain","defaultOptions","loop","autoplay","rendererSettings","preserveAspectRatio","propTypes","string","isRequired","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,MAAP,MAAmB,eAAnB;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,KAAK,EAAI;AAAA,MACxBC,aADwB,GACkBD,KADlB,CACxBC,aADwB;AAAA,MACTC,IADS,GACkBF,KADlB,CACTE,IADS;AAAA,MACHC,MADG,GACkBH,KADlB,CACHG,MADG;AAAA,MACKC,QADL,GACkBJ,KADlB,CACKI,QADL;AAEhC,MAAMC,cAAc,GAAG;AACrBC,IAAAA,IAAI,EAAE,IADe;AAErBC,IAAAA,QAAQ,EAAE,IAFW;AAGrBN,IAAAA,aAAa,EAAEA,aAHM;AAIrBO,IAAAA,gBAAgB,EAAE;AAChBC,MAAAA,mBAAmB,EAAE;AADL;AAJG,GAAvB;AASA,SACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEJ,cAAjB;AAAiC,IAAA,MAAM,EAAE,GAAzC;AAA8C,IAAA,KAAK,EAAE,GAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAG,IAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCH,IAApC,CAFF,EAGGC,MAAM,IACL,oBAAC,MAAD;AACE,IAAA,WAAW,EAAC,SADd;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,OAAO,EAAEC,QAHX;AAIE,IAAA,SAAS,EAAC,6BAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAJJ,CADF;AAgBD,CA3BD;;AA6BA,eAAeL,gBAAf;AAEAA,gBAAgB,CAACW,SAAjB,GAA6B;AAC3BR,EAAAA,IAAI,EAAEN,SAAS,CAACe,MAAV,CAAiBC,UADI;AAE3BX,EAAAA,aAAa,EAAEL,SAAS,CAACe,MAAV,CAAiBC;AAFL,CAA7B;AAKAb,gBAAgB,CAACc,YAAjB,GAAgC;AAC9BX,EAAAA,IAAI,EAAE,EADwB;AAE9BD,EAAAA,aAAa,EAAE;AAFe,CAAhC","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport Lottie from 'react-lottie'\nimport Button from 'shared/button'\n\nconst WaitAdvertisment = props => {\n  const { animationData, text, button, tryAgain } = props\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: 'xMidYMid slice'\n    }\n  }\n\n  return (\n    <div className='wait-response'>\n      <Lottie options={defaultOptions} height={190} width={190} />\n      <p className='wait-response--text'>{text}</p>\n      {button && (\n        <Button\n          buttonStyle='primary'\n          type='submit'\n          onClick={tryAgain}\n          className='synchronization--margin-top'\n        >\n          Intentar nuevamente\n        </Button>\n      )}\n    </div>\n  )\n}\n\nexport default WaitAdvertisment\n\nWaitAdvertisment.propTypes = {\n  text: PropTypes.string.isRequired,\n  animationData: PropTypes.string.isRequired\n}\n\nWaitAdvertisment.defaultProps = {\n  text: '',\n  animationData: ''\n}\n"]},"metadata":{},"sourceType":"module"}