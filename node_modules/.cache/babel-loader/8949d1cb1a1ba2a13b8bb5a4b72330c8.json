{"ast":null,"code":"import _defineProperty from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/taxableEntities/index.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { browserHistory } from 'react-router';\nimport classNames from 'classnames';\nimport accounting from 'accounting';\nimport SessionActions from 'actions/session';\nimport TaxableEntitiesActions from 'actions/taxableEntities';\nimport NotificationsActions from 'actions/notifications';\nimport SessionStore from 'stores/session';\nimport TaxableEntitiesStore from 'stores/taxableEntities';\nimport Paginator from 'shared/paginator';\nimport TextField from 'shared/textField';\nimport SelectField from 'shared/selectField';\nimport Card from 'shared/card';\nimport TableFilter from 'shared/tableFilter';\nimport { prettyDate, resetScroll } from 'utils';\nvar PLATFORM_STATUS_OPTIONS = [{\n  id: 'all',\n  label: 'Todos'\n}, {\n  id: 'active',\n  label: 'Activos'\n}, {\n  id: 'inactive',\n  label: 'Bajas'\n}];\nvar STATUS_OPTIONS = [{\n  id: '',\n  label: 'Todos'\n}, {\n  id: 'client',\n  label: 'Clientes'\n}, {\n  id: 'demo',\n  label: 'Demos'\n}];\n\nfunction getCurrentState() {\n  var currentEntity = SessionStore.getCurrentEntity();\n  var taxableEntities = TaxableEntitiesStore.getTaxableEntities();\n  var totalPages = TaxableEntitiesStore.getTotalPages();\n  var totalItems = TaxableEntitiesStore.getTotalItems();\n  return {\n    currentEntity: currentEntity,\n    taxableEntities: taxableEntities,\n    totalItems: totalItems,\n    totalPages: totalPages\n  };\n}\n\nvar TaxableEntities =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TaxableEntities, _Component);\n\n  function TaxableEntities() {\n    var _this;\n\n    _classCallCheck(this, TaxableEntities);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TaxableEntities).call(this));\n    _this.data = {\n      filters: {\n        legal_name: '',\n        rfc: '',\n        platform_status: 'active',\n        status: 'client'\n      },\n      sort: {\n        sort_by: 'legal_name',\n        sort_direction: 'asc'\n      }\n    };\n    _this.state = Object.assign({}, _this.data, getCurrentState());\n    _this._onChange = _this._onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(TaxableEntities, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Adds listener, when the Store changes, trigger the _onChange callback func\n      TaxableEntitiesStore.addChangeListener(this._onChange);\n      SessionStore.addChangeListener(this._onChange);\n      this.loadData();\n      resetScroll();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.location.search !== prevProps.location.search) {\n        this.loadData(this.props);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // Removes the listener to avoid memory leaks\n      TaxableEntitiesStore.removeChangeListener(this._onChange);\n      SessionStore.removeChangeListener(this._onChange);\n    }\n  }, {\n    key: \"_onChange\",\n    value: function _onChange() {\n      // When the store changes, the state goes to it and pulls the updated data\n      // then sets it so the component rerender\n      var state = getCurrentState();\n      this.setState(state);\n    } // Request email list page to the API\n\n  }, {\n    key: \"loadData\",\n    value: function loadData() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var user = SessionStore.getUser();\n      var params = Object.assign({}, props.location.query, this.state.sort);\n      if (user.role === 'sales') params.status = 'demo';\n      if (user.role === 'accountant') params.status = 'client';\n      TaxableEntitiesActions.getTaxableEntities(params);\n      this.setState(function (prevState) {\n        return {\n          filters: Object.assign({}, prevState.filters, params)\n        };\n      });\n    } // Sets the current entity on the API\n\n  }, {\n    key: \"setEntity\",\n    value: function setEntity(entity) {\n      if (this.state.currentEntity.id !== entity.id) {\n        SessionActions.changeCurrentEntity({\n          id: entity.id\n        }).then(function () {\n          NotificationsActions.success('Se ha cambiado la entidad fiscal');\n          browserHistory.push('/');\n        }).catch(function (e) {\n          return NotificationsActions.error(e);\n        });\n      }\n    } // Sorts table depending on the clicked <th />\n\n  }, {\n    key: \"sortBy\",\n    value: function sortBy(keyword) {\n      var sort = this.state.sort;\n\n      if (sort.sort_by === keyword) {\n        switch (sort.sort_direction) {\n          case 'asc':\n            sort.sort_direction = 'desc';\n            break;\n\n          case 'desc':\n            sort.sort_direction = 'asc';\n            break;\n        }\n      } else {\n        sort = {\n          sort_by: keyword,\n          sort_direction: 'asc'\n        };\n      }\n\n      this.setState({\n        sort: sort\n      }, this.loadData);\n    } // Change filter values\n\n  }, {\n    key: \"onChangeFilter\",\n    value: function onChangeFilter(field, e) {\n      var filter = _defineProperty({}, field, e.target.value);\n\n      this.setState(function (prevState) {\n        return {\n          filters: Object.assign({}, prevState.filters, filter)\n        };\n      });\n    } // Resets all filters and data to default\n\n  }, {\n    key: \"clearFilters\",\n    value: function clearFilters() {\n      this.setState({\n        filters: Object.assign({}, this.data.filters, {\n          platform_status: '',\n          status: ''\n        })\n      });\n    }\n  }, {\n    key: \"renderFilters\",\n    value: function renderFilters() {\n      var user = SessionStore.getUser();\n      var filters = this.state.filters;\n      return React.createElement(TableFilter, {\n        baseUrl: \"/admin/entidades_fiscales\",\n        filters: filters,\n        onClearFilters: this.clearFilters.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        placeholder: \"Raz\\xF3n Social\",\n        value: filters.legal_name,\n        onChange: this.onChangeFilter.bind(this, 'legal_name'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        placeholder: \"RFC\",\n        value: filters.rfc,\n        onChange: this.onChangeFilter.bind(this, 'rfc'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }), React.createElement(SelectField, {\n        placeholder: \"Activos / Bajas\",\n        options: PLATFORM_STATUS_OPTIONS,\n        value: filters.platform_status,\n        onChange: this.onChangeFilter.bind(this, 'platform_status'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }), user.role === 'sales' || user.role === 'accountant' ? null : React.createElement(SelectField, {\n        placeholder: \"Clientes / Demos\",\n        options: STATUS_OPTIONS,\n        value: filters.status,\n        onChange: this.onChangeFilter.bind(this, 'status'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"renderTable\",\n    value: function renderTable() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          taxableEntities = _this$state.taxableEntities,\n          totalPages = _this$state.totalPages,\n          sort = _this$state.sort;\n      var renderTable = React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"No hay clientes\"));\n      var icon = React.createElement(\"i\", {\n        className: classNames('mdi', {\n          'mdi-chevron-down': sort.sort_direction === 'asc',\n          'mdi-chevron-up': sort.sort_direction === 'desc'\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      });\n\n      if (taxableEntities.length > 0) {\n        var taxableEntitiesList = taxableEntities.map(function (entity, index) {\n          var createdAt = prettyDate(entity.created_at, null, true, false, ' ');\n          var lastLogin = entity.last_sign_in_at ? prettyDate(entity.last_sign_in_at, null, true, false, ' ') : '-';\n          return React.createElement(\"tr\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 212\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            className: \"align-left\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 213\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            onClick: _this2.setEntity.bind(_this2, entity),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 214\n            },\n            __self: this\n          }, entity.legal_name)), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 218\n            },\n            __self: this\n          }, entity.rfc), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 219\n            },\n            __self: this\n          }, entity.email), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 220\n            },\n            __self: this\n          }, createdAt), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 221\n            },\n            __self: this\n          }, lastLogin), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 222\n            },\n            __self: this\n          }, entity.active ? 'Activo' : 'Baja'));\n        });\n        renderTable = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227\n          },\n          __self: this\n        }, React.createElement(\"table\", {\n          className: \"table is-sortable\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228\n          },\n          __self: this\n        }, React.createElement(\"thead\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          className: classNames('align-left sortable', {\n            'is-sorting': sort.sort_by === 'legal_name'\n          }),\n          onClick: this.sortBy.bind(this, 'legal_name'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        }, \"Raz\\xF3n Social \", sort.sort_by === 'legal_name' ? icon : null), React.createElement(\"th\", {\n          className: classNames('sortable', {\n            'is-sorting': sort.sort_by === 'rfc'\n          }),\n          onClick: this.sortBy.bind(this, 'rfc'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239\n          },\n          __self: this\n        }, \"RFC \", sort.sort_by === 'rfc' ? icon : null), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247\n          },\n          __self: this\n        }, \"Email\"), React.createElement(\"th\", {\n          className: classNames('sortable', {\n            'is-sorting': sort.sort_by === 'created_at'\n          }),\n          onClick: this.sortBy.bind(this, 'created_at'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248\n          },\n          __self: this\n        }, \"Registro \", sort.sort_by === 'created_at' ? icon : null), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256\n          },\n          __self: this\n        }, \"\\xDAltimo Inicio De Sesi\\xF3n\"), React.createElement(\"th\", {\n          className: classNames('sortable', {\n            'is-sorting': sort.sort_by === 'active'\n          }),\n          onClick: this.sortBy.bind(this, 'active'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257\n          },\n          __self: this\n        }, \"Estatus \", sort.sort_by === 'active' ? icon : null))), React.createElement(\"tbody\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267\n          },\n          __self: this\n        }, taxableEntitiesList)), React.createElement(Paginator, {\n          totalPages: totalPages,\n          location: this.props.location,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269\n          },\n          __self: this\n        }));\n      }\n\n      return renderTable;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"headline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, \"Selecciona una Entidad Fiscal\"), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, this.renderFilters(), React.createElement(\"div\", {\n        className: \"caption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, accounting.formatNumber(this.state.totalItems), \" entidades visibles\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }), this.renderTable()));\n    }\n  }]);\n\n  return TaxableEntities;\n}(Component);\n\nTaxableEntities.propTypes = {\n  location: PropTypes.object\n};\nexport default TaxableEntities;","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/taxableEntities/index.js"],"names":["React","Component","PropTypes","browserHistory","classNames","accounting","SessionActions","TaxableEntitiesActions","NotificationsActions","SessionStore","TaxableEntitiesStore","Paginator","TextField","SelectField","Card","TableFilter","prettyDate","resetScroll","PLATFORM_STATUS_OPTIONS","id","label","STATUS_OPTIONS","getCurrentState","currentEntity","getCurrentEntity","taxableEntities","getTaxableEntities","totalPages","getTotalPages","totalItems","getTotalItems","TaxableEntities","data","filters","legal_name","rfc","platform_status","status","sort","sort_by","sort_direction","state","Object","assign","_onChange","bind","addChangeListener","loadData","prevProps","props","location","search","removeChangeListener","setState","user","getUser","params","query","role","prevState","entity","changeCurrentEntity","then","success","push","catch","e","error","keyword","field","filter","target","value","clearFilters","onChangeFilter","renderTable","icon","length","taxableEntitiesList","map","index","createdAt","created_at","lastLogin","last_sign_in_at","setEntity","email","active","sortBy","renderFilters","formatNumber","propTypes","object"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAOC,cAAP,MAA2B,iBAA3B;AACA,OAAOC,sBAAP,MAAmC,yBAAnC;AACA,OAAOC,oBAAP,MAAiC,uBAAjC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,OAAxC;AAEA,IAAMC,uBAAuB,GAAG,CAC9B;AAAEC,EAAAA,EAAE,EAAE,KAAN;AAAaC,EAAAA,KAAK,EAAE;AAApB,CAD8B,EAE9B;AAAED,EAAAA,EAAE,EAAE,QAAN;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CAF8B,EAG9B;AAAED,EAAAA,EAAE,EAAE,UAAN;AAAkBC,EAAAA,KAAK,EAAE;AAAzB,CAH8B,CAAhC;AAMA,IAAMC,cAAc,GAAG,CACrB;AAAEF,EAAAA,EAAE,EAAE,EAAN;AAAUC,EAAAA,KAAK,EAAE;AAAjB,CADqB,EAErB;AAAED,EAAAA,EAAE,EAAE,QAAN;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CAFqB,EAGrB;AAAED,EAAAA,EAAE,EAAE,MAAN;AAAcC,EAAAA,KAAK,EAAE;AAArB,CAHqB,CAAvB;;AAMA,SAASE,eAAT,GAA4B;AAC1B,MAAMC,aAAa,GAAGd,YAAY,CAACe,gBAAb,EAAtB;AACA,MAAMC,eAAe,GAAGf,oBAAoB,CAACgB,kBAArB,EAAxB;AACA,MAAMC,UAAU,GAAGjB,oBAAoB,CAACkB,aAArB,EAAnB;AACA,MAAMC,UAAU,GAAGnB,oBAAoB,CAACoB,aAArB,EAAnB;AACA,SAAO;AACLP,IAAAA,aAAa,EAAbA,aADK;AAELE,IAAAA,eAAe,EAAfA,eAFK;AAGLI,IAAAA,UAAU,EAAVA,UAHK;AAILF,IAAAA,UAAU,EAAVA;AAJK,GAAP;AAMD;;IAEKI,e;;;;;AACJ,6BAAe;AAAA;;AAAA;;AACb;AACA,UAAKC,IAAL,GAAY;AACVC,MAAAA,OAAO,EAAE;AACPC,QAAAA,UAAU,EAAE,EADL;AAEPC,QAAAA,GAAG,EAAE,EAFE;AAGPC,QAAAA,eAAe,EAAE,QAHV;AAIPC,QAAAA,MAAM,EAAE;AAJD,OADC;AAOVC,MAAAA,IAAI,EAAE;AACJC,QAAAA,OAAO,EAAE,YADL;AAEJC,QAAAA,cAAc,EAAE;AAFZ;AAPI,KAAZ;AAYA,UAAKC,KAAL,GAAaC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,MAAKX,IAAvB,EAA6BV,eAAe,EAA5C,CAAb;AACA,UAAKsB,SAAL,GAAiB,MAAKA,SAAL,CAAeC,IAAf,uDAAjB;AAfa;AAgBd;;;;wCAEoB;AACnB;AACAnC,MAAAA,oBAAoB,CAACoC,iBAArB,CAAuC,KAAKF,SAA5C;AACAnC,MAAAA,YAAY,CAACqC,iBAAb,CAA+B,KAAKF,SAApC;AACA,WAAKG,QAAL;AACA9B,MAAAA,WAAW;AACZ;;;uCAEmB+B,S,EAAW;AAC7B,UAAI,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,MAApB,KAA+BH,SAAS,CAACE,QAAV,CAAmBC,MAAtD,EAA8D;AAC5D,aAAKJ,QAAL,CAAc,KAAKE,KAAnB;AACD;AACF;;;2CAEuB;AACtB;AACAvC,MAAAA,oBAAoB,CAAC0C,oBAArB,CAA0C,KAAKR,SAA/C;AACAnC,MAAAA,YAAY,CAAC2C,oBAAb,CAAkC,KAAKR,SAAvC;AACD;;;gCAEY;AACX;AACA;AACA,UAAMH,KAAK,GAAGnB,eAAe,EAA7B;AACA,WAAK+B,QAAL,CAAcZ,KAAd;AACD,K,CAED;;;;+BAC8B;AAAA,UAApBQ,KAAoB,uEAAZ,KAAKA,KAAO;AAC5B,UAAMK,IAAI,GAAG7C,YAAY,CAAC8C,OAAb,EAAb;AACA,UAAIC,MAAM,GAAGd,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBM,KAAK,CAACC,QAAN,CAAeO,KAAjC,EAAwC,KAAKhB,KAAL,CAAWH,IAAnD,CAAb;AACA,UAAIgB,IAAI,CAACI,IAAL,KAAc,OAAlB,EAA2BF,MAAM,CAACnB,MAAP,GAAgB,MAAhB;AAC3B,UAAIiB,IAAI,CAACI,IAAL,KAAc,YAAlB,EAAgCF,MAAM,CAACnB,MAAP,GAAgB,QAAhB;AAChC9B,MAAAA,sBAAsB,CAACmB,kBAAvB,CAA0C8B,MAA1C;AACA,WAAKH,QAAL,CAAc,UAAAM,SAAS;AAAA,eAAK;AAC1B1B,UAAAA,OAAO,EAAES,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBgB,SAAS,CAAC1B,OAA5B,EAAqCuB,MAArC;AADiB,SAAL;AAAA,OAAvB;AAGD,K,CAED;;;;8BACWI,M,EAAQ;AACjB,UAAI,KAAKnB,KAAL,CAAWlB,aAAX,CAAyBJ,EAAzB,KAAgCyC,MAAM,CAACzC,EAA3C,EAA+C;AAC7Cb,QAAAA,cAAc,CAACuD,mBAAf,CAAmC;AAAE1C,UAAAA,EAAE,EAAEyC,MAAM,CAACzC;AAAb,SAAnC,EACG2C,IADH,CACQ,YAAM;AACVtD,UAAAA,oBAAoB,CAACuD,OAArB,CAA6B,kCAA7B;AACA5D,UAAAA,cAAc,CAAC6D,IAAf,CAAoB,GAApB;AACD,SAJH,EAKGC,KALH,CAKS,UAAAC,CAAC;AAAA,iBAAI1D,oBAAoB,CAAC2D,KAArB,CAA2BD,CAA3B,CAAJ;AAAA,SALV;AAMD;AACF,K,CAED;;;;2BACQE,O,EAAS;AAAA,UACT9B,IADS,GACA,KAAKG,KADL,CACTH,IADS;;AAEf,UAAIA,IAAI,CAACC,OAAL,KAAiB6B,OAArB,EAA8B;AAC5B,gBAAQ9B,IAAI,CAACE,cAAb;AACE,eAAK,KAAL;AACEF,YAAAA,IAAI,CAACE,cAAL,GAAsB,MAAtB;AACA;;AACF,eAAK,MAAL;AACEF,YAAAA,IAAI,CAACE,cAAL,GAAsB,KAAtB;AACA;AANJ;AAQD,OATD,MASO;AACLF,QAAAA,IAAI,GAAG;AACLC,UAAAA,OAAO,EAAE6B,OADJ;AAEL5B,UAAAA,cAAc,EAAE;AAFX,SAAP;AAID;;AACD,WAAKa,QAAL,CAAc;AAAEf,QAAAA,IAAI,EAAJA;AAAF,OAAd,EAAwB,KAAKS,QAA7B;AACD,K,CAED;;;;mCACgBsB,K,EAAOH,C,EAAG;AACxB,UAAMI,MAAM,uBAAMD,KAAN,EAAcH,CAAC,CAACK,MAAF,CAASC,KAAvB,CAAZ;;AACA,WAAKnB,QAAL,CAAc,UAAAM,SAAS;AAAA,eAAK;AAC1B1B,UAAAA,OAAO,EAAES,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBgB,SAAS,CAAC1B,OAA5B,EAAqCqC,MAArC;AADiB,SAAL;AAAA,OAAvB;AAGD,K,CAED;;;;mCACgB;AACd,WAAKjB,QAAL,CAAc;AACZpB,QAAAA,OAAO,EAAES,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKX,IAAL,CAAUC,OAA5B,EAAqC;AAC5CG,UAAAA,eAAe,EAAE,EAD2B;AAE5CC,UAAAA,MAAM,EAAE;AAFoC,SAArC;AADG,OAAd;AAMD;;;oCAEgB;AACf,UAAMiB,IAAI,GAAG7C,YAAY,CAAC8C,OAAb,EAAb;AADe,UAEPtB,OAFO,GAEK,KAAKQ,KAFV,CAEPR,OAFO;AAGf,aACE,oBAAC,WAAD;AACE,QAAA,OAAO,EAAC,2BADV;AAEE,QAAA,OAAO,EAAEA,OAFX;AAGE,QAAA,cAAc,EAAE,KAAKwC,YAAL,CAAkB5B,IAAlB,CAAuB,IAAvB,CAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,SAAD;AACE,QAAA,WAAW,EAAC,iBADd;AAEE,QAAA,KAAK,EAAEZ,OAAO,CAACC,UAFjB;AAGE,QAAA,QAAQ,EAAE,KAAKwC,cAAL,CAAoB7B,IAApB,CAAyB,IAAzB,EAA+B,YAA/B,CAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAUE,oBAAC,SAAD;AACE,QAAA,WAAW,EAAC,KADd;AAEE,QAAA,KAAK,EAAEZ,OAAO,CAACE,GAFjB;AAGE,QAAA,QAAQ,EAAE,KAAKuC,cAAL,CAAoB7B,IAApB,CAAyB,IAAzB,EAA+B,KAA/B,CAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,EAeE,oBAAC,WAAD;AACE,QAAA,WAAW,EAAC,iBADd;AAEE,QAAA,OAAO,EAAE3B,uBAFX;AAGE,QAAA,KAAK,EAAEe,OAAO,CAACG,eAHjB;AAIE,QAAA,QAAQ,EAAE,KAAKsC,cAAL,CAAoB7B,IAApB,CAAyB,IAAzB,EAA+B,iBAA/B,CAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfF,EAqBGS,IAAI,CAACI,IAAL,KAAc,OAAd,IAAyBJ,IAAI,CAACI,IAAL,KAAc,YAAvC,GAAsD,IAAtD,GACC,oBAAC,WAAD;AACE,QAAA,WAAW,EAAC,kBADd;AAEE,QAAA,OAAO,EAAErC,cAFX;AAGE,QAAA,KAAK,EAAEY,OAAO,CAACI,MAHjB;AAIE,QAAA,QAAQ,EAAE,KAAKqC,cAAL,CAAoB7B,IAApB,CAAyB,IAAzB,EAA+B,QAA/B,CAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAtBJ,CADF;AAgCD;;;kCAEc;AAAA;;AAAA,wBACiC,KAAKJ,KADtC;AAAA,UACLhB,eADK,eACLA,eADK;AAAA,UACYE,UADZ,eACYA,UADZ;AAAA,UACwBW,IADxB,eACwBA,IADxB;AAEb,UAAIqC,WAAW,GACb;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CADF;AAKA,UAAMC,IAAI,GACR;AACE,QAAA,SAAS,EAAExE,UAAU,CAAC,KAAD,EAAQ;AAC3B,8BAAoBkC,IAAI,CAACE,cAAL,KAAwB,KADjB;AAE3B,4BAAkBF,IAAI,CAACE,cAAL,KAAwB;AAFf,SAAR,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;AAQA,UAAIf,eAAe,CAACoD,MAAhB,GAAyB,CAA7B,EAAgC;AAC9B,YAAMC,mBAAmB,GAAGrD,eAAe,CAACsD,GAAhB,CAAoB,UAACnB,MAAD,EAASoB,KAAT,EAAmB;AACjE,cAAMC,SAAS,GAAGjE,UAAU,CAAC4C,MAAM,CAACsB,UAAR,EAAoB,IAApB,EAA0B,IAA1B,EAAgC,KAAhC,EAAuC,GAAvC,CAA5B;AACA,cAAMC,SAAS,GAAGvB,MAAM,CAACwB,eAAP,GACdpE,UAAU,CAAC4C,MAAM,CAACwB,eAAR,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,KAArC,EAA4C,GAA5C,CADI,GAEd,GAFJ;AAGA,iBACE;AAAI,YAAA,GAAG,EAAEJ,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAI,YAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAG,YAAA,OAAO,EAAE,MAAI,CAACK,SAAL,CAAexC,IAAf,CAAoB,MAApB,EAA0Be,MAA1B,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGA,MAAM,CAAC1B,UADV,CADF,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAK0B,MAAM,CAACzB,GAAZ,CANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKyB,MAAM,CAAC0B,KAAZ,CAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKL,SAAL,CARF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKE,SAAL,CATF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKvB,MAAM,CAAC2B,MAAP,GAAgB,QAAhB,GAA2B,MAAhC,CAVF,CADF;AAcD,SAnB2B,CAA5B;AAoBAZ,QAAAA,WAAW,GACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAO,UAAA,SAAS,EAAC,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AACE,UAAA,SAAS,EAAEvE,UAAU,CAAC,qBAAD,EAAwB;AAC3C,0BAAckC,IAAI,CAACC,OAAL,KAAiB;AADY,WAAxB,CADvB;AAIE,UAAA,OAAO,EAAE,KAAKiD,MAAL,CAAY3C,IAAZ,CAAiB,IAAjB,EAAuB,YAAvB,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAMgBP,IAAI,CAACC,OAAL,KAAiB,YAAjB,GAAgCqC,IAAhC,GAAuC,IANvD,CADF,EASE;AACE,UAAA,SAAS,EAAExE,UAAU,CAAC,UAAD,EAAa;AAChC,0BAAckC,IAAI,CAACC,OAAL,KAAiB;AADC,WAAb,CADvB;AAIE,UAAA,OAAO,EAAE,KAAKiD,MAAL,CAAY3C,IAAZ,CAAiB,IAAjB,EAAuB,KAAvB,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAMOP,IAAI,CAACC,OAAL,KAAiB,KAAjB,GAAyBqC,IAAzB,GAAgC,IANvC,CATF,EAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAjBF,EAkBE;AACE,UAAA,SAAS,EAAExE,UAAU,CAAC,UAAD,EAAa;AAChC,0BAAckC,IAAI,CAACC,OAAL,KAAiB;AADC,WAAb,CADvB;AAIE,UAAA,OAAO,EAAE,KAAKiD,MAAL,CAAY3C,IAAZ,CAAiB,IAAjB,EAAuB,YAAvB,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAMYP,IAAI,CAACC,OAAL,KAAiB,YAAjB,GAAgCqC,IAAhC,GAAuC,IANnD,CAlBF,EA0BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CA1BF,EA2BE;AACE,UAAA,SAAS,EAAExE,UAAU,CAAC,UAAD,EAAa;AAChC,0BAAckC,IAAI,CAACC,OAAL,KAAiB;AADC,WAAb,CADvB;AAIE,UAAA,OAAO,EAAE,KAAKiD,MAAL,CAAY3C,IAAZ,CAAiB,IAAjB,EAAuB,QAAvB,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAMWP,IAAI,CAACC,OAAL,KAAiB,QAAjB,GAA4BqC,IAA5B,GAAmC,IAN9C,CA3BF,CADF,CADF,EAuCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAQE,mBAAR,CAvCF,CADF,EA0CE,oBAAC,SAAD;AAAW,UAAA,UAAU,EAAEnD,UAAvB;AAAmC,UAAA,QAAQ,EAAE,KAAKsB,KAAL,CAAWC,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UA1CF,CADF;AA8CD;;AACD,aAAOyB,WAAP;AACD;;;6BAES;AACR,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKc,aAAL,EADH,EAEE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGpF,UAAU,CAACqF,YAAX,CAAwB,KAAKjD,KAAL,CAAWZ,UAAnC,CADH,wBAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAMG,KAAK8C,WAAL,EANH,CAFF,CADF;AAaD;;;;EAtP2B1E,S;;AAyP9B8B,eAAe,CAAC4D,SAAhB,GAA4B;AAC1BzC,EAAAA,QAAQ,EAAEhD,SAAS,CAAC0F;AADM,CAA5B;AAIA,eAAe7D,eAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { browserHistory } from 'react-router'\nimport classNames from 'classnames'\nimport accounting from 'accounting'\n\nimport SessionActions from 'actions/session'\nimport TaxableEntitiesActions from 'actions/taxableEntities'\nimport NotificationsActions from 'actions/notifications'\nimport SessionStore from 'stores/session'\nimport TaxableEntitiesStore from 'stores/taxableEntities'\nimport Paginator from 'shared/paginator'\nimport TextField from 'shared/textField'\nimport SelectField from 'shared/selectField'\nimport Card from 'shared/card'\nimport TableFilter from 'shared/tableFilter'\nimport { prettyDate, resetScroll } from 'utils'\n\nconst PLATFORM_STATUS_OPTIONS = [\n  { id: 'all', label: 'Todos' },\n  { id: 'active', label: 'Activos' },\n  { id: 'inactive', label: 'Bajas' }\n]\n\nconst STATUS_OPTIONS = [\n  { id: '', label: 'Todos' },\n  { id: 'client', label: 'Clientes' },\n  { id: 'demo', label: 'Demos' }\n]\n\nfunction getCurrentState () {\n  const currentEntity = SessionStore.getCurrentEntity()\n  const taxableEntities = TaxableEntitiesStore.getTaxableEntities()\n  const totalPages = TaxableEntitiesStore.getTotalPages()\n  const totalItems = TaxableEntitiesStore.getTotalItems()\n  return {\n    currentEntity,\n    taxableEntities,\n    totalItems,\n    totalPages\n  }\n}\n\nclass TaxableEntities extends Component {\n  constructor () {\n    super()\n    this.data = {\n      filters: {\n        legal_name: '',\n        rfc: '',\n        platform_status: 'active',\n        status: 'client'\n      },\n      sort: {\n        sort_by: 'legal_name',\n        sort_direction: 'asc'\n      }\n    }\n    this.state = Object.assign({}, this.data, getCurrentState())\n    this._onChange = this._onChange.bind(this)\n  }\n\n  componentDidMount () {\n    // Adds listener, when the Store changes, trigger the _onChange callback func\n    TaxableEntitiesStore.addChangeListener(this._onChange)\n    SessionStore.addChangeListener(this._onChange)\n    this.loadData()\n    resetScroll()\n  }\n\n  componentDidUpdate (prevProps) {\n    if (this.props.location.search !== prevProps.location.search) {\n      this.loadData(this.props)\n    }\n  }\n\n  componentWillUnmount () {\n    // Removes the listener to avoid memory leaks\n    TaxableEntitiesStore.removeChangeListener(this._onChange)\n    SessionStore.removeChangeListener(this._onChange)\n  }\n\n  _onChange () {\n    // When the store changes, the state goes to it and pulls the updated data\n    // then sets it so the component rerender\n    const state = getCurrentState()\n    this.setState(state)\n  }\n\n  // Request email list page to the API\n  loadData (props = this.props) {\n    const user = SessionStore.getUser()\n    let params = Object.assign({}, props.location.query, this.state.sort)\n    if (user.role === 'sales') params.status = 'demo'\n    if (user.role === 'accountant') params.status = 'client'\n    TaxableEntitiesActions.getTaxableEntities(params)\n    this.setState(prevState => ({\n      filters: Object.assign({}, prevState.filters, params)\n    }))\n  }\n\n  // Sets the current entity on the API\n  setEntity (entity) {\n    if (this.state.currentEntity.id !== entity.id) {\n      SessionActions.changeCurrentEntity({ id: entity.id })\n        .then(() => {\n          NotificationsActions.success('Se ha cambiado la entidad fiscal')\n          browserHistory.push('/')\n        })\n        .catch(e => NotificationsActions.error(e))\n    }\n  }\n\n  // Sorts table depending on the clicked <th />\n  sortBy (keyword) {\n    let { sort } = this.state\n    if (sort.sort_by === keyword) {\n      switch (sort.sort_direction) {\n        case 'asc':\n          sort.sort_direction = 'desc'\n          break\n        case 'desc':\n          sort.sort_direction = 'asc'\n          break\n      }\n    } else {\n      sort = {\n        sort_by: keyword,\n        sort_direction: 'asc'\n      }\n    }\n    this.setState({ sort }, this.loadData)\n  }\n\n  // Change filter values\n  onChangeFilter (field, e) {\n    const filter = { [field]: e.target.value }\n    this.setState(prevState => ({\n      filters: Object.assign({}, prevState.filters, filter)\n    }))\n  }\n\n  // Resets all filters and data to default\n  clearFilters () {\n    this.setState({\n      filters: Object.assign({}, this.data.filters, {\n        platform_status: '',\n        status: ''\n      })\n    })\n  }\n\n  renderFilters () {\n    const user = SessionStore.getUser()\n    const { filters } = this.state\n    return (\n      <TableFilter\n        baseUrl='/admin/entidades_fiscales'\n        filters={filters}\n        onClearFilters={this.clearFilters.bind(this)}\n      >\n        <TextField\n          placeholder='Razón Social'\n          value={filters.legal_name}\n          onChange={this.onChangeFilter.bind(this, 'legal_name')}\n        />\n        <TextField\n          placeholder='RFC'\n          value={filters.rfc}\n          onChange={this.onChangeFilter.bind(this, 'rfc')}\n        />\n        <SelectField\n          placeholder='Activos / Bajas'\n          options={PLATFORM_STATUS_OPTIONS}\n          value={filters.platform_status}\n          onChange={this.onChangeFilter.bind(this, 'platform_status')}\n        />\n        {user.role === 'sales' || user.role === 'accountant' ? null : (\n          <SelectField\n            placeholder='Clientes / Demos'\n            options={STATUS_OPTIONS}\n            value={filters.status}\n            onChange={this.onChangeFilter.bind(this, 'status')}\n          />\n        )}\n      </TableFilter>\n    )\n  }\n\n  renderTable () {\n    const { taxableEntities, totalPages, sort } = this.state\n    let renderTable = (\n      <div className='content'>\n        <p>No hay clientes</p>\n      </div>\n    )\n    const icon = (\n      <i\n        className={classNames('mdi', {\n          'mdi-chevron-down': sort.sort_direction === 'asc',\n          'mdi-chevron-up': sort.sort_direction === 'desc'\n        })}\n      />\n    )\n    if (taxableEntities.length > 0) {\n      const taxableEntitiesList = taxableEntities.map((entity, index) => {\n        const createdAt = prettyDate(entity.created_at, null, true, false, ' ')\n        const lastLogin = entity.last_sign_in_at\n          ? prettyDate(entity.last_sign_in_at, null, true, false, ' ')\n          : '-'\n        return (\n          <tr key={index}>\n            <td className='align-left'>\n              <a onClick={this.setEntity.bind(this, entity)}>\n                {entity.legal_name}\n              </a>\n            </td>\n            <td>{entity.rfc}</td>\n            <td>{entity.email}</td>\n            <td>{createdAt}</td>\n            <td>{lastLogin}</td>\n            <td>{entity.active ? 'Activo' : 'Baja'}</td>\n          </tr>\n        )\n      })\n      renderTable = (\n        <div>\n          <table className='table is-sortable'>\n            <thead>\n              <tr>\n                <th\n                  className={classNames('align-left sortable', {\n                    'is-sorting': sort.sort_by === 'legal_name'\n                  })}\n                  onClick={this.sortBy.bind(this, 'legal_name')}\n                >\n                  Razón Social {sort.sort_by === 'legal_name' ? icon : null}\n                </th>\n                <th\n                  className={classNames('sortable', {\n                    'is-sorting': sort.sort_by === 'rfc'\n                  })}\n                  onClick={this.sortBy.bind(this, 'rfc')}\n                >\n                  RFC {sort.sort_by === 'rfc' ? icon : null}\n                </th>\n                <th>Email</th>\n                <th\n                  className={classNames('sortable', {\n                    'is-sorting': sort.sort_by === 'created_at'\n                  })}\n                  onClick={this.sortBy.bind(this, 'created_at')}\n                >\n                  Registro {sort.sort_by === 'created_at' ? icon : null}\n                </th>\n                <th>Último Inicio De Sesión</th>\n                <th\n                  className={classNames('sortable', {\n                    'is-sorting': sort.sort_by === 'active'\n                  })}\n                  onClick={this.sortBy.bind(this, 'active')}\n                >\n                  Estatus {sort.sort_by === 'active' ? icon : null}\n                </th>\n              </tr>\n            </thead>\n            <tbody>{taxableEntitiesList}</tbody>\n          </table>\n          <Paginator totalPages={totalPages} location={this.props.location} />\n        </div>\n      )\n    }\n    return renderTable\n  }\n\n  render () {\n    return (\n      <div>\n        <h1 className='headline'>Selecciona una Entidad Fiscal</h1>\n        <Card>\n          {this.renderFilters()}\n          <div className='caption'>\n            {accounting.formatNumber(this.state.totalItems)} entidades visibles\n          </div>\n          <br />\n          {this.renderTable()}\n        </Card>\n      </div>\n    )\n  }\n}\n\nTaxableEntities.propTypes = {\n  location: PropTypes.object\n}\n\nexport default TaxableEntities\n"]},"metadata":{},"sourceType":"module"}