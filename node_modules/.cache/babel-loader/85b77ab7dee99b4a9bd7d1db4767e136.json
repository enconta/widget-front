{"ast":null,"code":"import _defineProperty from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/editUser/suscription/paymentMethods/index.js\";\nimport React, { Component } from 'react';\nimport { Link, browserHistory } from 'react-router';\nimport AppSignal from 'appsignal';\nimport Modal from 'shared/modal';\nimport CardThumbnail from 'shared/cardThumbnail';\nimport NotificationsActions from 'actions/notifications';\nimport SuscriptionActions from 'actions/suscription';\nimport SuscriptionStore from 'stores/suscription';\nimport SessionStore from 'stores/session';\nimport RadioButton from 'shared/radioButton';\n\nfunction getCurrentState() {\n  return {\n    paymentSources: SuscriptionStore.getPaymentSourcesList(),\n    currentUser: SessionStore.getUser()\n  };\n}\n\nvar PaymentMethods =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PaymentMethods, _Component);\n\n  function PaymentMethods() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PaymentMethods);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PaymentMethods)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = _objectSpread({}, getCurrentState(), {\n      selectedCard: '',\n      selectedCardId: null,\n      showModalDelete: false,\n      showModal: false,\n      isAccountHolder: false\n    });\n\n    _this._onChange = function () {\n      var suscriptionStructure = getCurrentState();\n\n      _this.setState(suscriptionStructure);\n    };\n\n    _this.selectPaymentMethod = function (idCard, lastNumbers) {\n      return function (changeEvent) {\n        _this.setState({\n          showModal: !_this.state.showModal,\n          selectedCard: lastNumbers,\n          selectedCardId: idCard\n        });\n      };\n    };\n\n    _this.selectPaymentMethodDelete = function (lastNumbers, idCard) {\n      _this.setState({\n        showModalDelete: !_this.state.showModalDelete,\n        selectedCard: lastNumbers,\n        selectedCardId: idCard\n      });\n    };\n\n    _this.deletePaymentSource = function () {\n      var idCard = _this.state.selectedCardId;\n      SuscriptionActions.deletePaymentSource(idCard).then(function () {\n        SuscriptionActions.getPaymentSourcesList();\n\n        _this.setState(function (state) {\n          return {\n            showModalDelete: !state.showModalDelete\n          };\n        });\n\n        NotificationsActions.success('Método de pago eliminado exitosamente.');\n      }).catch(function (error) {\n        var _SessionStore$getCurr = SessionStore.getCurrentEntity(),\n            rfc = _SessionStore$getCurr.rfc;\n\n        AppSignal.addBreadcrumb({\n          category: 'Pasarela de pagos',\n          action: \"Error: Eliminar m\\xE9todo de pago\",\n          metadata: {\n            rfc: rfc,\n            url: '/mi-cuenta/suscripcion'\n          }\n        });\n        AppSignal.sendError(new Error(error));\n        NotificationsActions.error(error);\n      });\n    };\n\n    _this.showPaymentMethodForm = function () {\n      browserHistory.push('/mi-cuenta/suscripcion/agregar-metodo-pago');\n    };\n\n    return _this;\n  }\n\n  _createClass(PaymentMethods, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      SessionStore.addChangeListener(this._onChange);\n      SuscriptionStore.addChangeListener(this._onChange);\n      SuscriptionActions.getPaymentSourcesList().catch(function (error) {\n        NotificationsActions.error(error);\n      });\n      this.setState(function (state) {\n        return {\n          isAccountHolder: state.currentUser.role === 'account_holder'\n        };\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      SessionStore.removeChangeListener(this._onChange);\n      SuscriptionStore.removeChangeListener(this._onChange);\n    }\n  }, {\n    key: \"togglePaymentMethod\",\n    value: function togglePaymentMethod() {\n      var _this2 = this;\n\n      var selectedCardId = this.state.selectedCardId;\n      SuscriptionActions.makePrincipalPaymentCard(selectedCardId).then(function () {\n        _this2.setState({\n          showModal: !_this2.state.showModal\n        });\n\n        NotificationsActions.success('Cambio de método de pago exitoso.');\n      }).catch(function (error) {\n        var _SessionStore$getCurr2 = SessionStore.getCurrentEntity(),\n            rfc = _SessionStore$getCurr2.rfc;\n\n        AppSignal.addBreadcrumb({\n          category: 'Pasarela de pagos',\n          action: \"Error: Cambiar m\\xE9todo de pago\",\n          metadata: {\n            rfc: rfc,\n            url: '/mi-cuenta/suscripcion'\n          }\n        });\n        AppSignal.sendError(new Error(error));\n        NotificationsActions.error(error);\n      });\n    }\n  }, {\n    key: \"handleCancelModal\",\n    value: function handleCancelModal(field, value) {\n      this.setState(_defineProperty({}, field, value));\n    }\n  }, {\n    key: \"renderModalChangePayment\",\n    value: function renderModalChangePayment() {\n      var _this$state = this.state,\n          selectedCard = _this$state.selectedCard,\n          showModal = _this$state.showModal;\n      return React.createElement(Modal, {\n        isActive: showModal,\n        toggleModal: this.handleCancelModal.bind(this, 'showModal', !showModal),\n        onSubmit: this.togglePaymentMethod.bind(this),\n        title: \"Cambiar m\\xE9todo de pago\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"paragraph-info paragraph-info--black paragraph-info--margin-bottom-22px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"\\xBFEst\\xE1s seguro que quieres cambiar tu m\\xE9todo de pago por la tarjeta con\\n          terminaci\\xF3n \".concat(selectedCard, \" ?\")), React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column is-narrow is-padding-rightless\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"mdi mdi-information-outline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"paragraph-info paragraph-info--font-12px paragraph-info--italic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Enconta cobrar\\xE1 de forma autom\\xE1tica y mensual por este medio hasta que cambies tu m\\xE9todo de pago o canceles tu suscripci\\xF3n.\"))));\n    }\n  }, {\n    key: \"renderModalDeletePayment\",\n    value: function renderModalDeletePayment() {\n      var _this$state2 = this.state,\n          selectedCard = _this$state2.selectedCard,\n          showModalDelete = _this$state2.showModalDelete;\n      return React.createElement(Modal, {\n        isActive: this.state.showModalDelete,\n        toggleModal: this.handleCancelModal.bind(this, 'showModalDelete', !showModalDelete),\n        onSubmit: this.deletePaymentSource.bind(this),\n        title: \"Eliminar m\\xE9todo de pago\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"paragraph-info paragraph-info--black paragraph-info--margin-bottom-22px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"\\xBFDeseas eliminar la tarjeta con terminaci\\xF3n \".concat(selectedCard, \"?\")));\n    }\n  }, {\n    key: \"renderButtonNewPaymentMethod\",\n    value: function renderButtonNewPaymentMethod() {\n      var isAccountHolder = this.state.isAccountHolder;\n      return React.createElement(\"button\", {\n        className: \"encontaButton add-button-dashed\",\n        onClick: this.props.showPaymentMethodForm || this.showPaymentMethodForm,\n        disabled: !isAccountHolder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"mdi mdi-plus mdi-18px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"renderRegisteredCards\",\n    value: function renderRegisteredCards() {\n      var _this3 = this;\n\n      var paymentSources = this.state.paymentSources;\n      var isAccountHolder = this.state.isAccountHolder;\n      var renderListCards = '';\n\n      if (paymentSources.length > 0) {\n        renderListCards = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        }, paymentSources.map(function (card) {\n          return React.createElement(\"div\", {\n            className: \"payment-methods\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 193\n            },\n            __self: this\n          }, paymentSources.length > 1 && React.createElement(RadioButton, {\n            handleRadio: _this3.selectPaymentMethod(card.id, card.last_digits),\n            checked: card.main_card,\n            value: card.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 195\n            },\n            __self: this\n          }), React.createElement(CardThumbnail, {\n            brand: card.brand,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 205\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            className: \"payment-methods__text\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 206\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 207\n            },\n            __self: this\n          }, \"**** **** **** \".concat(card.last_digits)), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 208\n            },\n            __self: this\n          }, \"Vencimiento \".concat(card.exp_date)), !card.main_card && isAccountHolder && React.createElement(Link, {\n            onClick: function onClick() {\n              return _this3.selectPaymentMethodDelete(card.last_digits, card.id);\n            },\n            className: \"payment-methods__delete-card\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 210\n            },\n            __self: this\n          }, \"Eliminar\")));\n        }));\n      }\n\n      return renderListCards;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"subheader-green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"M\\xE9todos de pago\"), this.renderRegisteredCards(), this.renderModalChangePayment(), this.renderModalDeletePayment());\n    }\n  }]);\n\n  return PaymentMethods;\n}(Component);\n\nexport { PaymentMethods as default };","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/editUser/suscription/paymentMethods/index.js"],"names":["React","Component","Link","browserHistory","AppSignal","Modal","CardThumbnail","NotificationsActions","SuscriptionActions","SuscriptionStore","SessionStore","RadioButton","getCurrentState","paymentSources","getPaymentSourcesList","currentUser","getUser","PaymentMethods","state","selectedCard","selectedCardId","showModalDelete","showModal","isAccountHolder","_onChange","suscriptionStructure","setState","selectPaymentMethod","idCard","lastNumbers","changeEvent","selectPaymentMethodDelete","deletePaymentSource","then","success","catch","error","getCurrentEntity","rfc","addBreadcrumb","category","action","metadata","url","sendError","Error","showPaymentMethodForm","push","addChangeListener","role","removeChangeListener","makePrincipalPaymentCard","field","value","handleCancelModal","bind","togglePaymentMethod","props","renderListCards","length","map","card","id","last_digits","main_card","brand","exp_date","renderRegisteredCards","renderModalChangePayment","renderModalDeletePayment"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,cAAf,QAAqC,cAArC;AACA,OAAOC,SAAP,MAAsB,WAAtB;AAEA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AAEA,OAAOC,oBAAP,MAAiC,uBAAjC;AACA,OAAOC,kBAAP,MAA+B,qBAA/B;AAEA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;;AAEA,SAASC,eAAT,GAA4B;AAC1B,SAAO;AACLC,IAAAA,cAAc,EAAEJ,gBAAgB,CAACK,qBAAjB,EADX;AAELC,IAAAA,WAAW,EAAEL,YAAY,CAACM,OAAb;AAFR,GAAP;AAID;;IACoBC,c;;;;;;;;;;;;;;;;;UACnBC,K,qBACKN,eAAe,E;AAClBO,MAAAA,YAAY,EAAE,E;AACdC,MAAAA,cAAc,EAAE,I;AAChBC,MAAAA,eAAe,EAAE,K;AACjBC,MAAAA,SAAS,EAAE,K;AACXC,MAAAA,eAAe,EAAE;;;UAoBnBC,S,GAAY,YAAM;AAChB,UAAMC,oBAAoB,GAAGb,eAAe,EAA5C;;AACA,YAAKc,QAAL,CAAcD,oBAAd;AACD,K;;UAyBDE,mB,GAAsB,UAACC,MAAD,EAASC,WAAT;AAAA,aAAyB,UAAAC,WAAW,EAAI;AAC5D,cAAKJ,QAAL,CAAc;AACZJ,UAAAA,SAAS,EAAE,CAAC,MAAKJ,KAAL,CAAWI,SADX;AAEZH,UAAAA,YAAY,EAAEU,WAFF;AAGZT,UAAAA,cAAc,EAAEQ;AAHJ,SAAd;AAKD,OANqB;AAAA,K;;UAatBG,yB,GAA4B,UAACF,WAAD,EAAcD,MAAd,EAAyB;AACnD,YAAKF,QAAL,CAAc;AACZL,QAAAA,eAAe,EAAE,CAAC,MAAKH,KAAL,CAAWG,eADjB;AAEZF,QAAAA,YAAY,EAAEU,WAFF;AAGZT,QAAAA,cAAc,EAAEQ;AAHJ,OAAd;AAKD,K;;UAEDI,mB,GAAsB,YAAM;AAC1B,UAAMJ,MAAM,GAAG,MAAKV,KAAL,CAAWE,cAA1B;AAEAZ,MAAAA,kBAAkB,CAACwB,mBAAnB,CAAuCJ,MAAvC,EACGK,IADH,CACQ,YAAM;AACVzB,QAAAA,kBAAkB,CAACM,qBAAnB;;AAEA,cAAKY,QAAL,CAAc,UAAAR,KAAK;AAAA,iBAAK;AAAEG,YAAAA,eAAe,EAAE,CAACH,KAAK,CAACG;AAA1B,WAAL;AAAA,SAAnB;;AACAd,QAAAA,oBAAoB,CAAC2B,OAArB,CAA6B,wCAA7B;AACD,OANH,EAOGC,KAPH,CAOS,UAAAC,KAAK,EAAI;AAAA,oCACE1B,YAAY,CAAC2B,gBAAb,EADF;AAAA,YACNC,GADM,yBACNA,GADM;;AAEdlC,QAAAA,SAAS,CAACmC,aAAV,CAAwB;AACtBC,UAAAA,QAAQ,EAAE,mBADY;AAEtBC,UAAAA,MAAM,qCAFgB;AAGtBC,UAAAA,QAAQ,EAAE;AAAEJ,YAAAA,GAAG,EAAEA,GAAP;AAAYK,YAAAA,GAAG,EAAE;AAAjB;AAHY,SAAxB;AAKAvC,QAAAA,SAAS,CAACwC,SAAV,CAAoB,IAAIC,KAAJ,CAAUT,KAAV,CAApB;AACA7B,QAAAA,oBAAoB,CAAC6B,KAArB,CAA2BA,KAA3B;AACD,OAhBH;AAiBD,K;;UAEDU,qB,GAAwB,YAAM;AAC5B3C,MAAAA,cAAc,CAAC4C,IAAf,CAAoB,4CAApB;AACD,K;;;;;;;wCA1FoB;AACnBrC,MAAAA,YAAY,CAACsC,iBAAb,CAA+B,KAAKxB,SAApC;AACAf,MAAAA,gBAAgB,CAACuC,iBAAjB,CAAmC,KAAKxB,SAAxC;AACAhB,MAAAA,kBAAkB,CAACM,qBAAnB,GAA2CqB,KAA3C,CAAiD,UAAAC,KAAK,EAAI;AACxD7B,QAAAA,oBAAoB,CAAC6B,KAArB,CAA2BA,KAA3B;AACD,OAFD;AAIA,WAAKV,QAAL,CAAc,UAAAR,KAAK;AAAA,eAAK;AACtBK,UAAAA,eAAe,EAAEL,KAAK,CAACH,WAAN,CAAkBkC,IAAlB,KAA2B;AADtB,SAAL;AAAA,OAAnB;AAGD;;;2CAEuB;AACtBvC,MAAAA,YAAY,CAACwC,oBAAb,CAAkC,KAAK1B,SAAvC;AACAf,MAAAA,gBAAgB,CAACyC,oBAAjB,CAAsC,KAAK1B,SAA3C;AACD;;;0CAOsB;AAAA;;AAAA,UACbJ,cADa,GACM,KAAKF,KADX,CACbE,cADa;AAErBZ,MAAAA,kBAAkB,CAAC2C,wBAAnB,CAA4C/B,cAA5C,EACGa,IADH,CACQ,YAAM;AACV,QAAA,MAAI,CAACP,QAAL,CAAc;AAAEJ,UAAAA,SAAS,EAAE,CAAC,MAAI,CAACJ,KAAL,CAAWI;AAAzB,SAAd;;AACAf,QAAAA,oBAAoB,CAAC2B,OAArB,CAA6B,mCAA7B;AACD,OAJH,EAKGC,KALH,CAKS,UAAAC,KAAK,EAAI;AAAA,qCACE1B,YAAY,CAAC2B,gBAAb,EADF;AAAA,YACNC,GADM,0BACNA,GADM;;AAEdlC,QAAAA,SAAS,CAACmC,aAAV,CAAwB;AACtBC,UAAAA,QAAQ,EAAE,mBADY;AAEtBC,UAAAA,MAAM,oCAFgB;AAGtBC,UAAAA,QAAQ,EAAE;AAAEJ,YAAAA,GAAG,EAAEA,GAAP;AAAYK,YAAAA,GAAG,EAAE;AAAjB;AAHY,SAAxB;AAKAvC,QAAAA,SAAS,CAACwC,SAAV,CAAoB,IAAIC,KAAJ,CAAUT,KAAV,CAApB;AACA7B,QAAAA,oBAAoB,CAAC6B,KAArB,CAA2BA,KAA3B;AACD,OAdH;AAeD;;;sCAEkBgB,K,EAAOC,K,EAAO;AAC/B,WAAK3B,QAAL,qBAAiB0B,KAAjB,EAAyBC,KAAzB;AACD;;;+CAiD2B;AAAA,wBACU,KAAKnC,KADf;AAAA,UAClBC,YADkB,eAClBA,YADkB;AAAA,UACJG,SADI,eACJA,SADI;AAE1B,aACE,oBAAC,KAAD;AACE,QAAA,QAAQ,EAAEA,SADZ;AAEE,QAAA,WAAW,EAAE,KAAKgC,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,EAAkC,WAAlC,EAA+C,CAACjC,SAAhD,CAFf;AAGE,QAAA,QAAQ,EAAE,KAAKkC,mBAAL,CAAyBD,IAAzB,CAA8B,IAA9B,CAHZ;AAIE,QAAA,KAAK,EAAC,2BAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME;AAAG,QAAA,SAAS,EAAC,yEAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6HAEgBpC,YAFhB,QANF,EAUE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,uCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,6BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,iEAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mJADF,CAJF,CAVF,CADF;AAwBD;;;+CAE2B;AAAA,yBACgB,KAAKD,KADrB;AAAA,UAClBC,YADkB,gBAClBA,YADkB;AAAA,UACJE,eADI,gBACJA,eADI;AAE1B,aACE,oBAAC,KAAD;AACE,QAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWG,eADvB;AAEE,QAAA,WAAW,EAAE,KAAKiC,iBAAL,CAAuBC,IAAvB,CACX,IADW,EAEX,iBAFW,EAGX,CAAClC,eAHU,CAFf;AAOE,QAAA,QAAQ,EAAE,KAAKW,mBAAL,CAAyBuB,IAAzB,CAA8B,IAA9B,CAPZ;AAQE,QAAA,KAAK,EAAC,4BARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUE;AAAG,QAAA,SAAS,EAAC,yEAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qEACkDpC,YADlD,OAVF,CADF;AAgBD;;;mDAE+B;AAAA,UACtBI,eADsB,GACF,KAAKL,KADH,CACtBK,eADsB;AAE9B,aACE;AACE,QAAA,SAAS,EAAC,iCADZ;AAEE,QAAA,OAAO,EAAE,KAAKkC,KAAL,CAAWX,qBAAX,IAAoC,KAAKA,qBAFpD;AAGE,QAAA,QAAQ,EAAE,CAACvB,eAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE;AAAG,QAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF;AASD;;;4CAEwB;AAAA;;AAAA,UACfV,cADe,GACI,KAAKK,KADT,CACfL,cADe;AAAA,UAEfU,eAFe,GAEK,KAAKL,KAFV,CAEfK,eAFe;AAGvB,UAAImC,eAAe,GAAG,EAAtB;;AAEA,UAAI7C,cAAc,CAAC8C,MAAf,GAAwB,CAA5B,EAA+B;AAC7BD,QAAAA,eAAe,GACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG7C,cAAc,CAAC+C,GAAf,CAAmB,UAAAC,IAAI;AAAA,iBACtB;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGhD,cAAc,CAAC8C,MAAf,GAAwB,CAAxB,IACC,oBAAC,WAAD;AACE,YAAA,WAAW,EAAE,MAAI,CAAChC,mBAAL,CACXkC,IAAI,CAACC,EADM,EAEXD,IAAI,CAACE,WAFM,CADf;AAKE,YAAA,OAAO,EAAEF,IAAI,CAACG,SALhB;AAME,YAAA,KAAK,EAAEH,IAAI,CAACC,EANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAYE,oBAAC,aAAD;AAAe,YAAA,KAAK,EAAED,IAAI,CAACI,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,EAaE;AAAK,YAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAsBJ,IAAI,CAACE,WAA3B,EADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAmBF,IAAI,CAACK,QAAxB,EAFF,EAGG,CAACL,IAAI,CAACG,SAAN,IAAmBzC,eAAnB,IACC,oBAAC,IAAD;AACE,YAAA,OAAO,EAAE;AAAA,qBACP,MAAI,CAACQ,yBAAL,CAA+B8B,IAAI,CAACE,WAApC,EAAiDF,IAAI,CAACC,EAAtD,CADO;AAAA,aADX;AAIE,YAAA,SAAS,EAAC,8BAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJJ,CAbF,CADsB;AAAA,SAAvB,CADH,CADF;AAkCD;;AACD,aAAOJ,eAAP;AACD;;;6BAES;AACR,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEG,KAAKS,qBAAL,EAFH,EAGG,KAAKC,wBAAL,EAHH,EAIG,KAAKC,wBAAL,EAJH,CADF;AAQD;;;;EAxNyCpE,S;;SAAvBgB,c","sourcesContent":["import React, { Component } from 'react'\nimport { Link, browserHistory } from 'react-router'\nimport AppSignal from 'appsignal'\n\nimport Modal from 'shared/modal'\nimport CardThumbnail from 'shared/cardThumbnail'\n\nimport NotificationsActions from 'actions/notifications'\nimport SuscriptionActions from 'actions/suscription'\n\nimport SuscriptionStore from 'stores/suscription'\nimport SessionStore from 'stores/session'\nimport RadioButton from 'shared/radioButton'\n\nfunction getCurrentState () {\n  return {\n    paymentSources: SuscriptionStore.getPaymentSourcesList(),\n    currentUser: SessionStore.getUser()\n  }\n}\nexport default class PaymentMethods extends Component {\n  state = {\n    ...getCurrentState(),\n    selectedCard: '',\n    selectedCardId: null,\n    showModalDelete: false,\n    showModal: false,\n    isAccountHolder: false\n  }\n\n  componentDidMount () {\n    SessionStore.addChangeListener(this._onChange)\n    SuscriptionStore.addChangeListener(this._onChange)\n    SuscriptionActions.getPaymentSourcesList().catch(error => {\n      NotificationsActions.error(error)\n    })\n\n    this.setState(state => ({\n      isAccountHolder: state.currentUser.role === 'account_holder'\n    }))\n  }\n\n  componentWillUnmount () {\n    SessionStore.removeChangeListener(this._onChange)\n    SuscriptionStore.removeChangeListener(this._onChange)\n  }\n\n  _onChange = () => {\n    const suscriptionStructure = getCurrentState()\n    this.setState(suscriptionStructure)\n  }\n\n  togglePaymentMethod () {\n    const { selectedCardId } = this.state\n    SuscriptionActions.makePrincipalPaymentCard(selectedCardId)\n      .then(() => {\n        this.setState({ showModal: !this.state.showModal })\n        NotificationsActions.success('Cambio de método de pago exitoso.')\n      })\n      .catch(error => {\n        const { rfc } = SessionStore.getCurrentEntity()\n        AppSignal.addBreadcrumb({\n          category: 'Pasarela de pagos',\n          action: `Error: Cambiar método de pago`,\n          metadata: { rfc: rfc, url: '/mi-cuenta/suscripcion' }\n        })\n        AppSignal.sendError(new Error(error))\n        NotificationsActions.error(error)\n      })\n  }\n\n  handleCancelModal (field, value) {\n    this.setState({ [field]: value })\n  }\n\n  selectPaymentMethod = (idCard, lastNumbers) => changeEvent => {\n    this.setState({\n      showModal: !this.state.showModal,\n      selectedCard: lastNumbers,\n      selectedCardId: idCard\n    })\n  }\n\n  /**\n   * Show the confirmation modal and save in the state\n   * the possible new payment method\n   * @param {string} lastNumbers\n   */\n  selectPaymentMethodDelete = (lastNumbers, idCard) => {\n    this.setState({\n      showModalDelete: !this.state.showModalDelete,\n      selectedCard: lastNumbers,\n      selectedCardId: idCard\n    })\n  }\n\n  deletePaymentSource = () => {\n    const idCard = this.state.selectedCardId\n\n    SuscriptionActions.deletePaymentSource(idCard)\n      .then(() => {\n        SuscriptionActions.getPaymentSourcesList()\n\n        this.setState(state => ({ showModalDelete: !state.showModalDelete }))\n        NotificationsActions.success('Método de pago eliminado exitosamente.')\n      })\n      .catch(error => {\n        const { rfc } = SessionStore.getCurrentEntity()\n        AppSignal.addBreadcrumb({\n          category: 'Pasarela de pagos',\n          action: `Error: Eliminar método de pago`,\n          metadata: { rfc: rfc, url: '/mi-cuenta/suscripcion' }\n        })\n        AppSignal.sendError(new Error(error))\n        NotificationsActions.error(error)\n      })\n  }\n\n  showPaymentMethodForm = () => {\n    browserHistory.push('/mi-cuenta/suscripcion/agregar-metodo-pago')\n  }\n\n  renderModalChangePayment () {\n    const { selectedCard, showModal } = this.state\n    return (\n      <Modal\n        isActive={showModal}\n        toggleModal={this.handleCancelModal.bind(this, 'showModal', !showModal)}\n        onSubmit={this.togglePaymentMethod.bind(this)}\n        title='Cambiar método de pago'\n      >\n        <p className='paragraph-info paragraph-info--black paragraph-info--margin-bottom-22px'>\n          {`¿Estás seguro que quieres cambiar tu método de pago por la tarjeta con\n          terminación ${selectedCard} ?`}\n        </p>\n        <div className='columns'>\n          <div className='column is-narrow is-padding-rightless'>\n            <i className='mdi mdi-information-outline' />\n          </div>\n          <div className='column'>\n            <p className='paragraph-info paragraph-info--font-12px paragraph-info--italic'>\n              Enconta cobrará de forma automática y mensual por este medio hasta\n              que cambies tu método de pago o canceles tu suscripción.\n            </p>\n          </div>\n        </div>\n      </Modal>\n    )\n  }\n\n  renderModalDeletePayment () {\n    const { selectedCard, showModalDelete } = this.state\n    return (\n      <Modal\n        isActive={this.state.showModalDelete}\n        toggleModal={this.handleCancelModal.bind(\n          this,\n          'showModalDelete',\n          !showModalDelete\n        )}\n        onSubmit={this.deletePaymentSource.bind(this)}\n        title='Eliminar método de pago'\n      >\n        <p className='paragraph-info paragraph-info--black paragraph-info--margin-bottom-22px'>\n          {`¿Deseas eliminar la tarjeta con terminación ${selectedCard}?`}\n        </p>\n      </Modal>\n    )\n  }\n\n  renderButtonNewPaymentMethod () {\n    const { isAccountHolder } = this.state\n    return (\n      <button\n        className='encontaButton add-button-dashed'\n        onClick={this.props.showPaymentMethodForm || this.showPaymentMethodForm}\n        disabled={!isAccountHolder}\n      >\n        <i className='mdi mdi-plus mdi-18px' />\n      </button>\n    )\n  }\n\n  renderRegisteredCards () {\n    const { paymentSources } = this.state\n    const { isAccountHolder } = this.state\n    let renderListCards = ''\n\n    if (paymentSources.length > 0) {\n      renderListCards = (\n        <div>\n          {paymentSources.map(card => (\n            <div className='payment-methods'>\n              {paymentSources.length > 1 && (\n                <RadioButton\n                  handleRadio={this.selectPaymentMethod(\n                    card.id,\n                    card.last_digits\n                  )}\n                  checked={card.main_card}\n                  value={card.id}\n                />\n              )}\n\n              <CardThumbnail brand={card.brand} />\n              <div className='payment-methods__text'>\n                <p>{`**** **** **** ${card.last_digits}`}</p>\n                <p>{`Vencimiento ${card.exp_date}`}</p>\n                {!card.main_card && isAccountHolder && (\n                  <Link\n                    onClick={() =>\n                      this.selectPaymentMethodDelete(card.last_digits, card.id)\n                    }\n                    className='payment-methods__delete-card'\n                  >\n                    Eliminar\n                  </Link>\n                )}\n              </div>\n            </div>\n          ))}\n        </div>\n      )\n    }\n    return renderListCards\n  }\n\n  render () {\n    return (\n      <div>\n        <p className='subheader-green'>Métodos de pago</p>\n        {this.renderRegisteredCards()}\n        {this.renderModalChangePayment()}\n        {this.renderModalDeletePayment()}\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}