{"ast":null,"code":"import _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/accountingPeriods/taxStatement/index.js\";\n// Libraries\nimport React, { Component, Fragment } from 'react';\nimport classNames from 'classnames';\nimport AppSignal from 'appsignal'; // Components\n\nimport NotificationActions from 'actions/notifications';\nimport EmptyState from 'shared/emptyState';\nimport Loading from 'shared/loading';\nimport TaxStatementDetails from '../taxStatement/taxStatementDetails';\nimport { formatCurrency, prettyDate, isExpired } from 'utils';\nimport { STATEMENT_TYPES } from 'shared/catalogs';\nimport IconButton from 'shared/iconButton';\nimport moment from 'moment';\nimport API from 'api';\n\nvar TaxStatements =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TaxStatements, _Component);\n\n  function TaxStatements() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TaxStatements);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TaxStatements)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      taxStatements: [],\n      requestInProgress: false\n    };\n\n    _this.toggleAccordion = function (id) {\n      _this.setState(function (state) {\n        var taxStatements = state.taxStatements;\n        var updatedTaxStatements = taxStatements.map(function (statement) {\n          if (statement.id === id) {\n            statement.isOpen = !statement.isOpen;\n          }\n\n          return statement;\n        });\n        return {\n          taxStatements: updatedTaxStatements\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(TaxStatements, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getTaxStatements();\n    }\n    /**\n     * Hides or shows the tax statement details accordion\n     * @param {Number} id\n     */\n\n  }, {\n    key: \"getTaxStatements\",\n\n    /**\n     * Get tax statements list from api and add the attribute is Open in false\n     * to handle the toggle in each accordion\n     */\n    value: function getTaxStatements() {\n      var _this2 = this;\n\n      var period = this.props.period;\n      this.setState({\n        requestInProgress: true\n      });\n      API.TaxStatements.List(period.id).then(function (_ref) {\n        var taxStatements = _ref.tax_statements;\n        var modifiedTaxStatements = taxStatements.map(function (taxStatement) {\n          taxStatement['isOpen'] = false;\n          return taxStatement;\n        });\n\n        _this2.setState({\n          taxStatements: modifiedTaxStatements,\n          requestInProgress: false\n        });\n      }).catch(function (error) {\n        AppSignal.sendError(error);\n        NotificationActions.error(error);\n\n        _this2.setState({\n          requestInProgress: false\n        });\n      });\n    } // Render list taxStatements\n\n  }, {\n    key: \"renderList\",\n    value: function renderList() {\n      var _this3 = this;\n\n      var taxStatements = this.state.taxStatements;\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, taxStatements.length === 0 ? React.createElement(EmptyState, {\n        icon: 'folder-clock-outline',\n        mainText: 'Estamos presentando tu declaración',\n        secondText: 'Te notificaremos vía correo cuando esté lista.',\n        style: 'accounting-style',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }) : React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, taxStatements.map(function (taxStatement) {\n        var statementType = STATEMENT_TYPES.find(function (type) {\n          return taxStatement.statement_type === type.id;\n        }).label;\n        var statusExpiration = isExpired(moment(taxStatement.expires_on));\n        return React.createElement(\"div\", {\n          className: \"accordion accordion--dark-gray\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, !taxStatement.tax_statement_valid && React.createElement(\"p\", {\n          className: \"accordion__message\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, \"Declaraci\\xF3n invalidada\"), React.createElement(\"header\", {\n          className: \"accordion__header\",\n          onClick: function onClick() {\n            return _this3.toggleAccordion(taxStatement.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"accordion__header__title is-fullwidth\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"columns is-fullwidth\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"column is-4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, \"Declaraci\\xF3n - \".concat(statementType))), React.createElement(\"div\", {\n          className: \"column is-5\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"body-regular body-regular--color-grey-darker\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, \"L\\xEDnea de captura:\", React.createElement(\"span\", {\n          className: classNames('body-regular__highlight', {\n            'body-regular__highlight--turquoise': !statusExpiration\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, ' ', taxStatement.capture_line === 'No aplica' ? taxStatement.capture_line : statusExpiration ? 'Vencida' : taxStatement.capture_line)), React.createElement(\"p\", {\n          className: \"body-regular body-regular--color-grey-darker\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, \"L\\xEDmite de pago:\", ' ', React.createElement(\"span\", {\n          className: \"body-regular__highlight\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, taxStatement.capture_line === 'No aplica' ? '---' : prettyDate(taxStatement.payment_due_date, '', true, false, '-')))), React.createElement(\"div\", {\n          className: \"column is-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"accordion__header__title__total\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, \"Por pagar:\", ' ', React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, formatCurrency(taxStatement.amount)))))), React.createElement(\"div\", {\n          className: \"accordion__header__icons\",\n          onClick: function onClick() {\n            return _this3.toggleAccordion(taxStatement.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          icon: taxStatement.isOpen ? 'menu-up' : 'menu-down',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }))), taxStatement.isOpen && React.createElement(TaxStatementDetails, {\n          taxStatementDetails: taxStatement,\n          statusExpiration: statusExpiration,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }));\n      })));\n    } // Main render\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var requestInProgress = this.state.requestInProgress;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, requestInProgress ? React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }) : this.renderList());\n    }\n  }]);\n\n  return TaxStatements;\n}(Component);\n\nexport { TaxStatements as default };","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/accountingPeriods/taxStatement/index.js"],"names":["React","Component","Fragment","classNames","AppSignal","NotificationActions","EmptyState","Loading","TaxStatementDetails","formatCurrency","prettyDate","isExpired","STATEMENT_TYPES","IconButton","moment","API","TaxStatements","state","taxStatements","requestInProgress","toggleAccordion","id","setState","updatedTaxStatements","map","statement","isOpen","getTaxStatements","period","props","List","then","tax_statements","modifiedTaxStatements","taxStatement","catch","error","sendError","length","statementType","find","type","statement_type","label","statusExpiration","expires_on","tax_statement_valid","capture_line","payment_due_date","amount","renderList"],"mappings":";;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,WAAtB,C,CAEA;;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AAEA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,mBAAP,MAAgC,qCAAhC;AACA,SAASC,cAAT,EAAyBC,UAAzB,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,eAAT,QAAgC,iBAAhC;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,GAAP,MAAgB,KAAhB;;IAEqBC,a;;;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,aAAa,EAAE,EADT;AAENC,MAAAA,iBAAiB,EAAE;AAFb,K;;UAaRC,e,GAAkB,UAAAC,EAAE,EAAI;AACtB,YAAKC,QAAL,CAAc,UAAAL,KAAK,EAAI;AAAA,YACbC,aADa,GACKD,KADL,CACbC,aADa;AAErB,YAAMK,oBAAoB,GAAGL,aAAa,CAACM,GAAd,CAAkB,UAAAC,SAAS,EAAI;AAC1D,cAAIA,SAAS,CAACJ,EAAV,KAAiBA,EAArB,EAAyB;AACvBI,YAAAA,SAAS,CAACC,MAAV,GAAmB,CAACD,SAAS,CAACC,MAA9B;AACD;;AACD,iBAAOD,SAAP;AACD,SAL4B,CAA7B;AAMA,eAAO;AACLP,UAAAA,aAAa,EAAEK;AADV,SAAP;AAGD,OAXD;AAYD,K;;;;;;;wCArBoB;AACnB,WAAKI,gBAAL;AACD;AAED;;;;;;;;AAmBA;;;;uCAIoB;AAAA;;AAAA,UACVC,MADU,GACC,KAAKC,KADN,CACVD,MADU;AAElB,WAAKN,QAAL,CAAc;AAAEH,QAAAA,iBAAiB,EAAE;AAArB,OAAd;AACAJ,MAAAA,GAAG,CAACC,aAAJ,CAAkBc,IAAlB,CAAuBF,MAAM,CAACP,EAA9B,EACGU,IADH,CACQ,gBAAuC;AAAA,YAApBb,aAAoB,QAApCc,cAAoC;AAC3C,YAAMC,qBAAqB,GAAGf,aAAa,CAACM,GAAd,CAAkB,UAAAU,YAAY,EAAI;AAC9DA,UAAAA,YAAY,CAAC,QAAD,CAAZ,GAAyB,KAAzB;AACA,iBAAOA,YAAP;AACD,SAH6B,CAA9B;;AAKA,QAAA,MAAI,CAACZ,QAAL,CAAc;AACZJ,UAAAA,aAAa,EAAEe,qBADH;AAEZd,UAAAA,iBAAiB,EAAE;AAFP,SAAd;AAID,OAXH,EAYGgB,KAZH,CAYS,UAAAC,KAAK,EAAI;AACdhC,QAAAA,SAAS,CAACiC,SAAV,CAAoBD,KAApB;AACA/B,QAAAA,mBAAmB,CAAC+B,KAApB,CAA0BA,KAA1B;;AACA,QAAA,MAAI,CAACd,QAAL,CAAc;AAAEH,UAAAA,iBAAiB,EAAE;AAArB,SAAd;AACD,OAhBH;AAiBD,K,CAED;;;;iCACc;AAAA;;AAAA,UACJD,aADI,GACc,KAAKD,KADnB,CACJC,aADI;AAGZ,aACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,aAAa,CAACoB,MAAd,KAAyB,CAAzB,GACC,oBAAC,UAAD;AACE,QAAA,IAAI,EAAE,sBADR;AAEE,QAAA,QAAQ,EAAE,oCAFZ;AAGE,QAAA,UAAU,EAAE,gDAHd;AAIE,QAAA,KAAK,EAAE,kBAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,GAQC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGpB,aAAa,CAACM,GAAd,CAAkB,UAAAU,YAAY,EAAI;AACjC,YAAMK,aAAa,GAAG3B,eAAe,CAAC4B,IAAhB,CACpB,UAAAC,IAAI;AAAA,iBAAIP,YAAY,CAACQ,cAAb,KAAgCD,IAAI,CAACpB,EAAzC;AAAA,SADgB,EAEpBsB,KAFF;AAIA,YAAMC,gBAAgB,GAAGjC,SAAS,CAChCG,MAAM,CAACoB,YAAY,CAACW,UAAd,CAD0B,CAAlC;AAIA,eACE;AAAK,UAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,CAACX,YAAY,CAACY,mBAAd,IACC;AAAG,UAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAFJ,EAIE;AACE,UAAA,SAAS,EAAC,mBADZ;AAEE,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAAC1B,eAAL,CAAqBc,YAAY,CAACb,EAAlC,CAAN;AAAA,WAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIE;AAAK,UAAA,SAAS,EAAC,uCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAqBkB,aAArB,EADF,CADF,EAIE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,SAAS,EAAC,8CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAEE;AACE,UAAA,SAAS,EAAEpC,UAAU,CAAC,yBAAD,EAA4B;AAC/C,kDAAsC,CAACyC;AADQ,WAA5B,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKG,GALH,EAMGV,YAAY,CAACa,YAAb,KAA8B,WAA9B,GACGb,YAAY,CAACa,YADhB,GAEGH,gBAAgB,GACd,SADc,GAEdV,YAAY,CAACa,YAVrB,CAFF,CADF,EAgBE;AAAG,UAAA,SAAS,EAAC,8CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACkB,GADlB,EAEE;AAAM,UAAA,SAAS,EAAC,yBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGb,YAAY,CAACa,YAAb,KAA8B,WAA9B,GACG,KADH,GAEGrC,UAAU,CACVwB,YAAY,CAACc,gBADH,EAEV,EAFU,EAGV,IAHU,EAIV,KAJU,EAKV,GALU,CAHhB,CAFF,CAhBF,CAJF,EAmCE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,SAAS,EAAC,iCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACa,GADb,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOvC,cAAc,CAACyB,YAAY,CAACe,MAAd,CAArB,CAFF,CADF,CAnCF,CADF,CAJF,EAgDE;AACE,UAAA,SAAS,EAAC,0BADZ;AAEE,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAAC7B,eAAL,CAAqBc,YAAY,CAACb,EAAlC,CAAN;AAAA,WAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIE,oBAAC,UAAD;AACE,UAAA,IAAI,EAAEa,YAAY,CAACR,MAAb,GAAsB,SAAtB,GAAkC,WAD1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,CAhDF,CAJF,EA6DGQ,YAAY,CAACR,MAAb,IACC,oBAAC,mBAAD;AACE,UAAA,mBAAmB,EAAEQ,YADvB;AAEE,UAAA,gBAAgB,EAAEU,gBAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UA9DJ,CADF;AAsED,OA/EA,CADH,CATJ,CADF;AA+FD,K,CACD;;;;6BACU;AAAA,UACAzB,iBADA,GACsB,KAAKF,KAD3B,CACAE,iBADA;AAER,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMA,iBAAiB,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,GAAiB,KAAK+B,UAAL,EAAxC,CAAP;AACD;;;;EA/JwCjD,S;;SAAtBe,a","sourcesContent":["// Libraries\nimport React, { Component, Fragment } from 'react'\nimport classNames from 'classnames'\nimport AppSignal from 'appsignal'\n\n// Components\nimport NotificationActions from 'actions/notifications'\nimport EmptyState from 'shared/emptyState'\n\nimport Loading from 'shared/loading'\nimport TaxStatementDetails from '../taxStatement/taxStatementDetails'\nimport { formatCurrency, prettyDate, isExpired } from 'utils'\nimport { STATEMENT_TYPES } from 'shared/catalogs'\nimport IconButton from 'shared/iconButton'\nimport moment from 'moment'\nimport API from 'api'\n\nexport default class TaxStatements extends Component {\n  state = {\n    taxStatements: [],\n    requestInProgress: false\n  }\n\n  componentDidMount () {\n    this.getTaxStatements()\n  }\n\n  /**\n   * Hides or shows the tax statement details accordion\n   * @param {Number} id\n   */\n  toggleAccordion = id => {\n    this.setState(state => {\n      const { taxStatements } = state\n      const updatedTaxStatements = taxStatements.map(statement => {\n        if (statement.id === id) {\n          statement.isOpen = !statement.isOpen\n        }\n        return statement\n      })\n      return {\n        taxStatements: updatedTaxStatements\n      }\n    })\n  }\n\n  /**\n   * Get tax statements list from api and add the attribute is Open in false\n   * to handle the toggle in each accordion\n   */\n  getTaxStatements () {\n    const { period } = this.props\n    this.setState({ requestInProgress: true })\n    API.TaxStatements.List(period.id)\n      .then(({ tax_statements: taxStatements }) => {\n        const modifiedTaxStatements = taxStatements.map(taxStatement => {\n          taxStatement['isOpen'] = false\n          return taxStatement\n        })\n\n        this.setState({\n          taxStatements: modifiedTaxStatements,\n          requestInProgress: false\n        })\n      })\n      .catch(error => {\n        AppSignal.sendError(error)\n        NotificationActions.error(error)\n        this.setState({ requestInProgress: false })\n      })\n  }\n\n  // Render list taxStatements\n  renderList () {\n    const { taxStatements } = this.state\n\n    return (\n      <Fragment>\n        {taxStatements.length === 0 ? (\n          <EmptyState\n            icon={'folder-clock-outline'}\n            mainText={'Estamos presentando tu declaración'}\n            secondText={'Te notificaremos vía correo cuando esté lista.'}\n            style={'accounting-style'}\n          />\n        ) : (\n          <Fragment>\n            {taxStatements.map(taxStatement => {\n              const statementType = STATEMENT_TYPES.find(\n                type => taxStatement.statement_type === type.id\n              ).label\n\n              const statusExpiration = isExpired(\n                moment(taxStatement.expires_on)\n              )\n\n              return (\n                <div className='accordion accordion--dark-gray'>\n                  {!taxStatement.tax_statement_valid && (\n                    <p className='accordion__message'>Declaración invalidada</p>\n                  )}\n                  <header\n                    className='accordion__header'\n                    onClick={() => this.toggleAccordion(taxStatement.id)}\n                  >\n                    <div className='accordion__header__title is-fullwidth'>\n                      <div className='columns is-fullwidth'>\n                        <div className='column is-4'>\n                          <p>{`Declaración - ${statementType}`}</p>\n                        </div>\n                        <div className='column is-5'>\n                          <p className='body-regular body-regular--color-grey-darker'>\n                            Línea de captura:\n                            <span\n                              className={classNames('body-regular__highlight', {\n                                'body-regular__highlight--turquoise': !statusExpiration\n                              })}\n                            >\n                              {' '}\n                              {taxStatement.capture_line === 'No aplica'\n                                ? taxStatement.capture_line\n                                : statusExpiration\n                                  ? 'Vencida'\n                                  : taxStatement.capture_line}\n                            </span>\n                          </p>\n                          <p className='body-regular body-regular--color-grey-darker'>\n                            Límite de pago:{' '}\n                            <span className='body-regular__highlight'>\n                              {taxStatement.capture_line === 'No aplica'\n                                ? '---'\n                                : prettyDate(\n                                  taxStatement.payment_due_date,\n                                  '',\n                                  true,\n                                  false,\n                                  '-'\n                                )}\n                            </span>\n                          </p>\n                        </div>\n                        <div className='column is-3'>\n                          <p className='accordion__header__title__total'>\n                            Por pagar:{' '}\n                            <span>{formatCurrency(taxStatement.amount)}</span>\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                    <div\n                      className='accordion__header__icons'\n                      onClick={() => this.toggleAccordion(taxStatement.id)}\n                    >\n                      <IconButton\n                        icon={taxStatement.isOpen ? 'menu-up' : 'menu-down'}\n                      />\n                    </div>\n                  </header>\n                  {taxStatement.isOpen && (\n                    <TaxStatementDetails\n                      taxStatementDetails={taxStatement}\n                      statusExpiration={statusExpiration}\n                    />\n                  )}\n                </div>\n              )\n            })}\n          </Fragment>\n        )}\n      </Fragment>\n    )\n  }\n  // Main render\n  render () {\n    const { requestInProgress } = this.state\n    return <div>{requestInProgress ? <Loading /> : this.renderList()}</div>\n  }\n}\n"]},"metadata":{},"sourceType":"module"}