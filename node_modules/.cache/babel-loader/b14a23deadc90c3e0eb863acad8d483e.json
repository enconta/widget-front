{"ast":null,"code":"var _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/shared/filter/selectOption.js\";\n// Libraries\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Async } from 'react-select'; // Components\n\nimport SelectField from 'shared/selectField';\n/**\n * Select Option is a small pieze of filters\n *\n * It has two ways using regularSelect propertie, by default is true and shows a normal Dropdown.\n * When is false, it will use the write and search options.\n *\n * @param {*} props\n */\n\nvar SelectOptions = function SelectOptions(props) {\n  var mainLabel = props.mainLabel,\n      options = props.options,\n      handleSelect = props.handleSelect,\n      value = props.value,\n      placeholder = props.placeholder,\n      regularSelect = props.regularSelect,\n      configAutoComplete = props.configAutoComplete;\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"filter__caption\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, mainLabel), regularSelect ? React.createElement(SelectField, {\n    options: options,\n    value: value,\n    onChange: handleSelect,\n    placeholder: placeholder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }) : showAutoCompleteSelect(configAutoComplete));\n};\n\nvar showAutoCompleteSelect = function showAutoCompleteSelect(_ref) {\n  var placeholder = _ref.placeholder,\n      loadingPlaceholder = _ref.loadingPlaceholder,\n      searchText = _ref.searchText,\n      noResultsText = _ref.noResultsText,\n      options = _ref.options,\n      value = _ref.value,\n      handleSelect = _ref.handleSelect;\n  return React.createElement(\"div\", {\n    className: \"control has-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Async, {\n    placeholder: placeholder,\n    loadingPlaceholder: loadingPlaceholder,\n    searchPromptText: searchText,\n    noResultsText: noResultsText,\n    loadOptions: options,\n    value: value,\n    onChange: handleSelect,\n    ignoreAccents: false,\n    clearable: true,\n    filterOptions: function filterOptions(options) {\n      return options;\n    },\n    autoload: true,\n    cache: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }));\n};\n\nexport default SelectOptions;\nSelectOptions.propTypes = {\n  mainLabel: PropTypes.string.isRequired,\n  options: PropTypes.array.isRequired,\n  handleSelect: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  regularSelect: PropTypes.bool,\n  configAutoComplete: PropTypes.object,\n  clear: PropTypes.func.isRequired\n};\nSelectOptions.defaultProps = {\n  mainLabel: '',\n  options: [],\n  handleSelect: function handleSelect() {},\n  value: '',\n  placeholder: 'Seleccionar',\n  regularSelect: true,\n  configAutoComplete: {},\n  clear: function clear() {}\n};","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/shared/filter/selectOption.js"],"names":["React","Fragment","PropTypes","Async","SelectField","SelectOptions","props","mainLabel","options","handleSelect","value","placeholder","regularSelect","configAutoComplete","showAutoCompleteSelect","loadingPlaceholder","searchText","noResultsText","propTypes","string","isRequired","array","func","bool","object","clear","defaultProps"],"mappings":"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","sourcesContent":["// Libraries\nimport React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { Async } from 'react-select'\n\n// Components\nimport SelectField from 'shared/selectField'\n\n/**\n * Select Option is a small pieze of filters\n *\n * It has two ways using regularSelect propertie, by default is true and shows a normal Dropdown.\n * When is false, it will use the write and search options.\n *\n * @param {*} props\n */\nconst SelectOptions = props => {\n  const {\n    mainLabel,\n    options,\n    handleSelect,\n    value,\n    placeholder,\n    regularSelect,\n    configAutoComplete\n  } = props\n  return (\n    <Fragment>\n      <p className='filter__caption'>{mainLabel}</p>\n      {regularSelect ? (\n        <SelectField\n          options={options}\n          value={value}\n          onChange={handleSelect}\n          placeholder={placeholder}\n        />\n      ) : (\n        showAutoCompleteSelect(configAutoComplete)\n      )}\n    </Fragment>\n  )\n}\n\nconst showAutoCompleteSelect = ({\n  placeholder,\n  loadingPlaceholder,\n  searchText,\n  noResultsText,\n  options,\n  value,\n  handleSelect\n}) => {\n  return (\n    <div className='control has-info'>\n      <Async\n        placeholder={placeholder}\n        loadingPlaceholder={loadingPlaceholder}\n        searchPromptText={searchText}\n        noResultsText={noResultsText}\n        loadOptions={options}\n        value={value}\n        onChange={handleSelect}\n        ignoreAccents={false}\n        clearable\n        filterOptions={options => options}\n        autoload\n        cache={false}\n      />\n    </div>\n  )\n}\n\nexport default SelectOptions\n\nSelectOptions.propTypes = {\n  mainLabel: PropTypes.string.isRequired,\n  options: PropTypes.array.isRequired,\n  handleSelect: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  regularSelect: PropTypes.bool,\n  configAutoComplete: PropTypes.object,\n  clear: PropTypes.func.isRequired\n}\n\nSelectOptions.defaultProps = {\n  mainLabel: '',\n  options: [],\n  handleSelect: () => {},\n  value: '',\n  placeholder: 'Seleccionar',\n  regularSelect: true,\n  configAutoComplete: {},\n  clear: () => {}\n}\n"]},"metadata":{},"sourceType":"module"}