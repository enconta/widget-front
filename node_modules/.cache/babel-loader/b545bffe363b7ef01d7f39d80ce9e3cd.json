{"ast":null,"code":"import _defineProperty from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/accountingPeriods/uploadStatements/index.js\";\nimport React, { Component } from 'react';\nimport API from 'api';\nimport Tabs from 'shared/tabs';\nimport Loading from 'shared/loading';\nimport AssignmentCard from './AssignmentCard';\nimport NotificationsActions from 'actions/notifications';\nimport moment from 'moment';\nimport { formatFile, ascendingOrder } from 'utils';\nimport IconButton from 'shared/iconButton';\nimport classNames from 'classnames';\nimport AccountingPeriodsActions from 'actions/accountingPeriods';\nimport AppSignal from 'appsignal';\nimport { Link } from 'react-router';\nexport var createAssignments = function createAssignments(_ref, index) {\n  var assignments = _ref.assignments;\n  return {\n    main: {\n      name: assignments[index].name,\n      attached_file: assignments[index].attached_file,\n      content_type: assignments[index].content_type,\n      original_filename: assignments[index].original_filename\n    },\n    complement: {\n      name: assignments[index].name_extra_file,\n      attached_file: assignments[index].attached_extra_file,\n      content_type: assignments[index].content_type_extra_file,\n      original_filename: assignments[index].original_filename_extra\n    }\n  };\n};\nexport var createAssignmentsWithOneFile = function createAssignmentsWithOneFile(_ref2, index) {\n  var assignments = _ref2.assignments;\n  return {\n    main: {\n      name: assignments[index].name,\n      attached_file: assignments[index].attached_file,\n      content_type: assignments[index].content_type,\n      original_filename: assignments[index].original_filename\n    }\n  };\n};\nvar TabList = Tabs.TabList,\n    Tab = Tabs.Tab,\n    TabPanels = Tabs.TabPanels,\n    TabPanel = Tabs.TabPanel;\n\nvar formatMonth = function formatMonth(month) {\n  return moment({\n    month: month - 1\n  }).format('MMMM');\n};\n/**\n * get array of assigment months\n * @param {number[]} months\n * @param {Assignment} assigment\n */\n\n\nvar pickMonths = function pickMonths(months, _ref3) {\n  var month = _ref3.month;\n\n  if (!months.includes(month)) {\n    months.push(month);\n  }\n\n  return months;\n};\n/**\n * @typedef {import('api').Assignment} Assignment\n * @typedef {import('api').AccountingPeriod} AccountingPeriod\n * @typedef {{period: AccountingPeriod,isOpen: boolean}} Props\n * @typedef {{ assignments: Assignment[] | null }} State\n * @extends {Component<Props, State>}\n */\n\n\nvar UploadStatements =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UploadStatements, _Component);\n\n  function UploadStatements() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UploadStatements);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UploadStatements)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      assignments: null,\n      isOpen: _this.props.isOpen\n    };\n    _this.getAssigments =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var period, _ref5, assignments;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              period = _this.props.period;\n              _context.next = 3;\n              return API.AccountingPeriods.GetAssigments(period.id);\n\n            case 3:\n              _ref5 = _context.sent;\n              assignments = _ref5.assignments;\n\n              _this.setState({\n                assignments: assignments\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.replaceFile =\n    /*#__PURE__*/\n    function () {\n      var _ref6 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(index, file) {\n        var _ref7, file64, name, contentType;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return formatFile([file]);\n\n              case 2:\n                _ref7 = _context2.sent;\n                file64 = _ref7.file64;\n                name = _ref7.name;\n                contentType = _ref7.contentType;\n\n                _this.setState(function (_ref8) {\n                  var assignments = _ref8.assignments;\n                  if (!assignments) return null;\n                  return {\n                    assignments: Object.assign([], assignments, _defineProperty({}, index, _objectSpread({}, assignments[index], {\n                      main: {\n                        upload_status: 'filled',\n                        approved: null,\n                        bank_statement: {\n                          filename: name\n                        }\n                      },\n                      name: name,\n                      attached_file: file64,\n                      original_filename: name,\n                      content_type: contentType,\n                      addedFirstFile: true,\n                      addedSecondFile: false\n                    })))\n                  };\n                });\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x, _x2) {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n\n    _this.replaceExtraFile =\n    /*#__PURE__*/\n    function () {\n      var _ref9 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(index, file) {\n        var _ref10, file64, name, contentType;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return formatFile([file]);\n\n              case 2:\n                _ref10 = _context3.sent;\n                file64 = _ref10.file64;\n                name = _ref10.name;\n                contentType = _ref10.contentType;\n\n                _this.setState(function (_ref11) {\n                  var assignments = _ref11.assignments;\n                  if (!assignments) return null;\n                  return {\n                    assignments: Object.assign([], assignments, _defineProperty({}, index, _objectSpread({}, assignments[index], {\n                      complement: {\n                        upload_status: 'filled',\n                        approved: null,\n                        bank_statement: {\n                          filename: name\n                        }\n                      },\n                      name_extra_file: name,\n                      attached_extra_file: file64,\n                      original_filename_extra: name,\n                      content_type_extra_file: contentType\n                    })))\n                  };\n                });\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3, _x4) {\n        return _ref9.apply(this, arguments);\n      };\n    }();\n\n    _this.deleteZone = function (index) {\n      _this.setState(function (_ref12) {\n        var assignments = _ref12.assignments;\n        return {\n          assignments: Object.assign([], assignments, _defineProperty({}, index, _objectSpread({}, assignments[index], {\n            main: {\n              upload_status: 'zone_deleted',\n              bank_statement: {\n                url: ''\n              }\n            },\n            attached_file: null,\n            original_filename: null,\n            content_type: null,\n            name: null\n          })))\n        };\n      });\n    };\n\n    _this.deleteExtraZone =\n    /*#__PURE__*/\n    function () {\n      var _ref13 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(index) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _this.setState(function (_ref14) {\n                  var assignments = _ref14.assignments;\n                  return {\n                    assignments: Object.assign([], assignments, _defineProperty({}, index, _objectSpread({}, assignments[index], {\n                      complement: {\n                        bank_statement: {\n                          filename: null\n                        }\n                      },\n                      upload_status_extra_file: null,\n                      original_filename_extra: null,\n                      name_extra_file: null,\n                      attached_extra_file: null,\n                      content_type_extra_file: null,\n                      addedSecondFile: false\n                    })))\n                  };\n                });\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x5) {\n        return _ref13.apply(this, arguments);\n      };\n    }();\n\n    _this.setStatementExtraFile =\n    /*#__PURE__*/\n    function () {\n      var _ref15 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(index, file) {\n        var _ref16, file64, name, contentType;\n\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return formatFile(file);\n\n              case 2:\n                _ref16 = _context5.sent;\n                file64 = _ref16.file64;\n                name = _ref16.name;\n                contentType = _ref16.contentType;\n\n                _this.setState(function (_ref17) {\n                  var assignments = _ref17.assignments;\n                  if (!assignments) return null;\n                  return {\n                    assignments: Object.assign([], assignments, _defineProperty({}, index, _objectSpread({}, assignments[index], {\n                      complement: {\n                        upload_status: 'filled',\n                        approved: null,\n                        bank_statement: {\n                          filename: name\n                        }\n                      },\n                      name_extra_file: name,\n                      attached_extra_file: file64,\n                      original_filename_extra: name,\n                      content_type_extra_file: contentType,\n                      addedSecondFile: true\n                    })))\n                  };\n                });\n\n              case 7:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x6, _x7) {\n        return _ref15.apply(this, arguments);\n      };\n    }();\n\n    _this.setStatement =\n    /*#__PURE__*/\n    function () {\n      var _ref18 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(index, file) {\n        var _ref19, file64, name, contentType;\n\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return formatFile(file);\n\n              case 2:\n                _ref19 = _context6.sent;\n                file64 = _ref19.file64;\n                name = _ref19.name;\n                contentType = _ref19.contentType;\n\n                _this.setState(function (_ref20) {\n                  var assignments = _ref20.assignments;\n                  if (!assignments) return null;\n                  return {\n                    assignments: Object.assign([], assignments, _defineProperty({}, index, _objectSpread({}, assignments[index], {\n                      main: {\n                        approved: null,\n                        upload_status: 'filled',\n                        bank_statement: {\n                          filename: name\n                        }\n                      },\n                      name: name,\n                      attached_file: file64,\n                      original_filename: name,\n                      content_type: contentType,\n                      addedFirstFile: true,\n                      addedSecondFile: false\n                    })))\n                  };\n                });\n\n              case 7:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      return function (_x8, _x9) {\n        return _ref18.apply(this, arguments);\n      };\n    }();\n\n    _this.toggleNoMovements = function (index) {\n      var assigment = (_this.state.assignments || [])[index];\n\n      _this.setState(function (_ref21) {\n        var assignments = _ref21.assignments;\n        if (!assignments) return null;\n        var status = assignments[index].upload_status;\n        return {\n          assignments: Object.assign([], assignments, _defineProperty({}, index, _objectSpread({}, assignments[index], {\n            main: {\n              upload_status: status === 'no_movements' ? null : 'no_movements',\n              approved: true,\n              bank_statement: {\n                url: ''\n              }\n            }\n          })))\n        };\n      });\n\n      try {\n        AccountingPeriodsActions.updateAssigment(assigment.id);\n        NotificationsActions.success('Cuenta marcada sin movimientos');\n      } catch (error) {\n        _this.setState(function (_ref22) {\n          var assignments = _ref22.assignments;\n          return {\n            assignments: Object.assign([], assignments, _defineProperty({}, index, assigment))\n          };\n        });\n      }\n    };\n\n    _this.uploadStatement = function (index) {\n      var addedSecondFile = _this.state.assignments[index].addedSecondFile;\n      var filenameComplement = addedSecondFile ? _this.state.assignments[index].complement.bank_statement.filename : '';\n      var filename = _this.state.assignments[index].main.bank_statement.filename;\n      var assigment = (_this.state.assignments || [])[index];\n      AccountingPeriodsActions.createBankStatement(assigment.id, addedSecondFile ? createAssignments(_this.state, index) : createAssignmentsWithOneFile(_this.state, index)).then(function () {\n        NotificationsActions.success('El resumen de movimientos se ha cargado correctamente');\n\n        _this.setState(function (_ref23) {\n          var assignments = _ref23.assignments;\n          if (!assignments) return null;\n\n          if (addedSecondFile) {\n            return {\n              assignments: Object.assign([], assignments, _defineProperty({}, index, _objectSpread({}, assignments[index], {\n                main: {\n                  upload_status: 'uploaded',\n                  approved: null,\n                  bank_statement: {\n                    url: '',\n                    filename: filename\n                  }\n                },\n                complement: {\n                  upload_status: 'uploaded',\n                  approved: null,\n                  bank_statement: {\n                    filename: filenameComplement,\n                    url: ''\n                  }\n                }\n              })))\n            };\n          } else if (addedSecondFile === false) {\n            return {\n              assignments: Object.assign([], assignments, _defineProperty({}, index, _objectSpread({}, assignments[index], {\n                main: {\n                  upload_status: 'uploaded',\n                  approved: null,\n                  bank_statement: {\n                    filename: filename,\n                    url: ''\n                  }\n                },\n                complement: {\n                  upload_status: null,\n                  approved: null,\n                  bank_statement: {\n                    filename: '',\n                    url: ''\n                  }\n                },\n                addedFirstFile: false,\n                addedSecondFile: false\n              })))\n            };\n          }\n        });\n      }).catch(function (error) {\n        NotificationsActions.error(error);\n        var _this$props$period = _this.props.period,\n            currentStep = _this$props$period.actual_step,\n            id = _this$props$period.id;\n        var _this$state$assignmen = _this.state.assignments[index],\n            complement = _this$state$assignmen.complement,\n            main = _this$state$assignmen.main,\n            clientRfc = _this$state$assignmen.client_rfc;\n        var mainFileName = main.bank_statement.filename;\n        var complementFileName = 'Sin complemento';\n\n        if (complement !== null) {\n          complementFileName = complement.bank_statement.filename;\n        }\n\n        AppSignal.addBreadcrumb({\n          category: 'Mi contabilidad',\n          action: 'Error: Resúmenes de movimientos.',\n          metadata: {\n            assigmentID: assigment.id,\n            mainFileName: mainFileName,\n            complementFileName: complementFileName,\n            periodID: id,\n            url: \"/mi-contabilidad/\".concat(id, \"/ver\"),\n            currentStep: currentStep,\n            rfc: clientRfc\n          }\n        });\n        AppSignal.sendError(new Error(error));\n      });\n    };\n\n    _this.toggleAccountingMovements = function () {\n      _this.setState(function (prevState) {\n        return {\n          isOpen: !prevState.isOpen\n        };\n      });\n    };\n\n    _this.renderAdvertisment = function () {\n      return React.createElement(\"div\", {\n        className: \"app-wide-notifications\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"app-wide-notifications--notification yellow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"columns is-vcentered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column is-narrow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"mdi mdi-shield-key-outline icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"column is-11\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"app-wide-notifications--notification__text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }, \"Si tu resumen de movimientos requiere de contrase\\xF1a, ser\\xE1 necesario registrarla en el detalle de la\", ' ', React.createElement(Link, {\n        to: \"/cuentas-de-pago\",\n        className: \"app-wide-notifications--notification__text__link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }, \"cuenta bancaria\"), ' ', \"correspondiente.\")))));\n    };\n\n    _this.getTotalMovements = function () {\n      var assignments = _this.state.assignments;\n      var main = assignments.filter(function (element) {\n        return !element.main || element.main;\n      }).length;\n      var complement = assignments.filter(function (element) {\n        return element.complement;\n      }).length;\n      return complement + main;\n    };\n\n    _this.countApprovedMovements = function () {\n      var assignments = _this.state.assignments;\n      var main = assignments.filter(function (element) {\n        return element.main !== null && element.main.approved === true;\n      }).length;\n      var complement = assignments.filter(function (element) {\n        return element.complement !== null && element.complement.approved === true;\n      }).length;\n      return complement + main;\n    };\n\n    return _this;\n  }\n\n  _createClass(UploadStatements, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getAssigments();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          assignments = _this$state.assignments,\n          isOpen = _this$state.isOpen;\n      if (!assignments) return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441\n        },\n        __self: this\n      });\n\n      if (assignments.length === 0) {\n        return React.createElement(\"p\", {\n          className: \"no-results\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 445\n          },\n          __self: this\n        }, \"No tienes res\\xFAmenes de movimientos pendientes\");\n      }\n\n      var months = assignments.reduce(pickMonths, []).sort(ascendingOrder);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classNames('accordion', {\n          'accordion--no-margin-bottom': isOpen\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"accordion__header\",\n        onClick: this.toggleAccountingMovements,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"accordion__header__title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464\n        },\n        __self: this\n      }, \"Res\\xFAmenes de movimientos\"), React.createElement(\"div\", {\n        className: \"accordion__header__icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        icon: isOpen ? 'menu-up' : 'menu-down',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466\n        },\n        __self: this\n      }))), isOpen && React.createElement(\"div\", {\n        className: \"accordion__panel is-relative\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column is-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472\n        },\n        __self: this\n      }, this.renderAdvertisment())), React.createElement(\"div\", {\n        className: \"columns is-relative\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column is-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475\n        },\n        __self: this\n      }, React.createElement(Tabs, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476\n        },\n        __self: this\n      }, React.createElement(TabList, {\n        isToggle: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477\n        },\n        __self: this\n      }, months.map(function (month) {\n        return React.createElement(Tab, {\n          key: month,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 479\n          },\n          __self: this\n        }, formatMonth(month));\n      })), React.createElement(\"p\", {\n        className: \"marginBottom infoBankAccounts info-account-summary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482\n        },\n        __self: this\n      }, \"Se han aprobado\", React.createElement(\"span\", {\n        className: \"infoBankAccounts infoBankAccounts--semibold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484\n        },\n        __self: this\n      }, \" \".concat(this.countApprovedMovements(), \" \")), \"de tus \", this.getTotalMovements(), ' ', \"res\\xFAmenes de movimientos\"), React.createElement(TabPanels, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491\n        },\n        __self: this\n      }, months.map(function (month) {\n        return React.createElement(TabPanel, {\n          key: month,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 493\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"columns is-multiline\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 494\n          },\n          __self: this\n        }, assignments.map(function (assignment, index) {\n          // No utilizo un filter para consevar el index,\n          // Así puedo ubicar mejor los assigments cuando los cambie\n          if (assignment.month !== month) return null;\n          return React.createElement(AssignmentCard, Object.assign({\n            key: assignment.id,\n            index: index\n          }, assignment, {\n            onDropFile: _this2.setStatement,\n            onDropExtraFile: _this2.setStatementExtraFile,\n            uploadStatement: _this2.uploadStatement,\n            toggleNoMovements: _this2.toggleNoMovements,\n            deleteExtraZone: _this2.deleteExtraZone,\n            deleteZone: _this2.deleteZone,\n            replaceFile: _this2.replaceFile,\n            replaceExtraFile: _this2.replaceExtraFile,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 500\n            },\n            __self: this\n          }));\n        })));\n      }))))))));\n    }\n  }]);\n\n  return UploadStatements;\n}(Component);\n\nexport { UploadStatements as default };","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/accountingPeriods/uploadStatements/index.js"],"names":["React","Component","API","Tabs","Loading","AssignmentCard","NotificationsActions","moment","formatFile","ascendingOrder","IconButton","classNames","AccountingPeriodsActions","AppSignal","Link","createAssignments","index","assignments","main","name","attached_file","content_type","original_filename","complement","name_extra_file","attached_extra_file","content_type_extra_file","original_filename_extra","createAssignmentsWithOneFile","TabList","Tab","TabPanels","TabPanel","formatMonth","month","format","pickMonths","months","includes","push","UploadStatements","state","isOpen","props","getAssigments","period","AccountingPeriods","GetAssigments","id","setState","replaceFile","file","file64","contentType","Object","assign","upload_status","approved","bank_statement","filename","addedFirstFile","addedSecondFile","replaceExtraFile","deleteZone","url","deleteExtraZone","upload_status_extra_file","setStatementExtraFile","setStatement","toggleNoMovements","assigment","status","updateAssigment","success","error","uploadStatement","filenameComplement","createBankStatement","then","catch","currentStep","actual_step","clientRfc","client_rfc","mainFileName","complementFileName","addBreadcrumb","category","action","metadata","assigmentID","periodID","rfc","sendError","Error","toggleAccountingMovements","prevState","renderAdvertisment","getTotalMovements","filter","element","length","countApprovedMovements","reduce","sort","map","assignment"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport API from 'api'\nimport Tabs from 'shared/tabs'\nimport Loading from 'shared/loading'\nimport AssignmentCard from './AssignmentCard'\nimport NotificationsActions from 'actions/notifications'\nimport moment from 'moment'\nimport { formatFile, ascendingOrder } from 'utils'\nimport IconButton from 'shared/iconButton'\nimport classNames from 'classnames'\nimport AccountingPeriodsActions from 'actions/accountingPeriods'\nimport AppSignal from 'appsignal'\n\nimport { Link } from 'react-router'\n\nexport const createAssignments = ({ assignments }, index) => ({\n  main: {\n    name: assignments[index].name,\n    attached_file: assignments[index].attached_file,\n    content_type: assignments[index].content_type,\n    original_filename: assignments[index].original_filename\n  },\n  complement: {\n    name: assignments[index].name_extra_file,\n    attached_file: assignments[index].attached_extra_file,\n    content_type: assignments[index].content_type_extra_file,\n    original_filename: assignments[index].original_filename_extra\n  }\n})\n\nexport const createAssignmentsWithOneFile = ({ assignments }, index) => ({\n  main: {\n    name: assignments[index].name,\n    attached_file: assignments[index].attached_file,\n    content_type: assignments[index].content_type,\n    original_filename: assignments[index].original_filename\n  }\n})\n\nconst { TabList, Tab, TabPanels, TabPanel } = Tabs\n\nconst formatMonth = month => moment({ month: month - 1 }).format('MMMM')\n\n/**\n * get array of assigment months\n * @param {number[]} months\n * @param {Assignment} assigment\n */\nconst pickMonths = (months, { month }) => {\n  if (!months.includes(month)) {\n    months.push(month)\n  }\n  return months\n}\n\n/**\n * @typedef {import('api').Assignment} Assignment\n * @typedef {import('api').AccountingPeriod} AccountingPeriod\n * @typedef {{period: AccountingPeriod,isOpen: boolean}} Props\n * @typedef {{ assignments: Assignment[] | null }} State\n * @extends {Component<Props, State>}\n */\nexport default class UploadStatements extends Component {\n  /**\n   * @type {State}\n   */\n  state = {\n    assignments: null,\n    isOpen: this.props.isOpen\n  }\n\n  componentDidMount () {\n    this.getAssigments()\n  }\n\n  getAssigments = async () => {\n    const { period } = this.props\n\n    const { assignments } = await API.AccountingPeriods.GetAssigments(period.id)\n    this.setState({ assignments })\n  }\n\n  // Replaces main file\n  replaceFile = async (index, file) => {\n    const { file64, name, contentType } = await formatFile([file])\n\n    this.setState(({ assignments }) => {\n      if (!assignments) return null\n      return {\n        assignments: Object.assign([], assignments, {\n          [index]: {\n            ...assignments[index],\n            main: {\n              upload_status: 'filled',\n              approved: null,\n              bank_statement: {\n                filename: name\n              }\n            },\n            name: name,\n            attached_file: file64,\n            original_filename: name,\n            content_type: contentType,\n            addedFirstFile: true,\n            addedSecondFile: false\n          }\n        })\n      }\n    })\n  }\n\n  // Replaces extra file\n  replaceExtraFile = async (index, file) => {\n    const { file64, name, contentType } = await formatFile([file])\n\n    this.setState(({ assignments }) => {\n      if (!assignments) return null\n      return {\n        assignments: Object.assign([], assignments, {\n          [index]: {\n            ...assignments[index],\n            complement: {\n              upload_status: 'filled',\n              approved: null,\n              bank_statement: {\n                filename: name\n              }\n            },\n            name_extra_file: name,\n            attached_extra_file: file64,\n            original_filename_extra: name,\n            content_type_extra_file: contentType\n          }\n        })\n      }\n    })\n  }\n\n  // Deletes main zone\n  deleteZone = index => {\n    this.setState(({ assignments }) => {\n      return {\n        assignments: Object.assign([], assignments, {\n          [index]: {\n            ...assignments[index],\n            main: {\n              upload_status: 'zone_deleted',\n              bank_statement: {\n                url: ''\n              }\n            },\n            attached_file: null,\n            original_filename: null,\n            content_type: null,\n            name: null\n          }\n        })\n      }\n    })\n  }\n\n  // Deletes extra zone\n  deleteExtraZone = async index => {\n    this.setState(({ assignments }) => {\n      return {\n        assignments: Object.assign([], assignments, {\n          [index]: {\n            ...assignments[index],\n            complement: {\n              bank_statement: {\n                filename: null\n              }\n            },\n            upload_status_extra_file: null,\n            original_filename_extra: null,\n            name_extra_file: null,\n            attached_extra_file: null,\n            content_type_extra_file: null,\n            addedSecondFile: false\n          }\n        })\n      }\n    })\n  }\n\n  setStatementExtraFile = async (index, file) => {\n    const { file64, name, contentType } = await formatFile(file)\n    this.setState(({ assignments }) => {\n      if (!assignments) return null\n      return {\n        assignments: Object.assign([], assignments, {\n          [index]: {\n            ...assignments[index],\n            complement: {\n              upload_status: 'filled',\n              approved: null,\n              bank_statement: {\n                filename: name\n              }\n            },\n            name_extra_file: name,\n            attached_extra_file: file64,\n            original_filename_extra: name,\n            content_type_extra_file: contentType,\n            addedSecondFile: true\n          }\n        })\n      }\n    })\n  }\n\n  setStatement = async (index, file) => {\n    const { file64, name, contentType } = await formatFile(file)\n    this.setState(({ assignments }) => {\n      if (!assignments) return null\n      return {\n        assignments: Object.assign([], assignments, {\n          [index]: {\n            ...assignments[index],\n            main: {\n              approved: null,\n              upload_status: 'filled',\n              bank_statement: {\n                filename: name\n              }\n            },\n            name: name,\n            attached_file: file64,\n            original_filename: name,\n            content_type: contentType,\n            addedFirstFile: true,\n            addedSecondFile: false\n          }\n        })\n      }\n    })\n  }\n\n  /**\n   * @param {number} index\n   */\n\n  // Sets the account with no movements, and if the request fails doesn't change anything\n  toggleNoMovements = index => {\n    const assigment = (this.state.assignments || [])[index]\n    this.setState(({ assignments }) => {\n      if (!assignments) return null\n      const status = assignments[index].upload_status\n\n      return {\n        assignments: Object.assign([], assignments, {\n          [index]: {\n            ...assignments[index],\n            main: {\n              upload_status: status === 'no_movements' ? null : 'no_movements',\n              approved: true,\n              bank_statement: {\n                url: ''\n              }\n            }\n          }\n        })\n      }\n    })\n\n    try {\n      AccountingPeriodsActions.updateAssigment(assigment.id)\n      NotificationsActions.success('Cuenta marcada sin movimientos')\n    } catch (error) {\n      this.setState(({ assignments }) => ({\n        assignments: Object.assign([], assignments, { [index]: assigment })\n      }))\n    }\n  }\n\n  // It sends the info for the file charged to the DB, it depends if it has only the main or has the complement file.\n  uploadStatement = index => {\n    const { addedSecondFile } = this.state.assignments[index]\n    const filenameComplement = addedSecondFile\n      ? this.state.assignments[index].complement.bank_statement.filename\n      : ''\n    const { filename } = this.state.assignments[index].main.bank_statement\n    const assigment = (this.state.assignments || [])[index]\n\n    AccountingPeriodsActions.createBankStatement(\n      assigment.id,\n      addedSecondFile\n        ? createAssignments(this.state, index)\n        : createAssignmentsWithOneFile(this.state, index)\n    )\n      .then(() => {\n        NotificationsActions.success(\n          'El resumen de movimientos se ha cargado correctamente'\n        )\n        this.setState(({ assignments }) => {\n          if (!assignments) return null\n\n          if (addedSecondFile) {\n            return {\n              assignments: Object.assign([], assignments, {\n                [index]: {\n                  ...assignments[index],\n                  main: {\n                    upload_status: 'uploaded',\n                    approved: null,\n                    bank_statement: {\n                      url: '',\n                      filename: filename\n                    }\n                  },\n                  complement: {\n                    upload_status: 'uploaded',\n                    approved: null,\n                    bank_statement: {\n                      filename: filenameComplement,\n                      url: ''\n                    }\n                  }\n                }\n              })\n            }\n          } else if (addedSecondFile === false) {\n            return {\n              assignments: Object.assign([], assignments, {\n                [index]: {\n                  ...assignments[index],\n                  main: {\n                    upload_status: 'uploaded',\n                    approved: null,\n                    bank_statement: {\n                      filename: filename,\n                      url: ''\n                    }\n                  },\n                  complement: {\n                    upload_status: null,\n                    approved: null,\n                    bank_statement: {\n                      filename: '',\n                      url: ''\n                    }\n                  },\n                  addedFirstFile: false,\n                  addedSecondFile: false\n                }\n              })\n            }\n          }\n        })\n      })\n      .catch(error => {\n        NotificationsActions.error(error)\n\n        const { actual_step: currentStep, id } = this.props.period\n        const {\n          complement,\n          main,\n          client_rfc: clientRfc\n        } = this.state.assignments[index]\n        const { filename: mainFileName } = main.bank_statement\n        let complementFileName = 'Sin complemento'\n\n        if (complement !== null) {\n          complementFileName = complement.bank_statement.filename\n        }\n\n        AppSignal.addBreadcrumb({\n          category: 'Mi contabilidad',\n          action: 'Error: Resúmenes de movimientos.',\n          metadata: {\n            assigmentID: assigment.id,\n            mainFileName: mainFileName,\n            complementFileName: complementFileName,\n            periodID: id,\n            url: `/mi-contabilidad/${id}/ver`,\n            currentStep: currentStep,\n            rfc: clientRfc\n          }\n        })\n        AppSignal.sendError(new Error(error))\n      })\n  }\n\n  toggleAccountingMovements = () => {\n    this.setState(prevState => ({ isOpen: !prevState.isOpen }))\n  }\n\n  renderAdvertisment = () => {\n    return (\n      <div className='app-wide-notifications'>\n        <div className='app-wide-notifications--notification yellow'>\n          <div className='columns is-vcentered'>\n            <div className='column is-narrow'>\n              <i className='mdi mdi-shield-key-outline icon' />\n            </div>\n            <div className='column is-11'>\n              <p className='app-wide-notifications--notification__text'>\n                Si tu resumen de movimientos requiere de contraseña, será\n                necesario registrarla en el detalle de la{' '}\n                <Link\n                  to='/cuentas-de-pago'\n                  className='app-wide-notifications--notification__text__link'\n                >\n                  {`cuenta bancaria`}\n                </Link>{' '}\n                correspondiente.\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  getTotalMovements = () => {\n    const { assignments } = this.state\n\n    const main = assignments.filter(element => !element.main || element.main)\n      .length\n\n    const complement = assignments.filter(element => element.complement).length\n    return complement + main\n  }\n\n  countApprovedMovements = () => {\n    const { assignments } = this.state\n    const main = assignments.filter(\n      element => element.main !== null && element.main.approved === true\n    ).length\n\n    const complement = assignments.filter(\n      element =>\n        element.complement !== null && element.complement.approved === true\n    ).length\n\n    return complement + main\n  }\n\n  render () {\n    const { assignments, isOpen } = this.state\n    if (!assignments) return <Loading />\n\n    if (assignments.length === 0) {\n      return (\n        <p className='no-results'>\n          No tienes resúmenes de movimientos pendientes\n        </p>\n      )\n    }\n\n    const months = assignments.reduce(pickMonths, []).sort(ascendingOrder)\n\n    return (\n      <div>\n        <div\n          className={classNames('accordion', {\n            'accordion--no-margin-bottom': isOpen\n          })}\n        >\n          <div\n            className='accordion__header'\n            onClick={this.toggleAccountingMovements}\n          >\n            <p className='accordion__header__title'>Resúmenes de movimientos</p>\n            <div className='accordion__header__icons'>\n              <IconButton icon={isOpen ? 'menu-up' : 'menu-down'} />\n            </div>\n          </div>\n          {isOpen && (\n            <div className='accordion__panel is-relative'>\n              <div className='columns'>\n                <div className='column is-12'>{this.renderAdvertisment()}</div>\n              </div>\n              <div className='columns is-relative'>\n                <div className='column is-12'>\n                  <Tabs>\n                    <TabList isToggle>\n                      {months.map(month => (\n                        <Tab key={month}>{formatMonth(month)}</Tab>\n                      ))}\n                    </TabList>\n                    <p className='marginBottom infoBankAccounts info-account-summary'>\n                      Se han aprobado\n                      <span className='infoBankAccounts infoBankAccounts--semibold'>\n                        {` ${this.countApprovedMovements()} `}\n                      </span>\n                      de tus {this.getTotalMovements()}{' '}\n                      {`resúmenes de movimientos`}\n                    </p>\n\n                    <TabPanels>\n                      {months.map(month => (\n                        <TabPanel key={month}>\n                          <div className='columns is-multiline'>\n                            {assignments.map((assignment, index) => {\n                              // No utilizo un filter para consevar el index,\n                              // Así puedo ubicar mejor los assigments cuando los cambie\n                              if (assignment.month !== month) return null\n                              return (\n                                <AssignmentCard\n                                  key={assignment.id}\n                                  index={index}\n                                  {...assignment}\n                                  onDropFile={this.setStatement}\n                                  onDropExtraFile={this.setStatementExtraFile}\n                                  uploadStatement={this.uploadStatement}\n                                  toggleNoMovements={this.toggleNoMovements}\n                                  deleteExtraZone={this.deleteExtraZone}\n                                  deleteZone={this.deleteZone}\n                                  replaceFile={this.replaceFile}\n                                  replaceExtraFile={this.replaceExtraFile}\n                                />\n                              )\n                            })}\n                          </div>\n                        </TabPanel>\n                      ))}\n                    </TabPanels>\n                  </Tabs>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}