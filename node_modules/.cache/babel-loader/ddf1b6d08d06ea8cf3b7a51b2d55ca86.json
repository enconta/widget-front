{"ast":null,"code":"import _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport BaseStore from './baseStore';\n\nvar DocumentsStore =\n/*#__PURE__*/\nfunction (_BaseStore) {\n  _inherits(DocumentsStore, _BaseStore);\n\n  function DocumentsStore() {\n    var _this;\n\n    _classCallCheck(this, DocumentsStore);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DocumentsStore).call(this));\n    _this.documentsList = [];\n    _this.totalPages = 1;\n    _this.currentPage = 1;\n    _this.totalItems = 0;\n    _this.actions = {\n      DOCUMENTS_LIST_RECEIVED: function DOCUMENTS_LIST_RECEIVED(action) {\n        _this.setDocumentsList(action.data);\n      }\n    };\n    return _this;\n  } // Returns stored total pages, this is used when explicitly you want to know it\n\n\n  _createClass(DocumentsStore, [{\n    key: \"getTotalPages\",\n    value: function getTotalPages() {\n      return this.totalPages;\n    } // Returns stored total pages, this is used when explicitly you want to know it\n\n  }, {\n    key: \"getTotalItems\",\n    value: function getTotalItems() {\n      return this.totalItems;\n    } // Returns stored current page, this is used when explicitly you want to know it\n\n  }, {\n    key: \"getCurrentPage\",\n    value: function getCurrentPage() {\n      return this.currentPage;\n    } // Returns stored documents list, this is used when explicitly you want to know it\n\n  }, {\n    key: \"getDocumentsList\",\n    value: function getDocumentsList() {\n      return this.documentsList;\n    } // Sets the documents list from the data received from the api\n\n  }, {\n    key: \"setDocumentsList\",\n    value: function setDocumentsList(data) {\n      this.documentsList = data.regular_documents;\n      this.totalPages = data.pagination.total_pages;\n      this.currentPage = data.pagination.current_page;\n      this.totalItems = data.pagination.total_items;\n    }\n  }]);\n\n  return DocumentsStore;\n}(BaseStore);\n\nexport default DocumentsStore.getInstance();","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/stores/documents.js"],"names":["BaseStore","DocumentsStore","documentsList","totalPages","currentPage","totalItems","actions","DOCUMENTS_LIST_RECEIVED","action","setDocumentsList","data","regular_documents","pagination","total_pages","current_page","total_items","getInstance"],"mappings":";;;;;AAAA,OAAOA,SAAP,MAAsB,aAAtB;;IAEMC,c;;;;;AACJ,4BAAe;AAAA;;AAAA;;AACb;AACA,UAAKC,aAAL,GAAqB,EAArB;AACA,UAAKC,UAAL,GAAkB,CAAlB;AACA,UAAKC,WAAL,GAAmB,CAAnB;AACA,UAAKC,UAAL,GAAkB,CAAlB;AAEA,UAAKC,OAAL,GAAe;AACbC,MAAAA,uBAAuB,EAAE,iCAAAC,MAAM,EAAI;AACjC,cAAKC,gBAAL,CAAsBD,MAAM,CAACE,IAA7B;AACD;AAHY,KAAf;AAPa;AAYd,G,CAED;;;;;oCACiB;AACf,aAAO,KAAKP,UAAZ;AACD,K,CACD;;;;oCACiB;AACf,aAAO,KAAKE,UAAZ;AACD,K,CACD;;;;qCACkB;AAChB,aAAO,KAAKD,WAAZ;AACD,K,CAED;;;;uCACoB;AAClB,aAAO,KAAKF,aAAZ;AACD,K,CAED;;;;qCACkBQ,I,EAAM;AACtB,WAAKR,aAAL,GAAqBQ,IAAI,CAACC,iBAA1B;AACA,WAAKR,UAAL,GAAkBO,IAAI,CAACE,UAAL,CAAgBC,WAAlC;AACA,WAAKT,WAAL,GAAmBM,IAAI,CAACE,UAAL,CAAgBE,YAAnC;AACA,WAAKT,UAAL,GAAkBK,IAAI,CAACE,UAAL,CAAgBG,WAAlC;AACD;;;;EAvC0Bf,S;;AA0C7B,eAAeC,cAAc,CAACe,WAAf,EAAf","sourcesContent":["import BaseStore from './baseStore'\n\nclass DocumentsStore extends BaseStore {\n  constructor () {\n    super()\n    this.documentsList = []\n    this.totalPages = 1\n    this.currentPage = 1\n    this.totalItems = 0\n\n    this.actions = {\n      DOCUMENTS_LIST_RECEIVED: action => {\n        this.setDocumentsList(action.data)\n      }\n    }\n  }\n\n  // Returns stored total pages, this is used when explicitly you want to know it\n  getTotalPages () {\n    return this.totalPages\n  }\n  // Returns stored total pages, this is used when explicitly you want to know it\n  getTotalItems () {\n    return this.totalItems\n  }\n  // Returns stored current page, this is used when explicitly you want to know it\n  getCurrentPage () {\n    return this.currentPage\n  }\n\n  // Returns stored documents list, this is used when explicitly you want to know it\n  getDocumentsList () {\n    return this.documentsList\n  }\n\n  // Sets the documents list from the data received from the api\n  setDocumentsList (data) {\n    this.documentsList = data.regular_documents\n    this.totalPages = data.pagination.total_pages\n    this.currentPage = data.pagination.current_page\n    this.totalItems = data.pagination.total_items\n  }\n}\n\nexport default DocumentsStore.getInstance()\n"]},"metadata":{},"sourceType":"module"}