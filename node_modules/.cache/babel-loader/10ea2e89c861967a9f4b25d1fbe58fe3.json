{"ast":null,"code":"import _toConsumableArray from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/shared/filter/index.js\";\n// Libraries\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport pluralize from 'pluralize';\nimport classNames from 'classnames'; // Components\n\nimport TextField from 'shared/textField';\nimport Button from 'shared/button';\nimport IconButton from 'shared/iconButton';\n/**\n * Enconta Filter Component\n *\n * There are several combinations to filter the information in the Application,\n * the use of this component is described below:\n *\n *  Only Search Bar: Just need to use the prop isSearchBarOnly in true and passing the props to handle the Text Field and submit the information\n *\n *  If you want more coplex filters, you must to use the prop filters, it is an array of subcomponents\n *  It's convenient to use it with maximum 4 subcomponents to avoid saturate the component and affect ux.\n *\n * Possible subcomponents:\n *  Radio Options\n *  Range filter (It could be use numbers or dates)\n *  Select Field filters (It could be normal SelectField o wit search feature)\n *\n *\n * @param {*} props\n */\n\nvar Filter = function Filter(props) {\n  var searchBarPlaceHolder = props.searchBarPlaceHolder,\n      searchValue = props.searchValue,\n      handleSearch = props.handleSearch,\n      submitSearch = props.submitSearch,\n      totalRecords = props.totalRecords,\n      handleDisplayFilters = props.handleDisplayFilters,\n      displayFilters = props.displayFilters,\n      isSearchBarOnly = props.isSearchBarOnly,\n      filters = props.filters,\n      clearAll = props.clearAll;\n  return React.createElement(\"div\", {\n    className: \"filter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, !isSearchBarOnly && React.createElement(\"div\", {\n    className: \"filter__button-filters\",\n    onClick: handleDisplayFilters,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: classNames('filter__label-filter', {\n      'filter__label-filter--turquoise': displayFilters\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"mdi mdi-filter-outline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), \" Filtros\", ' ', React.createElement(\"i\", {\n    className: classNames('mdi', {\n      'mdi-chevron-down': !displayFilters,\n      'mdi-chevron-up': displayFilters\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }))), React.createElement(TextField, {\n    type: \"text\",\n    onChange: handleSearch,\n    className: \"input--search-field\",\n    value: searchValue,\n    placeholder: searchBarPlaceHolder,\n    isSearchBar: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(Button, {\n    buttonStyle: \"secondary\",\n    className: \"filter__button\",\n    type: \"submit\",\n    onClick: submitSearch,\n    icon: \"magnify\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Buscar\"), displayFilters && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"filter__break\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"filter__container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"columns is-multiline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, showFilters(filters)))), React.createElement(\"div\", {\n    className: \"filter__break\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"filter__active-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, showActiveFilters(_toConsumableArray(filters), clearAll)), React.createElement(\"p\", {\n    className: \"filter__records-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Hay \".concat(totalRecords, \" \").concat(pluralize('registros', totalRecords), \".\")));\n};\n\nvar showActiveFilters = function showActiveFilters(filters, clearAll) {\n  var activeFilters = [];\n  activeFilters = filters.map(function (_ref, index) {\n    var props = _ref.props,\n        type = _ref.type;\n\n    switch (type.name) {\n      case 'RadioOptions':\n        var options = props.options,\n            radioClear = props.clear,\n            radioLabel = props.mainLabel;\n\n        if (options.length > 0) {\n          var selectedOption = props.options.find(function (option) {\n            return option.checked && option.value !== 'all';\n          });\n\n          if (selectedOption) {\n            return React.createElement(\"p\", {\n              className: \"filter__used-filter\",\n              key: index,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 115\n              },\n              __self: this\n            }, \"\".concat(radioLabel, \": \").concat(selectedOption.label), React.createElement(IconButton, {\n              icon: \"close\",\n              className: \"filter__icon\",\n              onClick: radioClear,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 117\n              },\n              __self: this\n            }));\n          }\n        }\n\n        break;\n\n      case 'SelectOptions':\n        var selectOptions = props.options,\n            configAutoComplete = props.configAutoComplete,\n            value = props.value,\n            selectLabel = props.mainLabel,\n            selectClear = props.clear;\n\n        if (Object.keys(configAutoComplete).length > 0 && configAutoComplete.value !== null) {\n          var label = configAutoComplete.value.label;\n\n          if (label) {\n            return React.createElement(\"p\", {\n              className: \"filter__used-filter\",\n              key: index,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 143\n              },\n              __self: this\n            }, \"\".concat(selectLabel, \": \").concat(label), React.createElement(IconButton, {\n              icon: \"close\",\n              className: \"filter__icon\",\n              onClick: selectClear,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 145\n              },\n              __self: this\n            }));\n          }\n        }\n\n        if (value !== '') {\n          var _value = props.value;\n\n          var _selectOptions$find = selectOptions.find(function (option) {\n            return option.id === _value;\n          }),\n              _label = _selectOptions$find.label;\n\n          return React.createElement(\"p\", {\n            className: \"filter__used-filter\",\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 159\n            },\n            __self: this\n          }, \"\".concat(selectLabel, \": \").concat(_label), React.createElement(IconButton, {\n            icon: \"close\",\n            className: \"filter__icon\",\n            onClick: selectClear,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 161\n            },\n            __self: this\n          }));\n        }\n\n        break;\n\n      case 'RangeOption':\n        var startRange = props.startRange,\n            endRange = props.endRange,\n            rangeLabel = props.mainLabel,\n            rangeClear = props.clear;\n\n        if (startRange !== '' && endRange !== '') {\n          return React.createElement(\"p\", {\n            className: \"filter__used-filter\",\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 180\n            },\n            __self: this\n          }, \"\".concat(rangeLabel, \": \").concat(startRange, \" - \").concat(endRange), React.createElement(IconButton, {\n            icon: \"close\",\n            onClick: rangeClear,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 182\n            },\n            __self: this\n          }));\n        }\n\n        break;\n    }\n  });\n  activeFilters = activeFilters.filter(function (filter) {\n    return filter !== undefined;\n  });\n\n  if (activeFilters.length > 0) {\n    var btnClear = React.createElement(Button, {\n      buttonStyle: \"link\",\n      type: \"submit\",\n      icon: \"eraser\",\n      onClick: clearAll,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"Limpiar\");\n    activeFilters.push(btnClear);\n  }\n\n  return activeFilters;\n};\n\nvar showFilters = function showFilters(filters) {\n  return filters.map(function (filter, index) {\n    return React.createElement(\"div\", {\n      className: \"column\",\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, filter);\n  });\n};\n\nexport default Filter;\nFilter.propTypes = {\n  searchBarPlaceHolder: PropTypes.string.isRequired,\n  searchValue: PropTypes.string.isRequired,\n  handleSearch: PropTypes.func.isRequired,\n  submitSearch: PropTypes.func.isRequired,\n  totalRecords: PropTypes.number.isRequired,\n  displayFilters: PropTypes.bool.isRequired,\n  handleDisplayFilters: PropTypes.func.isRequired,\n  isSearchBarOnly: PropTypes.bool,\n  filters: PropTypes.array,\n  clearAll: PropTypes.func.isRequired\n};\nFilter.defaultProps = {\n  searchBarPlaceHolder: 'Buscar',\n  searchValue: '',\n  handleSearch: function handleSearch() {},\n  submitSearch: function submitSearch() {},\n  totalRecords: 0,\n  displayFilters: false,\n  handleDisplayFilters: function handleDisplayFilters() {},\n  isSearchBarOnly: false,\n  filters: [],\n  clearAll: function clearAll() {}\n};","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/shared/filter/index.js"],"names":["React","Fragment","PropTypes","pluralize","classNames","TextField","Button","IconButton","Filter","props","searchBarPlaceHolder","searchValue","handleSearch","submitSearch","totalRecords","handleDisplayFilters","displayFilters","isSearchBarOnly","filters","clearAll","showFilters","showActiveFilters","activeFilters","map","index","type","name","options","radioClear","clear","radioLabel","mainLabel","length","selectedOption","find","option","checked","value","label","selectOptions","configAutoComplete","selectLabel","selectClear","Object","keys","id","startRange","endRange","rangeLabel","rangeClear","filter","undefined","btnClear","push","propTypes","string","isRequired","func","number","bool","array","defaultProps"],"mappings":"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","sourcesContent":["// Libraries\nimport React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport pluralize from 'pluralize'\nimport classNames from 'classnames'\n\n// Components\nimport TextField from 'shared/textField'\nimport Button from 'shared/button'\nimport IconButton from 'shared/iconButton'\n\n/**\n * Enconta Filter Component\n *\n * There are several combinations to filter the information in the Application,\n * the use of this component is described below:\n *\n *  Only Search Bar: Just need to use the prop isSearchBarOnly in true and passing the props to handle the Text Field and submit the information\n *\n *  If you want more coplex filters, you must to use the prop filters, it is an array of subcomponents\n *  It's convenient to use it with maximum 4 subcomponents to avoid saturate the component and affect ux.\n *\n * Possible subcomponents:\n *  Radio Options\n *  Range filter (It could be use numbers or dates)\n *  Select Field filters (It could be normal SelectField o wit search feature)\n *\n *\n * @param {*} props\n */\nconst Filter = props => {\n  const {\n    searchBarPlaceHolder,\n    searchValue,\n    handleSearch,\n    submitSearch,\n    totalRecords,\n    handleDisplayFilters,\n    displayFilters,\n    isSearchBarOnly,\n    filters,\n    clearAll\n  } = props\n  return (\n    <div className='filter'>\n      {!isSearchBarOnly && (\n        <div className='filter__button-filters' onClick={handleDisplayFilters}>\n          <p\n            className={classNames('filter__label-filter', {\n              'filter__label-filter--turquoise': displayFilters\n            })}\n          >\n            <i className='mdi mdi-filter-outline' /> Filtros{' '}\n            <i\n              className={classNames('mdi', {\n                'mdi-chevron-down': !displayFilters,\n                'mdi-chevron-up': displayFilters\n              })}\n            />\n          </p>\n        </div>\n      )}\n\n      <TextField\n        type='text'\n        onChange={handleSearch}\n        className='input--search-field'\n        value={searchValue}\n        placeholder={searchBarPlaceHolder}\n        isSearchBar\n      />\n      <Button\n        buttonStyle='secondary'\n        className='filter__button'\n        type='submit'\n        onClick={submitSearch}\n        icon='magnify'\n      >\n        Buscar\n      </Button>\n      {displayFilters && (\n        <Fragment>\n          <div className='filter__break' />\n          <div className='filter__container'>\n            <div className='columns is-multiline'>{showFilters(filters)}</div>\n          </div>\n        </Fragment>\n      )}\n      <div className='filter__break' />\n      <div className='filter__active-container'>\n        {showActiveFilters([...filters], clearAll)}\n      </div>\n      <p className='filter__records-label'>{`Hay ${totalRecords} ${pluralize(\n        'registros',\n        totalRecords\n      )}.`}</p>\n    </div>\n  )\n}\n\nconst showActiveFilters = (filters, clearAll) => {\n  let activeFilters = []\n\n  activeFilters = filters.map(({ props, type }, index) => {\n    switch (type.name) {\n      case 'RadioOptions':\n        const { options, clear: radioClear, mainLabel: radioLabel } = props\n\n        if (options.length > 0) {\n          const selectedOption = props.options.find(\n            option => option.checked && option.value !== 'all'\n          )\n          if (selectedOption) {\n            return (\n              <p className='filter__used-filter' key={index}>\n                {`${radioLabel}: ${selectedOption.label}`}\n                <IconButton\n                  icon='close'\n                  className='filter__icon'\n                  onClick={radioClear}\n                />\n              </p>\n            )\n          }\n        }\n        break\n      case 'SelectOptions':\n        const {\n          options: selectOptions,\n          configAutoComplete,\n          value,\n          mainLabel: selectLabel,\n          clear: selectClear\n        } = props\n\n        if (\n          Object.keys(configAutoComplete).length > 0 &&\n          configAutoComplete.value !== null\n        ) {\n          const { label } = configAutoComplete.value\n          if (label) {\n            return (\n              <p className='filter__used-filter' key={index}>\n                {`${selectLabel}: ${label}`}\n                <IconButton\n                  icon='close'\n                  className='filter__icon'\n                  onClick={selectClear}\n                />\n              </p>\n            )\n          }\n        }\n\n        if (value !== '') {\n          const { value } = props\n          const { label } = selectOptions.find(option => option.id === value)\n          return (\n            <p className='filter__used-filter' key={index}>\n              {`${selectLabel}: ${label}`}\n              <IconButton\n                icon='close'\n                className='filter__icon'\n                onClick={selectClear}\n              />\n            </p>\n          )\n        }\n\n        break\n      case 'RangeOption':\n        const {\n          startRange,\n          endRange,\n          mainLabel: rangeLabel,\n          clear: rangeClear\n        } = props\n        if (startRange !== '' && endRange !== '') {\n          return (\n            <p className='filter__used-filter' key={index}>\n              {`${rangeLabel}: ${startRange} - ${endRange}`}\n              <IconButton icon='close' onClick={rangeClear} />\n            </p>\n          )\n        }\n        break\n    }\n  })\n\n  activeFilters = activeFilters.filter(filter => filter !== undefined)\n\n  if (activeFilters.length > 0) {\n    const btnClear = (\n      <Button buttonStyle='link' type='submit' icon='eraser' onClick={clearAll}>\n        Limpiar\n      </Button>\n    )\n    activeFilters.push(btnClear)\n  }\n\n  return activeFilters\n}\n\nconst showFilters = filters => {\n  return filters.map((filter, index) => {\n    return (\n      <div className='column' key={index}>\n        {filter}\n      </div>\n    )\n  })\n}\n\nexport default Filter\n\nFilter.propTypes = {\n  searchBarPlaceHolder: PropTypes.string.isRequired,\n  searchValue: PropTypes.string.isRequired,\n  handleSearch: PropTypes.func.isRequired,\n  submitSearch: PropTypes.func.isRequired,\n  totalRecords: PropTypes.number.isRequired,\n  displayFilters: PropTypes.bool.isRequired,\n  handleDisplayFilters: PropTypes.func.isRequired,\n  isSearchBarOnly: PropTypes.bool,\n  filters: PropTypes.array,\n  clearAll: PropTypes.func.isRequired\n}\n\nFilter.defaultProps = {\n  searchBarPlaceHolder: 'Buscar',\n  searchValue: '',\n  handleSearch: () => {},\n  submitSearch: () => {},\n  totalRecords: 0,\n  displayFilters: false,\n  handleDisplayFilters: () => {},\n  isSearchBarOnly: false,\n  filters: [],\n  clearAll: () => {}\n}\n"]},"metadata":{},"sourceType":"module"}