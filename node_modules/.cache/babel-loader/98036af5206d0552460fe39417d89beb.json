{"ast":null,"code":"import AppDispatcher from '../dispatcher';\nimport API from '../api';\nimport AppSignal from 'appsignal'; // This action creator sends the type of action and the params (if any) to the dispatcher\n\nexport default {\n  getUserData: function getUserData() {\n    // Gets the User Data from the API, then triggers the change on the store if success\n    API.EditUser.GetUserData().then(function (response) {\n      AppDispatcher.handleAction({\n        actionType: 'USER_DATA_RECEIVED',\n        data: response\n      });\n    }).catch(function (error) {\n      AppSignal.sendError(error);\n    });\n  },\n  getUserNotifications: function getUserNotifications() {\n    // Gets the User Notifications from the API, then triggers the change on the store if success\n    API.EditUser.GetUserNotifications().then(function (response) {\n      AppDispatcher.handleAction({\n        actionType: 'USER_NOTIFICATIONS_RECEIVED',\n        data: response\n      });\n    });\n  },\n  setUserData: function setUserData(data) {\n    // Send the User Data change to the API, then triggers the change on the store if success\n    API.EditUser.SetUserData(data).then(function (response) {\n      AppDispatcher.handleAction({\n        actionType: 'USER_DATA_SAVED',\n        data: response\n      });\n    }).catch(function (error) {\n      AppSignal.sendError(error);\n    });\n  },\n  setUserNotifications: function setUserNotifications(data) {\n    // Send the User Notifications change to the API, then triggers the change on the store if success\n    API.EditUser.SetUserNotifications(data).then(function (response) {\n      AppDispatcher.handleAction({\n        actionType: 'USER_NOTIFICATIONS_SAVED',\n        data: response\n      });\n    }).catch(function (error) {\n      AppSignal.sendError(error);\n    });\n  }\n};","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/actions/editUser.js"],"names":["AppDispatcher","API","AppSignal","getUserData","EditUser","GetUserData","then","response","handleAction","actionType","data","catch","error","sendError","getUserNotifications","GetUserNotifications","setUserData","SetUserData","setUserNotifications","SetUserNotifications"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,eAA1B;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,SAAP,MAAsB,WAAtB,C,CAEA;;AACA,eAAe;AACbC,EAAAA,WADa,yBACE;AACb;AACAF,IAAAA,GAAG,CAACG,QAAJ,CAAaC,WAAb,GACGC,IADH,CACQ,UAAAC,QAAQ,EAAI;AAChBP,MAAAA,aAAa,CAACQ,YAAd,CAA2B;AACzBC,QAAAA,UAAU,EAAE,oBADa;AAEzBC,QAAAA,IAAI,EAAEH;AAFmB,OAA3B;AAID,KANH,EAOGI,KAPH,CAOS,UAAAC,KAAK,EAAI;AACdV,MAAAA,SAAS,CAACW,SAAV,CAAoBD,KAApB;AACD,KATH;AAUD,GAbY;AAebE,EAAAA,oBAfa,kCAeW;AACtB;AACAb,IAAAA,GAAG,CAACG,QAAJ,CAAaW,oBAAb,GAAoCT,IAApC,CAAyC,UAAAC,QAAQ,EAAI;AACnDP,MAAAA,aAAa,CAACQ,YAAd,CAA2B;AACzBC,QAAAA,UAAU,EAAE,6BADa;AAEzBC,QAAAA,IAAI,EAAEH;AAFmB,OAA3B;AAID,KALD;AAMD,GAvBY;AAyBbS,EAAAA,WAzBa,uBAyBAN,IAzBA,EAyBM;AACjB;AACAT,IAAAA,GAAG,CAACG,QAAJ,CAAaa,WAAb,CAAyBP,IAAzB,EACGJ,IADH,CACQ,UAAAC,QAAQ,EAAI;AAChBP,MAAAA,aAAa,CAACQ,YAAd,CAA2B;AACzBC,QAAAA,UAAU,EAAE,iBADa;AAEzBC,QAAAA,IAAI,EAAEH;AAFmB,OAA3B;AAID,KANH,EAOGI,KAPH,CAOS,UAAAC,KAAK,EAAI;AACdV,MAAAA,SAAS,CAACW,SAAV,CAAoBD,KAApB;AACD,KATH;AAUD,GArCY;AAuCbM,EAAAA,oBAvCa,gCAuCSR,IAvCT,EAuCe;AAC1B;AACAT,IAAAA,GAAG,CAACG,QAAJ,CAAae,oBAAb,CAAkCT,IAAlC,EACGJ,IADH,CACQ,UAAAC,QAAQ,EAAI;AAChBP,MAAAA,aAAa,CAACQ,YAAd,CAA2B;AACzBC,QAAAA,UAAU,EAAE,0BADa;AAEzBC,QAAAA,IAAI,EAAEH;AAFmB,OAA3B;AAID,KANH,EAOGI,KAPH,CAOS,UAAAC,KAAK,EAAI;AACdV,MAAAA,SAAS,CAACW,SAAV,CAAoBD,KAApB;AACD,KATH;AAUD;AAnDY,CAAf","sourcesContent":["import AppDispatcher from '../dispatcher'\nimport API from '../api'\nimport AppSignal from 'appsignal'\n\n// This action creator sends the type of action and the params (if any) to the dispatcher\nexport default {\n  getUserData () {\n    // Gets the User Data from the API, then triggers the change on the store if success\n    API.EditUser.GetUserData()\n      .then(response => {\n        AppDispatcher.handleAction({\n          actionType: 'USER_DATA_RECEIVED',\n          data: response\n        })\n      })\n      .catch(error => {\n        AppSignal.sendError(error)\n      })\n  },\n\n  getUserNotifications () {\n    // Gets the User Notifications from the API, then triggers the change on the store if success\n    API.EditUser.GetUserNotifications().then(response => {\n      AppDispatcher.handleAction({\n        actionType: 'USER_NOTIFICATIONS_RECEIVED',\n        data: response\n      })\n    })\n  },\n\n  setUserData (data) {\n    // Send the User Data change to the API, then triggers the change on the store if success\n    API.EditUser.SetUserData(data)\n      .then(response => {\n        AppDispatcher.handleAction({\n          actionType: 'USER_DATA_SAVED',\n          data: response\n        })\n      })\n      .catch(error => {\n        AppSignal.sendError(error)\n      })\n  },\n\n  setUserNotifications (data) {\n    // Send the User Notifications change to the API, then triggers the change on the store if success\n    API.EditUser.SetUserNotifications(data)\n      .then(response => {\n        AppDispatcher.handleAction({\n          actionType: 'USER_NOTIFICATIONS_SAVED',\n          data: response\n        })\n      })\n      .catch(error => {\n        AppSignal.sendError(error)\n      })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}