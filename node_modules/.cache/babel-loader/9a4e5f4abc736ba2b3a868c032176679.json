{"ast":null,"code":"import _regeneratorRuntime from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/inventories/products/massiveUpload.js\";\n// Libraries\nimport React, { Component, Fragment } from 'react';\nimport { Link, browserHistory } from 'react-router';\nimport { formatFile } from 'utils';\nimport classNames from 'classnames'; // Components\n\nimport EmptyState from 'shared/emptyState';\nimport DropZoneFile from 'shared/credentials/components/DropzoneFile';\nimport Button from 'shared/button'; // Actions\n\nimport NotificationsActions from 'actions/notifications';\nimport InventoriesActions from 'actions/inventories'; // Stores\n\nimport InventoriesStore from 'stores/inventories';\nexport var createProductImport = function createProductImport(_ref) {\n  var file = _ref.file;\n  return {\n    product_import: {\n      preview: true,\n      attached_file: file.file64\n    }\n  };\n};\n\nvar getCurrentState = function getCurrentState() {\n  return {\n    hasProducts: InventoriesStore.getHasProducts()\n  };\n};\n\nvar MassiveUploadProducts =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MassiveUploadProducts, _Component);\n\n  function MassiveUploadProducts() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MassiveUploadProducts);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MassiveUploadProducts)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = _objectSpread({\n      file: {\n        name: '',\n        file64: '',\n        contentType: ''\n      },\n      requestInProgress: false,\n      hasProducts: false\n    }, getCurrentState());\n\n    _this.onDropFile =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(file) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (file) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 2:\n                _context.t0 = _this;\n                _context.next = 5;\n                return formatFile(file);\n\n              case 5:\n                _context.t1 = _context.sent;\n                _context.t2 = {\n                  file: _context.t1\n                };\n\n                _context.t0.setState.call(_context.t0, _context.t2);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.sendInventoryFile = function () {\n      _this.setState({\n        requestInProgress: true\n      });\n\n      InventoriesActions.analyzeProducts(createProductImport(_this.state)).then(function () {\n        NotificationsActions.success('Archivo analizado correctamente');\n\n        _this.setState({\n          requestInProgress: false\n        });\n\n        browserHistory.push('/inventarios/vista-previa');\n      }).catch(function (error) {\n        NotificationsActions.error(error);\n\n        _this.setState({\n          requestInProgress: false\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(MassiveUploadProducts, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var name = this.state.file.name;\n      var _this$state = this.state,\n          requestInProgress = _this$state.requestInProgress,\n          hasProducts = _this$state.hasProducts;\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, !hasProducts && React.createElement(EmptyState, {\n        icon: 'cube-scan',\n        mainText: 'No contamos con productos registrados',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"columns is-centered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column is-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"massive-products-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"body body--dark-greay-hover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Para registrar varios productos a la vez sigue las siguientes indicaciones:\"), React.createElement(\"ol\", {\n        className: \"massive-products-form__instructions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: 'https://s3-us-west-2.amazonaws.com/enconta-public/environment/templates/productos.xlsx',\n        className: \"is-uppercase link--underline link--underline--color-blue\",\n        download: true,\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"mdi mdi-file-table icon-aligned--margin-right\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), \"Descargar excel\")), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Registra la informaci\\xF3n de tus productos de acuerdo a las indicaciones.\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Carga el archivo actualizado.\"), React.createElement(DropZoneFile, {\n        className: classNames('is-fullwidth dropzone--has-margin-bottom', {\n          approved: name !== ''\n        }),\n        accept: \".xlsx\",\n        onDrop: function onDrop(file) {\n          return _this2.onDropFile(file);\n        },\n        file: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Guarda los productos que fueron procesados correctamente.\")), React.createElement(Button, {\n        type: \"button\",\n        buttonStyle: \"primary\",\n        className: \"massive-products-form__send-button\",\n        icon: \"send\",\n        disabled: requestInProgress || name === '',\n        loading: requestInProgress,\n        onClick: this.sendInventoryFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Enviar\")))));\n    }\n  }]);\n\n  return MassiveUploadProducts;\n}(Component);\n\nexport { MassiveUploadProducts as default };","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/inventories/products/massiveUpload.js"],"names":["React","Component","Fragment","Link","browserHistory","formatFile","classNames","EmptyState","DropZoneFile","Button","NotificationsActions","InventoriesActions","InventoriesStore","createProductImport","file","product_import","preview","attached_file","file64","getCurrentState","hasProducts","getHasProducts","MassiveUploadProducts","state","name","contentType","requestInProgress","onDropFile","setState","sendInventoryFile","analyzeProducts","then","success","push","catch","error","approved"],"mappings":"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","sourcesContent":["// Libraries\nimport React, { Component, Fragment } from 'react'\nimport { Link, browserHistory } from 'react-router'\nimport { formatFile } from 'utils'\nimport classNames from 'classnames'\n\n// Components\nimport EmptyState from 'shared/emptyState'\nimport DropZoneFile from 'shared/credentials/components/DropzoneFile'\nimport Button from 'shared/button'\n\n// Actions\nimport NotificationsActions from 'actions/notifications'\nimport InventoriesActions from 'actions/inventories'\n\n// Stores\nimport InventoriesStore from 'stores/inventories'\n\nexport const createProductImport = ({ file }) => ({\n  product_import: {\n    preview: true,\n    attached_file: file.file64\n  }\n})\n\nconst getCurrentState = () => {\n  return {\n    hasProducts: InventoriesStore.getHasProducts()\n  }\n}\nexport default class MassiveUploadProducts extends Component {\n  state = {\n    file: {\n      name: '',\n      file64: '',\n      contentType: ''\n    },\n    requestInProgress: false,\n    hasProducts: false,\n    ...getCurrentState()\n  }\n  /**\n   * @param {File[] | undefined} file\n   */\n  onDropFile = async file => {\n    if (!file) return\n    this.setState({ file: await formatFile(file) })\n  }\n\n  sendInventoryFile = () => {\n    this.setState({ requestInProgress: true })\n    InventoriesActions.analyzeProducts(createProductImport(this.state))\n      .then(() => {\n        NotificationsActions.success('Archivo analizado correctamente')\n        this.setState({ requestInProgress: false })\n        browserHistory.push('/inventarios/vista-previa')\n      })\n      .catch(error => {\n        NotificationsActions.error(error)\n        this.setState({ requestInProgress: false })\n      })\n  }\n\n  render () {\n    const { name } = this.state.file\n    const { requestInProgress, hasProducts } = this.state\n    return (\n      <Fragment>\n        {!hasProducts && (\n          <EmptyState\n            icon={'cube-scan'}\n            mainText={'No contamos con productos registrados'}\n          />\n        )}\n\n        <div className='columns is-centered'>\n          <div className='column is-6'>\n            <form className='massive-products-form'>\n              <p className='body body--dark-greay-hover'>\n                Para registrar varios productos a la vez sigue las siguientes\n                indicaciones:\n              </p>\n              <ol className='massive-products-form__instructions'>\n                <li>\n                  <Link\n                    to={\n                      'https://s3-us-west-2.amazonaws.com/enconta-public/environment/templates/productos.xlsx'\n                    }\n                    className='is-uppercase link--underline link--underline--color-blue'\n                    download\n                    target='_blank'\n                  >\n                    <i\n                      className='mdi mdi-file-table icon-aligned--margin-right'\n                      aria-hidden='true'\n                    />\n                    Descargar excel\n                  </Link>\n                </li>\n                <li>\n                  Registra la información de tus productos de acuerdo a las\n                  indicaciones.\n                </li>\n                <li>\n                  <p>Carga el archivo actualizado.</p>\n                  <DropZoneFile\n                    className={classNames(\n                      'is-fullwidth dropzone--has-margin-bottom',\n                      {\n                        approved: name !== ''\n                      }\n                    )}\n                    accept='.xlsx'\n                    onDrop={file => this.onDropFile(file)}\n                    file={name}\n                  />\n                </li>\n                <li>\n                  Guarda los productos que fueron procesados correctamente.\n                </li>\n              </ol>\n              <Button\n                type='button'\n                buttonStyle='primary'\n                className='massive-products-form__send-button'\n                icon='send'\n                disabled={requestInProgress || name === ''}\n                loading={requestInProgress}\n                onClick={this.sendInventoryFile}\n              >\n                Enviar\n              </Button>\n            </form>\n          </div>\n        </div>\n      </Fragment>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}