{"ast":null,"code":"import _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/shared/notifications/index.js\";\nimport React, { Component } from 'react';\nimport NotificationsActions from 'actions/notifications';\nimport NotificationsStore from 'stores/notifications';\nimport Notification from './notification';\n\nfunction getCurrentState() {\n  var notifications = NotificationsStore.getNotificationsQueue();\n  return {\n    notifications: notifications\n  };\n}\n\nvar NotificationsContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NotificationsContainer, _Component);\n\n  function NotificationsContainer() {\n    var _this;\n\n    _classCallCheck(this, NotificationsContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NotificationsContainer).call(this));\n    _this.state = Object.assign({}, getCurrentState());\n    _this.handleRequestHide = _this.handleRequestHide.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleQueueChange = _this.handleQueueChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // Adds a change listener and when a change is emmited, calls the handleQueueChange function\n\n\n  _createClass(NotificationsContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      NotificationsStore.addChangeListener(this.handleQueueChange);\n    } // Removes the change listener to avoid memory leaks\n\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      NotificationsStore.removeChangeListener(this.handleQueueChange);\n    } // Sets the updated notifications queue to the state\n\n  }, {\n    key: \"handleQueueChange\",\n    value: function handleQueueChange() {\n      var state = getCurrentState();\n      this.setState(state);\n    } // Removes the notification passed from the original queue\n\n  }, {\n    key: \"handleRequestHide\",\n    value: function handleRequestHide(notificationId) {\n      NotificationsActions.hide(notificationId);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var notifications = this.state.notifications;\n      return React.createElement(\"div\", {\n        className: \"notification-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, notifications.map(function (notification) {\n        return React.createElement(Notification, {\n          id: notification.id,\n          key: notification.id,\n          type: notification.type,\n          message: notification.message,\n          timeOut: notification.timeOut,\n          onClick: notification.onClick,\n          onRequestHide: _this2.handleRequestHide,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return NotificationsContainer;\n}(Component);\n\nexport default NotificationsContainer;","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/shared/notifications/index.js"],"names":["React","Component","NotificationsActions","NotificationsStore","Notification","getCurrentState","notifications","getNotificationsQueue","NotificationsContainer","state","Object","assign","handleRequestHide","bind","handleQueueChange","addChangeListener","removeChangeListener","setState","notificationId","hide","map","notification","id","type","message","timeOut","onClick"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,oBAAP,MAAiC,uBAAjC;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,SAASC,eAAT,GAA4B;AAC1B,MAAMC,aAAa,GAAGH,kBAAkB,CAACI,qBAAnB,EAAtB;AACA,SAAO;AACLD,IAAAA,aAAa,EAAbA;AADK,GAAP;AAGD;;IAEKE,sB;;;;;AACJ,oCAAe;AAAA;;AAAA;;AACb;AACA,UAAKC,KAAL,GAAaC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,eAAe,EAAjC,CAAb;AACA,UAAKO,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,uDAAzB;AACA,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBD,IAAvB,uDAAzB;AAJa;AAKd,G,CAED;;;;;wCACqB;AACnBV,MAAAA,kBAAkB,CAACY,iBAAnB,CAAqC,KAAKD,iBAA1C;AACD,K,CAED;;;;2CACwB;AACtBX,MAAAA,kBAAkB,CAACa,oBAAnB,CAAwC,KAAKF,iBAA7C;AACD,K,CAED;;;;wCACqB;AACnB,UAAML,KAAK,GAAGJ,eAAe,EAA7B;AACA,WAAKY,QAAL,CAAcR,KAAd;AACD,K,CAED;;;;sCACmBS,c,EAAgB;AACjChB,MAAAA,oBAAoB,CAACiB,IAArB,CAA0BD,cAA1B;AACD;;;6BAES;AAAA;;AAAA,UACAZ,aADA,GACkB,KAAKG,KADvB,CACAH,aADA;AAER,aACE;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,aAAa,CAACc,GAAd,CAAkB,UAAAC,YAAY;AAAA,eAC7B,oBAAC,YAAD;AACE,UAAA,EAAE,EAAEA,YAAY,CAACC,EADnB;AAEE,UAAA,GAAG,EAAED,YAAY,CAACC,EAFpB;AAGE,UAAA,IAAI,EAAED,YAAY,CAACE,IAHrB;AAIE,UAAA,OAAO,EAAEF,YAAY,CAACG,OAJxB;AAKE,UAAA,OAAO,EAAEH,YAAY,CAACI,OALxB;AAME,UAAA,OAAO,EAAEJ,YAAY,CAACK,OANxB;AAOE,UAAA,aAAa,EAAE,MAAI,CAACd,iBAPtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD6B;AAAA,OAA9B,CADH,CADF;AAeD;;;;EA9CkCX,S;;AAiDrC,eAAeO,sBAAf","sourcesContent":["import React, { Component } from 'react'\n\nimport NotificationsActions from 'actions/notifications'\nimport NotificationsStore from 'stores/notifications'\nimport Notification from './notification'\n\nfunction getCurrentState () {\n  const notifications = NotificationsStore.getNotificationsQueue()\n  return {\n    notifications\n  }\n}\n\nclass NotificationsContainer extends Component {\n  constructor () {\n    super()\n    this.state = Object.assign({}, getCurrentState())\n    this.handleRequestHide = this.handleRequestHide.bind(this)\n    this.handleQueueChange = this.handleQueueChange.bind(this)\n  }\n\n  // Adds a change listener and when a change is emmited, calls the handleQueueChange function\n  componentDidMount () {\n    NotificationsStore.addChangeListener(this.handleQueueChange)\n  }\n\n  // Removes the change listener to avoid memory leaks\n  componentWillUnmount () {\n    NotificationsStore.removeChangeListener(this.handleQueueChange)\n  }\n\n  // Sets the updated notifications queue to the state\n  handleQueueChange () {\n    const state = getCurrentState()\n    this.setState(state)\n  }\n\n  // Removes the notification passed from the original queue\n  handleRequestHide (notificationId) {\n    NotificationsActions.hide(notificationId)\n  }\n\n  render () {\n    const { notifications } = this.state\n    return (\n      <div className='notification-container'>\n        {notifications.map(notification => (\n          <Notification\n            id={notification.id}\n            key={notification.id}\n            type={notification.type}\n            message={notification.message}\n            timeOut={notification.timeOut}\n            onClick={notification.onClick}\n            onRequestHide={this.handleRequestHide}\n          />\n        ))}\n      </div>\n    )\n  }\n}\n\nexport default NotificationsContainer\n"]},"metadata":{},"sourceType":"module"}