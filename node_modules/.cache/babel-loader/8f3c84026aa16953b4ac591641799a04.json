{"ast":null,"code":"import _defineProperty from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/newInvoice/shared/payrollCharges/index.js\";\n// Libraries\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport accounting from 'accounting';\nimport { amountToCents } from 'utils'; // Sub components\n\nimport Perceptions from './perceptions';\nimport OtherPerceptions from './otherPerceptions';\nimport Overtimes from './overtimes';\nimport Deductions from './deductions'; // import Separations from './separations'\n\nimport Disabilities from './disabilities'; // Keys\n\nvar PERCEPTIONS_KEY = 'perception_mgs';\nvar DEDUCTIONS_KEY = 'deduction_mgs'; // const SEPARATIONS_KEY = 'separations_mgs'\n\nvar DISABILITIES_KEY = 'disability_mgs';\nvar OVERTIMES_KEY = 'overtime_mgs';\nvar OTHER_PERCEPTIONS_KEY = 'other_payment_mgs'; // Fixed Keys\n\nvar PERCEPTIONS_SUBTOTAL = 'subtotalPerceptions';\nvar OTHER_PERCEPTIONS_SUBTOTAL = 'subtotalOtherPerceptions';\nvar OVERTIMES_SUBTOTAL = 'subtotalOvertimes';\nvar DEDUCTIONS_SUBTOTAL = 'subtotalDeductions'; // const SEPARATIONS_SUBTOTAL = 'subtotalSeparations'\n\nvar DISABILITIES_SUBTOTAL = 'subtotalDisabilities'; // Concepts for payroll invoice\n\nvar PayrollCharges =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PayrollCharges, _Component);\n\n  function PayrollCharges() {\n    var _this$data;\n\n    var _this;\n\n    _classCallCheck(this, PayrollCharges);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PayrollCharges).call(this));\n    _this.data = (_this$data = {}, _defineProperty(_this$data, PERCEPTIONS_SUBTOTAL, 0), _defineProperty(_this$data, OTHER_PERCEPTIONS_SUBTOTAL, 0), _defineProperty(_this$data, OVERTIMES_SUBTOTAL, 0), _defineProperty(_this$data, DEDUCTIONS_SUBTOTAL, 0), _defineProperty(_this$data, DISABILITIES_SUBTOTAL, 0), _defineProperty(_this$data, \"perceptionsTotal\", 0), _defineProperty(_this$data, \"deductionsTotal\", 0), _defineProperty(_this$data, \"discount\", 0), _defineProperty(_this$data, \"total\", 0), _this$data);\n    _this.state = Object.assign({}, _this.data);\n    return _this;\n  } // Run validations on all refs\n\n\n  _createClass(PayrollCharges, [{\n    key: \"validateAll\",\n    value: function validateAll() {\n      return this.refs[PERCEPTIONS_KEY].validateRequiredFields() && this.refs[DEDUCTIONS_KEY].validateRequiredFields() && this.refs[OTHER_PERCEPTIONS_KEY].validateRequiredFields() && this.refs[OVERTIMES_KEY].validateRequiredFields() && // this.refs[SEPARATIONS_KEY].validateRequiredFields() &&\n      this.refs[DISABILITIES_KEY].validateRequiredFields();\n    } // Export concepts for every perception type\n\n  }, {\n    key: \"exportPerceptions\",\n    value: function exportPerceptions() {\n      return _defineProperty({}, PERCEPTIONS_KEY, this.refs[PERCEPTIONS_KEY].exportPerceptions());\n    } // Export concepts for every other perception type\n\n  }, {\n    key: \"exportOtherPerceptions\",\n    value: function exportOtherPerceptions() {\n      return this.refs[OTHER_PERCEPTIONS_KEY].exportOtherPerceptions();\n    } // Export concepts for every overtime type\n\n  }, {\n    key: \"exportOvertimes\",\n    value: function exportOvertimes() {\n      return this.refs[OVERTIMES_KEY].exportOvertimes();\n    } // Export concepts for every deduction type\n\n  }, {\n    key: \"exportDeductions\",\n    value: function exportDeductions() {\n      return _defineProperty({}, DEDUCTIONS_KEY, this.refs[DEDUCTIONS_KEY].exportDeductions());\n    } // // Export concepts for every separations type\n    // exportSeparations () {\n    //   return {\n    //     [SEPARATIONS_KEY]: this.refs[SEPARATIONS_KEY].exportSeparations()\n    //   }\n    // }\n    // Export concepts for every disabiolity type\n\n  }, {\n    key: \"exportDisabilities\",\n    value: function exportDisabilities() {\n      return this.refs[DISABILITIES_KEY].exportDisabilities();\n    } // Format totals and export them\n\n  }, {\n    key: \"exportTotals\",\n    value: function exportTotals() {\n      var discountCents = amountToCents(this.state.discount);\n      var subtotalCents = amountToCents(this.state.total);\n      var totalCents = subtotalCents - discountCents;\n      return {\n        subtotal_cents: subtotalCents,\n        total_cents: totalCents,\n        discount_cents: discountCents\n      };\n    } // Handle changes to totals\n\n  }, {\n    key: \"updatePayrollTotals\",\n    value: function updatePayrollTotals(item, subtotal) {\n      var _this$setState;\n\n      var isSubstraction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      // Read value from args if exists, else use the current value stored in state\n      var subtotalPerceptions = item === PERCEPTIONS_SUBTOTAL ? subtotal : this.state[PERCEPTIONS_SUBTOTAL];\n      var subtotalDeductions = item === DEDUCTIONS_SUBTOTAL ? subtotal : this.state[DEDUCTIONS_SUBTOTAL];\n      var subtotalOtherPerceptions = item === OTHER_PERCEPTIONS_SUBTOTAL ? subtotal : this.state[OTHER_PERCEPTIONS_SUBTOTAL];\n      var subtotalOvertimes = item === OVERTIMES_SUBTOTAL ? subtotal : this.state[OVERTIMES_SUBTOTAL]; // const subtotalSeparations = (item === SEPARATIONS_SUBTOTAL)\n      //   ? subtotal\n      //   : this.state[SEPARATIONS_SUBTOTAL]\n\n      var subtotalDisabilities = item === DISABILITIES_SUBTOTAL ? subtotal : this.state[DISABILITIES_SUBTOTAL];\n      var perceptionsTotal = subtotalPerceptions + subtotalOtherPerceptions + subtotalOvertimes; // + subtotalSeparations\n\n      var deductionsTotal = subtotalDeductions;\n\n      if (item === 'subtotalDisabilities' && isSubstraction) {\n        deductionsTotal += subtotalDisabilities;\n      } else {\n        perceptionsTotal += subtotalDisabilities;\n      }\n\n      var total = perceptionsTotal - deductionsTotal;\n      this.setState((_this$setState = {}, _defineProperty(_this$setState, PERCEPTIONS_SUBTOTAL, subtotalPerceptions), _defineProperty(_this$setState, DEDUCTIONS_SUBTOTAL, subtotalDeductions), _defineProperty(_this$setState, OTHER_PERCEPTIONS_SUBTOTAL, subtotalOtherPerceptions), _defineProperty(_this$setState, OVERTIMES_SUBTOTAL, subtotalOvertimes), _defineProperty(_this$setState, DISABILITIES_SUBTOTAL, subtotalDisabilities), _defineProperty(_this$setState, \"perceptionsTotal\", perceptionsTotal), _defineProperty(_this$setState, \"deductionsTotal\", deductionsTotal), _defineProperty(_this$setState, \"total\", total), _this$setState));\n    } // Render totals Row\n\n  }, {\n    key: \"renderTotals\",\n    value: function renderTotals() {\n      return React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column is-offset-7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"tfoot\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        className: \"align-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"TOTAL PERCEPCIONES:\"), React.createElement(\"td\", {\n        className: \"has-text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, accounting.formatMoney(this.state.perceptionsTotal, '$ '))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        className: \"align-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"TOTAL DEDUCCIONES:\"), React.createElement(\"td\", {\n        className: \"has-text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, accounting.formatMoney(this.state.deductionsTotal, '$ '))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        className: \"align-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"TOTAL:\"), React.createElement(\"td\", {\n        className: \"has-text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, accounting.formatMoney(this.state.total, '$ ')))))));\n    } // Main render\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(Perceptions, {\n        updatePayrollTotals: this.updatePayrollTotals.bind(this),\n        keyId: PERCEPTIONS_SUBTOTAL,\n        ref: PERCEPTIONS_KEY,\n        onValidationError: this.props.onValidationError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), React.createElement(Deductions, {\n        updatePayrollTotals: this.updatePayrollTotals.bind(this),\n        keyId: DEDUCTIONS_SUBTOTAL,\n        ref: DEDUCTIONS_KEY,\n        onValidationError: this.props.onValidationError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }), React.createElement(OtherPerceptions, {\n        updatePayrollTotals: this.updatePayrollTotals.bind(this),\n        keyId: OTHER_PERCEPTIONS_SUBTOTAL,\n        ref: OTHER_PERCEPTIONS_KEY,\n        onValidationError: this.props.onValidationError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }), React.createElement(Overtimes, {\n        updatePayrollTotals: this.updatePayrollTotals.bind(this),\n        keyId: OVERTIMES_SUBTOTAL,\n        ref: OVERTIMES_KEY,\n        onValidationError: this.props.onValidationError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }), React.createElement(Disabilities, {\n        updatePayrollTotals: this.updatePayrollTotals.bind(this),\n        keyId: DISABILITIES_SUBTOTAL,\n        ref: DISABILITIES_KEY,\n        onValidationError: this.props.onValidationError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }), this.renderTotals());\n    }\n  }]);\n\n  return PayrollCharges;\n}(Component);\n\nPayrollCharges.propTypes = {\n  onValidationError: PropTypes.func\n};\nPayrollCharges.defaultProps = {\n  onValidationError: function onValidationError() {}\n};\nexport default PayrollCharges;","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/newInvoice/shared/payrollCharges/index.js"],"names":["React","Component","PropTypes","accounting","amountToCents","Perceptions","OtherPerceptions","Overtimes","Deductions","Disabilities","PERCEPTIONS_KEY","DEDUCTIONS_KEY","DISABILITIES_KEY","OVERTIMES_KEY","OTHER_PERCEPTIONS_KEY","PERCEPTIONS_SUBTOTAL","OTHER_PERCEPTIONS_SUBTOTAL","OVERTIMES_SUBTOTAL","DEDUCTIONS_SUBTOTAL","DISABILITIES_SUBTOTAL","PayrollCharges","data","state","Object","assign","refs","validateRequiredFields","exportPerceptions","exportOtherPerceptions","exportOvertimes","exportDeductions","exportDisabilities","discountCents","discount","subtotalCents","total","totalCents","subtotal_cents","total_cents","discount_cents","item","subtotal","isSubstraction","subtotalPerceptions","subtotalDeductions","subtotalOtherPerceptions","subtotalOvertimes","subtotalDisabilities","perceptionsTotal","deductionsTotal","setState","formatMoney","updatePayrollTotals","bind","props","onValidationError","renderTotals","propTypes","func","defaultProps"],"mappings":"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","sourcesContent":["// Libraries\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport accounting from 'accounting'\n\nimport { amountToCents } from 'utils'\n\n// Sub components\nimport Perceptions from './perceptions'\nimport OtherPerceptions from './otherPerceptions'\nimport Overtimes from './overtimes'\nimport Deductions from './deductions'\n// import Separations from './separations'\nimport Disabilities from './disabilities'\n\n// Keys\nconst PERCEPTIONS_KEY = 'perception_mgs'\nconst DEDUCTIONS_KEY = 'deduction_mgs'\n// const SEPARATIONS_KEY = 'separations_mgs'\nconst DISABILITIES_KEY = 'disability_mgs'\nconst OVERTIMES_KEY = 'overtime_mgs'\nconst OTHER_PERCEPTIONS_KEY = 'other_payment_mgs'\n\n// Fixed Keys\nconst PERCEPTIONS_SUBTOTAL = 'subtotalPerceptions'\nconst OTHER_PERCEPTIONS_SUBTOTAL = 'subtotalOtherPerceptions'\nconst OVERTIMES_SUBTOTAL = 'subtotalOvertimes'\nconst DEDUCTIONS_SUBTOTAL = 'subtotalDeductions'\n// const SEPARATIONS_SUBTOTAL = 'subtotalSeparations'\nconst DISABILITIES_SUBTOTAL = 'subtotalDisabilities'\n\n// Concepts for payroll invoice\nclass PayrollCharges extends Component {\n  constructor () {\n    super()\n    this.data = {\n      [PERCEPTIONS_SUBTOTAL]: 0,\n      [OTHER_PERCEPTIONS_SUBTOTAL]: 0,\n      [OVERTIMES_SUBTOTAL]: 0,\n      [DEDUCTIONS_SUBTOTAL]: 0,\n      // [SEPARATIONS_SUBTOTAL]: 0,\n      [DISABILITIES_SUBTOTAL]: 0,\n      perceptionsTotal: 0,\n      deductionsTotal: 0,\n      discount: 0,\n      total: 0\n    }\n    this.state = Object.assign({}, this.data)\n  }\n\n  // Run validations on all refs\n  validateAll () {\n    return (\n      this.refs[PERCEPTIONS_KEY].validateRequiredFields() &&\n      this.refs[DEDUCTIONS_KEY].validateRequiredFields() &&\n      this.refs[OTHER_PERCEPTIONS_KEY].validateRequiredFields() &&\n      this.refs[OVERTIMES_KEY].validateRequiredFields() &&\n      // this.refs[SEPARATIONS_KEY].validateRequiredFields() &&\n      this.refs[DISABILITIES_KEY].validateRequiredFields()\n    )\n  }\n\n  // Export concepts for every perception type\n  exportPerceptions () {\n    return {\n      [PERCEPTIONS_KEY]: this.refs[PERCEPTIONS_KEY].exportPerceptions()\n    }\n  }\n\n  // Export concepts for every other perception type\n  exportOtherPerceptions () {\n    return this.refs[OTHER_PERCEPTIONS_KEY].exportOtherPerceptions()\n  }\n\n  // Export concepts for every overtime type\n  exportOvertimes () {\n    return this.refs[OVERTIMES_KEY].exportOvertimes()\n  }\n\n  // Export concepts for every deduction type\n  exportDeductions () {\n    return {\n      [DEDUCTIONS_KEY]: this.refs[DEDUCTIONS_KEY].exportDeductions()\n    }\n  }\n\n  // // Export concepts for every separations type\n  // exportSeparations () {\n  //   return {\n  //     [SEPARATIONS_KEY]: this.refs[SEPARATIONS_KEY].exportSeparations()\n  //   }\n  // }\n\n  // Export concepts for every disabiolity type\n  exportDisabilities () {\n    return this.refs[DISABILITIES_KEY].exportDisabilities()\n  }\n\n  // Format totals and export them\n  exportTotals () {\n    const discountCents = amountToCents(this.state.discount)\n    const subtotalCents = amountToCents(this.state.total)\n    const totalCents = subtotalCents - discountCents\n    return {\n      subtotal_cents: subtotalCents,\n      total_cents: totalCents,\n      discount_cents: discountCents\n    }\n  }\n\n  // Handle changes to totals\n  updatePayrollTotals (item, subtotal, isSubstraction = false) {\n    // Read value from args if exists, else use the current value stored in state\n    const subtotalPerceptions =\n      item === PERCEPTIONS_SUBTOTAL\n        ? subtotal\n        : this.state[PERCEPTIONS_SUBTOTAL]\n    const subtotalDeductions =\n      item === DEDUCTIONS_SUBTOTAL ? subtotal : this.state[DEDUCTIONS_SUBTOTAL]\n    const subtotalOtherPerceptions =\n      item === OTHER_PERCEPTIONS_SUBTOTAL\n        ? subtotal\n        : this.state[OTHER_PERCEPTIONS_SUBTOTAL]\n    const subtotalOvertimes =\n      item === OVERTIMES_SUBTOTAL ? subtotal : this.state[OVERTIMES_SUBTOTAL]\n    // const subtotalSeparations = (item === SEPARATIONS_SUBTOTAL)\n    //   ? subtotal\n    //   : this.state[SEPARATIONS_SUBTOTAL]\n    const subtotalDisabilities =\n      item === DISABILITIES_SUBTOTAL\n        ? subtotal\n        : this.state[DISABILITIES_SUBTOTAL]\n\n    let perceptionsTotal =\n      subtotalPerceptions + subtotalOtherPerceptions + subtotalOvertimes // + subtotalSeparations\n    let deductionsTotal = subtotalDeductions\n    if (item === 'subtotalDisabilities' && isSubstraction) {\n      deductionsTotal += subtotalDisabilities\n    } else {\n      perceptionsTotal += subtotalDisabilities\n    }\n    const total = perceptionsTotal - deductionsTotal\n\n    this.setState({\n      [PERCEPTIONS_SUBTOTAL]: subtotalPerceptions,\n      [DEDUCTIONS_SUBTOTAL]: subtotalDeductions,\n      [OTHER_PERCEPTIONS_SUBTOTAL]: subtotalOtherPerceptions,\n      [OVERTIMES_SUBTOTAL]: subtotalOvertimes,\n      // [SEPARATIONS_SUBTOTAL]: subtotalSeparations,\n      [DISABILITIES_SUBTOTAL]: subtotalDisabilities,\n      perceptionsTotal: perceptionsTotal,\n      deductionsTotal: deductionsTotal,\n      total: total\n    })\n  }\n\n  // Render totals Row\n  renderTotals () {\n    return (\n      <div className='columns'>\n        <div className='column is-offset-7'>\n          <table className='table'>\n            <tfoot>\n              <tr>\n                <td className='align-left'>TOTAL PERCEPCIONES:</td>\n                <td className='has-text-right'>\n                  {accounting.formatMoney(this.state.perceptionsTotal, '$ ')}\n                </td>\n              </tr>\n              <tr>\n                <td className='align-left'>TOTAL DEDUCCIONES:</td>\n                <td className='has-text-right'>\n                  {accounting.formatMoney(this.state.deductionsTotal, '$ ')}\n                </td>\n              </tr>\n              <tr>\n                <td className='align-left'>TOTAL:</td>\n                <td className='has-text-right'>\n                  {accounting.formatMoney(this.state.total, '$ ')}\n                </td>\n              </tr>\n            </tfoot>\n          </table>\n        </div>\n      </div>\n    )\n  }\n\n  // Main render\n  render () {\n    return (\n      <div>\n        <Perceptions\n          updatePayrollTotals={this.updatePayrollTotals.bind(this)}\n          keyId={PERCEPTIONS_SUBTOTAL}\n          ref={PERCEPTIONS_KEY}\n          onValidationError={this.props.onValidationError}\n        />\n        <Deductions\n          updatePayrollTotals={this.updatePayrollTotals.bind(this)}\n          keyId={DEDUCTIONS_SUBTOTAL}\n          ref={DEDUCTIONS_KEY}\n          onValidationError={this.props.onValidationError}\n        />\n        <OtherPerceptions\n          updatePayrollTotals={this.updatePayrollTotals.bind(this)}\n          keyId={OTHER_PERCEPTIONS_SUBTOTAL}\n          ref={OTHER_PERCEPTIONS_KEY}\n          onValidationError={this.props.onValidationError}\n        />\n        <Overtimes\n          updatePayrollTotals={this.updatePayrollTotals.bind(this)}\n          keyId={OVERTIMES_SUBTOTAL}\n          ref={OVERTIMES_KEY}\n          onValidationError={this.props.onValidationError}\n        />\n        {/* <Separations\n          updatePayrollTotals={this.updatePayrollTotals.bind(this)}\n          keyId={SEPARATIONS_SUBTOTAL}\n          ref={SEPARATIONS_KEY}\n        /> */}\n        <Disabilities\n          updatePayrollTotals={this.updatePayrollTotals.bind(this)}\n          keyId={DISABILITIES_SUBTOTAL}\n          ref={DISABILITIES_KEY}\n          onValidationError={this.props.onValidationError}\n        />\n        {this.renderTotals()}\n      </div>\n    )\n  }\n}\n\nPayrollCharges.propTypes = {\n  onValidationError: PropTypes.func\n}\n\nPayrollCharges.defaultProps = {\n  onValidationError: () => {}\n}\n\nexport default PayrollCharges\n"]},"metadata":{},"sourceType":"module"}