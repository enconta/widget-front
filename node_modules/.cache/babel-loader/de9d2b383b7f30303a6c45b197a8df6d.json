{"ast":null,"code":"var _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/viewInvoice/concepts/index.js\";\n// Libraries\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport accounting from 'accounting';\nimport { TAXES } from 'shared/catalogs'; // Render Concepts for invoice with version 3.2\n\nvar render33 = function render33(invoice) {\n  var concepts = invoice.line_items;\n  var renderConcepts = null;\n  var renderTotals = null;\n\n  if (concepts.length > 0) {\n    renderConcepts = concepts.map(function (concept, index) {\n      return React.createElement(\"tr\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, concept.quantity), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, concept.unit_type), React.createElement(\"td\", {\n        className: \"align-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, concept.description), React.createElement(\"td\", {\n        className: \"has-text-right with-border-bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, accounting.formatMoney(concept.unit_price_cents / 100, '$ ', 2)), React.createElement(\"td\", {\n        className: \"has-text-right with-border-bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, accounting.formatMoney(concept.total_cents / 100, '$ ', 2)));\n    });\n    renderTotals = React.createElement(\"tfoot\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      className: \"no-border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      colSpan: 3,\n      className: \"with-border-top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(\"th\", {\n      className: \"has-text-right with-border-bottom with-borer-top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Subtotal\"), React.createElement(\"td\", {\n      className: \"has-text-right with-border-bottom with-borer-top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, accounting.formatMoney(concepts.map(function (concept) {\n      return concept.total_cents;\n    }).reduce(function (acc, curr) {\n      return acc + curr;\n    }, 0) / 100, '$ ', 2))), invoice.tax_detail && invoice.tax_detail.retained_taxes && invoice.tax_detail.retained_taxes.map(function (tax) {\n      return React.createElement(\"tr\", {\n        key: tax._id.$oid,\n        className: \"no-border\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(\"th\", {\n        className: \"has-text-right with-border-bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"\".concat(invoice.version === '3.2' ? tax.tax_name : TAXES.find(function (taxType) {\n        return taxType.id === tax.tax_name;\n      }).label, \" retenido\")), React.createElement(\"td\", {\n        className: \"has-text-right with-border-bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"(\", accounting.formatMoney(tax.amount_cents / 100, '$ ', 2), \")\"));\n    }), invoice.tax_detail && invoice.tax_detail.transferred_taxes && invoice.tax_detail.transferred_taxes.map(function (tax) {\n      return React.createElement(\"tr\", {\n        key: tax._id.$oid,\n        className: \"no-border\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"th\", {\n        className: \"has-text-right with-border-bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"\".concat(invoice.version === '3.2' ? tax.tax_name : TAXES.find(function (taxType) {\n        return taxType.id === tax.tax_name;\n      }).label, \" trasladado\")), React.createElement(\"td\", {\n        className: \"has-text-right with-border-bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, accounting.formatMoney(tax.amount_cents / 100, '$ ', 2)));\n    }), invoice.discount_cents ? React.createElement(\"tr\", {\n      key: \"discount_cents\",\n      className: \"no-border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      colSpan: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"th\", {\n      className: \"has-text-right with-border-bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Descuento\"), React.createElement(\"td\", {\n      className: \"has-text-right with-border-bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"(\", accounting.formatMoney(invoice.discount_cents / 100, '$ ', 2), \")\")) : null, React.createElement(\"tr\", {\n      className: \"no-border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      colSpan: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"th\", {\n      className: \"has-text-right is-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Total\"), React.createElement(\"td\", {\n      className: \"has-text-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, accounting.formatMoney(invoice.total_cents / 100, '$ ', 2))));\n  }\n\n  return React.createElement(\"table\", {\n    className: \"table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    style: {\n      width: '8rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Cantidad\"), React.createElement(\"th\", {\n    style: {\n      minWidth: '8rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Unidad\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Descripci\\xF3n\"), React.createElement(\"th\", {\n    style: {\n      width: '9rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Precio Unitario\"), React.createElement(\"th\", {\n    style: {\n      width: '8rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Total\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, renderConcepts), renderTotals);\n};\n\nvar Concepts = function Concepts(props) {\n  // Main render\n  var concepts = React.createElement(\"div\", {\n    className: \"block unselectable\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"No hay conceptos\"));\n\n  switch (props.invoice.version) {\n    case '3.2':\n      concepts = render33(props.invoice);\n      break;\n\n    case '3.3':\n      concepts = render33(props.invoice);\n      break;\n  }\n\n  return React.createElement(\"div\", {\n    className: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"subheader-green\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Conceptos\"), React.createElement(\"div\", {\n    className: \"columns\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, concepts)));\n};\n\nConcepts.propTypes = {\n  invoice: PropTypes.shape({\n    version: PropTypes.string\n  })\n};\nexport default Concepts;","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/viewInvoice/concepts/index.js"],"names":["React","PropTypes","accounting","TAXES","render33","invoice","concepts","line_items","renderConcepts","renderTotals","length","map","concept","index","quantity","unit_type","description","formatMoney","unit_price_cents","total_cents","reduce","acc","curr","tax_detail","retained_taxes","tax","_id","$oid","version","tax_name","find","taxType","id","label","amount_cents","transferred_taxes","discount_cents","width","minWidth","Concepts","props","propTypes","shape","string"],"mappings":"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","sourcesContent":["// Libraries\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport accounting from 'accounting'\n\nimport { TAXES } from 'shared/catalogs'\n\n// Render Concepts for invoice with version 3.2\nconst render33 = invoice => {\n  let concepts = invoice.line_items\n  let renderConcepts = null\n  let renderTotals = null\n  if (concepts.length > 0) {\n    renderConcepts = concepts.map((concept, index) => {\n      return (\n        <tr key={index}>\n          <td>{concept.quantity}</td>\n          <td>{concept.unit_type}</td>\n          <td className='align-left'>{concept.description}</td>\n          <td className='has-text-right with-border-bottom'>\n            {accounting.formatMoney(concept.unit_price_cents / 100, '$ ', 2)}\n          </td>\n          <td className='has-text-right with-border-bottom'>\n            {accounting.formatMoney(concept.total_cents / 100, '$ ', 2)}\n          </td>\n        </tr>\n      )\n    })\n    renderTotals = (\n      <tfoot>\n        <tr className='no-border'>\n          <td colSpan={3} className='with-border-top' />\n          <th className='has-text-right with-border-bottom with-borer-top'>\n            Subtotal\n          </th>\n          <td className='has-text-right with-border-bottom with-borer-top'>\n            {accounting.formatMoney(\n              concepts\n                .map(concept => concept.total_cents)\n                .reduce((acc, curr) => acc + curr, 0) / 100,\n              '$ ',\n              2\n            )}\n          </td>\n        </tr>\n        {invoice.tax_detail &&\n          invoice.tax_detail.retained_taxes &&\n          invoice.tax_detail.retained_taxes.map(tax => (\n            <tr key={tax._id.$oid} className='no-border'>\n              <td colSpan={3} />\n              <th className='has-text-right with-border-bottom'>\n                {`${\n                  invoice.version === '3.2'\n                    ? tax.tax_name\n                    : TAXES.find(taxType => taxType.id === tax.tax_name).label\n                } retenido`}\n              </th>\n              <td className='has-text-right with-border-bottom'>\n                ({accounting.formatMoney(tax.amount_cents / 100, '$ ', 2)})\n              </td>\n            </tr>\n          ))}\n        {invoice.tax_detail &&\n          invoice.tax_detail.transferred_taxes &&\n          invoice.tax_detail.transferred_taxes.map(tax => (\n            <tr key={tax._id.$oid} className='no-border'>\n              <td colSpan={3} />\n              <th className='has-text-right with-border-bottom'>\n                {`${\n                  invoice.version === '3.2'\n                    ? tax.tax_name\n                    : TAXES.find(taxType => taxType.id === tax.tax_name).label\n                } trasladado`}\n              </th>\n              <td className='has-text-right with-border-bottom'>\n                {accounting.formatMoney(tax.amount_cents / 100, '$ ', 2)}\n              </td>\n            </tr>\n          ))}\n        {invoice.discount_cents ? (\n          <tr key='discount_cents' className='no-border'>\n            <td colSpan={3} />\n            <th className='has-text-right with-border-bottom'>Descuento</th>\n            <td className='has-text-right with-border-bottom'>\n              ({accounting.formatMoney(invoice.discount_cents / 100, '$ ', 2)})\n            </td>\n          </tr>\n        ) : null}\n        <tr className='no-border'>\n          <td colSpan={3} />\n          <th className='has-text-right is-bold'>Total</th>\n          <td className='has-text-right'>\n            {accounting.formatMoney(invoice.total_cents / 100, '$ ', 2)}\n          </td>\n        </tr>\n      </tfoot>\n    )\n  }\n  return (\n    <table className='table'>\n      <thead>\n        <tr>\n          <th style={{ width: '8rem' }}>Cantidad</th>\n          <th style={{ minWidth: '8rem' }}>Unidad</th>\n          <th>Descripción</th>\n          <th style={{ width: '9rem' }}>Precio Unitario</th>\n          <th style={{ width: '8rem' }}>Total</th>\n        </tr>\n      </thead>\n      <tbody>{renderConcepts}</tbody>\n      {renderTotals}\n    </table>\n  )\n}\n\nconst Concepts = props => {\n  // Main render\n  let concepts = (\n    <div className='block unselectable'>\n      <p>No hay conceptos</p>\n    </div>\n  )\n  switch (props.invoice.version) {\n    case '3.2':\n      concepts = render33(props.invoice)\n      break\n    case '3.3':\n      concepts = render33(props.invoice)\n      break\n  }\n  return (\n    <div className='column'>\n      <h4 className='subheader-green'>Conceptos</h4>\n      <div className='columns'>\n        <div className='column'>{concepts}</div>\n      </div>\n    </div>\n  )\n}\n\nConcepts.propTypes = {\n  invoice: PropTypes.shape({\n    version: PropTypes.string\n  })\n}\n\nexport default Concepts\n"]},"metadata":{},"sourceType":"module"}