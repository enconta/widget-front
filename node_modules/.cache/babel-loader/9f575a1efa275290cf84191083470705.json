{"ast":null,"code":"import _toConsumableArray from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/recuperar-contrasena/index.js\";\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, browserHistory } from 'react-router';\nimport DocumentTitle from 'react-document-title';\nimport AppSignal from 'appsignal';\nimport NotificationsContainer from 'shared/notifications';\nimport Logo from 'shared/logo';\nimport TextField from 'shared/textField/index';\nimport Button from 'shared/button';\nimport API from 'api';\nimport NotificationsActions from 'actions/notifications';\nimport SessionActions from 'actions/session'; // Keys\n\nvar EMAIL_KEY = 'email';\nvar PASSWORD_KEY = 'password';\nvar TOKEN_KEY = 'token';\nvar requiredFields = new Set();\n\nvar RecoverPassword =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RecoverPassword, _Component);\n\n  function RecoverPassword(props) {\n    var _this$data;\n\n    var _this;\n\n    _classCallCheck(this, RecoverPassword);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RecoverPassword).call(this, props));\n    _this.data = (_this$data = {\n      requestSuccessful: false,\n      requestInProgress: false\n    }, _defineProperty(_this$data, EMAIL_KEY, ''), _defineProperty(_this$data, PASSWORD_KEY, ''), _this$data);\n    _this.state = Object.assign({}, _this.data);\n    return _this;\n  }\n\n  _createClass(RecoverPassword, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      requiredFields.clear();\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(field, e) {\n      this.setState(_defineProperty({}, field, e.target.value));\n    } // Iterates over required fields and validates every one of them\n    // Then it returns true if all validations succeedeed, else false.\n\n  }, {\n    key: \"validateAll\",\n    value: function validateAll() {\n      var _this2 = this;\n\n      return _toConsumableArray(requiredFields) // Converts the Set() into an array\n      .filter(Boolean) // Filters the array from any falsy value\n      .map(function (form) {\n        return form.validate.call(_this2);\n      }) // Calls the validate() method on each form\n      .every(function (e) {\n        return e;\n      }); // Checks if all validations suceeded\n    }\n  }, {\n    key: \"sendData\",\n    value: function sendData(e) {\n      var _this3 = this;\n\n      e.preventDefault();\n\n      if (this.validateAll()) {\n        this.setState({\n          requestInProgress: true\n        }, function () {\n          SessionActions.resetPassword(_defineProperty({}, EMAIL_KEY, _this3.state[EMAIL_KEY])).then(function (r) {\n            _this3.setState({\n              requestSuccessful: true,\n              requestInProgress: false\n            });\n          }).catch(function (r) {\n            _this3.setState({\n              requestInProgress: false\n            });\n          });\n        });\n      }\n    }\n  }, {\n    key: \"changePassword\",\n    value: function changePassword(token) {\n      var _this4 = this;\n\n      if (this.validateAll()) {\n        this.setState({\n          requestInProgress: true\n        }, function () {\n          var _API$User$ChangePassw;\n\n          API.User.ChangePassword((_API$User$ChangePassw = {}, _defineProperty(_API$User$ChangePassw, TOKEN_KEY, token), _defineProperty(_API$User$ChangePassw, PASSWORD_KEY, _this4.state[PASSWORD_KEY]), _API$User$ChangePassw)).then(function (r) {\n            NotificationsActions.success('Contrase√±a cambiada exitosamente');\n\n            _this4.setState({\n              requestInProgress: false\n            });\n\n            browserHistory.push('/');\n          }).catch(function (error) {\n            NotificationsActions.error(error);\n\n            _this4.setState({\n              requestInProgress: false\n            });\n\n            AppSignal.sendError(error);\n          });\n        });\n      }\n    } // Render the recover password inputs\n\n  }, {\n    key: \"requestNewPassword\",\n    value: function requestNewPassword() {\n      var requestNewPassword = null;\n\n      if (!this.state.requestSuccessful) {\n        requestNewPassword = React.createElement(Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          onSubmit: this.sendData.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"login-box__text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, \"Para restablecer tu contrase\\xF1a te enviaremos un link, por favor ingresa tu correo:\"), React.createElement(TextField, {\n          className: \"login-box__input\",\n          type: \"email\",\n          placeholder: \"Correo electr\\xF3nico\",\n          value: this.state[EMAIL_KEY],\n          onChange: this.onChange.bind(this, EMAIL_KEY),\n          required: true,\n          ref: function ref(r) {\n            return requiredFields.add(r);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }), React.createElement(Button, {\n          buttonStyle: \"primary\",\n          className: \"is-fullwidth login-top-2rem login-box__input\",\n          type: \"submit\",\n          onClick: this.sendData.bind(this),\n          loading: this.state.requestInProgress,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, \"Recuperar contrase\\xF1a\"), React.createElement(Link, {\n          to: \"/\",\n          className: \"is-fullwidth login-box__button-start\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, \"Ir al inicio\")));\n      } else {\n        requestNewPassword = React.createElement(Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"login-box__text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, \"Se ha enviado un correo a \", this.state[EMAIL_KEY], \" para poder restablecer tu contrase\\xF1a.\"), React.createElement(Link, {\n          to: \"/\",\n          className: \"encontaButton encontaButton__login primary is-fullwidth\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, \"Ir al inicio\"));\n      }\n\n      return requestNewPassword;\n    } // Render form for wrigin your new password\n\n  }, {\n    key: \"renderNewPassword\",\n    value: function renderNewPassword() {\n      var renderNewPassword = null;\n\n      if (typeof this.props.location.query[TOKEN_KEY] !== 'undefined') {\n        renderNewPassword = React.createElement(\"div\", {\n          className: \"content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, \"Ingresa tu nueva contrase\\xF1a\"), React.createElement(TextField, {\n          className: \"login-box__input\",\n          type: \"password\",\n          placeholder: \"Contrase\\xF1a\",\n          value: this.state[PASSWORD_KEY],\n          onChange: this.onChange.bind(this, [PASSWORD_KEY]),\n          required: true,\n          ref: function ref(r) {\n            return requiredFields.add(r);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }), React.createElement(Button, {\n          buttonStyle: \"primary\",\n          className: \"is-fullwidth\",\n          onClick: this.changePassword.bind(this, this.props.location.query[TOKEN_KEY]),\n          loading: this.state.requestInProgress,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, \"Guardar\"));\n      }\n\n      return renderNewPassword;\n    } // Main render\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var render = typeof this.props.location.query[TOKEN_KEY] !== 'undefined' ? this.renderNewPassword() : this.requestNewPassword();\n      return React.createElement(DocumentTitle, {\n        title: \"Restablecer tu contrase\\xF1a - Enconta\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"login-page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"login-box__background-vectors\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"login-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(Logo, {\n        logoSize: 'normal',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }), render), React.createElement(NotificationsContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return RecoverPassword;\n}(Component);\n\nRecoverPassword.propTypes = {\n  location: PropTypes.shape({\n    query: PropTypes.object\n  })\n};\nexport default RecoverPassword;","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/recuperar-contrasena/index.js"],"names":["React","Component","Fragment","PropTypes","Link","browserHistory","DocumentTitle","AppSignal","NotificationsContainer","Logo","TextField","Button","API","NotificationsActions","SessionActions","EMAIL_KEY","PASSWORD_KEY","TOKEN_KEY","requiredFields","Set","RecoverPassword","props","data","requestSuccessful","requestInProgress","state","Object","assign","clear","field","e","setState","target","value","filter","Boolean","map","form","validate","call","every","preventDefault","validateAll","resetPassword","then","r","catch","token","User","ChangePassword","success","push","error","sendError","requestNewPassword","sendData","bind","onChange","add","renderNewPassword","location","query","changePassword","render","propTypes","shape","object"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link, browserHistory } from 'react-router'\nimport DocumentTitle from 'react-document-title'\nimport AppSignal from 'appsignal'\n\nimport NotificationsContainer from 'shared/notifications'\nimport Logo from 'shared/logo'\nimport TextField from 'shared/textField/index'\nimport Button from 'shared/button'\nimport API from 'api'\n\nimport NotificationsActions from 'actions/notifications'\nimport SessionActions from 'actions/session'\n\n// Keys\nconst EMAIL_KEY = 'email'\nconst PASSWORD_KEY = 'password'\nconst TOKEN_KEY = 'token'\n\nconst requiredFields = new Set()\n\nclass RecoverPassword extends Component {\n  constructor (props) {\n    super(props)\n    this.data = {\n      requestSuccessful: false,\n      requestInProgress: false,\n      [EMAIL_KEY]: '',\n      [PASSWORD_KEY]: ''\n    }\n    this.state = Object.assign({}, this.data)\n  }\n\n  componentWillUnmount () {\n    requiredFields.clear()\n  }\n\n  onChange (field, e) {\n    this.setState({ [field]: e.target.value })\n  }\n\n  // Iterates over required fields and validates every one of them\n  // Then it returns true if all validations succeedeed, else false.\n  validateAll () {\n    return [...requiredFields] // Converts the Set() into an array\n      .filter(Boolean) // Filters the array from any falsy value\n      .map(form => form.validate.call(this)) // Calls the validate() method on each form\n      .every(e => e) // Checks if all validations suceeded\n  }\n\n  sendData (e) {\n    e.preventDefault()\n    if (this.validateAll()) {\n      this.setState({ requestInProgress: true }, () => {\n        SessionActions.resetPassword({ [EMAIL_KEY]: this.state[EMAIL_KEY] })\n          .then(r => {\n            this.setState({\n              requestSuccessful: true,\n              requestInProgress: false\n            })\n          })\n          .catch(r => {\n            this.setState({ requestInProgress: false })\n          })\n      })\n    }\n  }\n\n  changePassword (token) {\n    if (this.validateAll()) {\n      this.setState({ requestInProgress: true }, () => {\n        API.User.ChangePassword({\n          [TOKEN_KEY]: token,\n          [PASSWORD_KEY]: this.state[PASSWORD_KEY]\n        })\n          .then(r => {\n            NotificationsActions.success('Contrase√±a cambiada exitosamente')\n            this.setState({ requestInProgress: false })\n            browserHistory.push('/')\n          })\n          .catch(error => {\n            NotificationsActions.error(error)\n            this.setState({ requestInProgress: false })\n            AppSignal.sendError(error)\n          })\n      })\n    }\n  }\n\n  // Render the recover password inputs\n  requestNewPassword () {\n    let requestNewPassword = null\n    if (!this.state.requestSuccessful) {\n      requestNewPassword = (\n        <Fragment>\n          <form onSubmit={this.sendData.bind(this)}>\n            <p className='login-box__text'>\n              Para restablecer tu contrase√±a te enviaremos un link, por favor\n              ingresa tu correo:\n            </p>\n            <TextField\n              className='login-box__input'\n              type='email'\n              placeholder='Correo electr√≥nico'\n              value={this.state[EMAIL_KEY]}\n              onChange={this.onChange.bind(this, EMAIL_KEY)}\n              required\n              ref={r => requiredFields.add(r)}\n            />\n            <Button\n              buttonStyle='primary'\n              className='is-fullwidth login-top-2rem login-box__input'\n              type='submit'\n              onClick={this.sendData.bind(this)}\n              loading={this.state.requestInProgress}\n            >\n              Recuperar contrase√±a\n            </Button>\n            <Link to='/' className='is-fullwidth login-box__button-start'>\n              Ir al inicio\n            </Link>\n          </form>\n        </Fragment>\n      )\n    } else {\n      requestNewPassword = (\n        <Fragment>\n          <p className='login-box__text'>\n            Se ha enviado un correo a {this.state[EMAIL_KEY]} para poder\n            restablecer tu contrase√±a.\n          </p>\n          <Link\n            to='/'\n            className='encontaButton encontaButton__login primary is-fullwidth'\n          >\n            Ir al inicio\n          </Link>\n        </Fragment>\n      )\n    }\n    return requestNewPassword\n  }\n\n  // Render form for wrigin your new password\n  renderNewPassword () {\n    let renderNewPassword = null\n    if (typeof this.props.location.query[TOKEN_KEY] !== 'undefined') {\n      renderNewPassword = (\n        <div className='content'>\n          <p>Ingresa tu nueva contrase√±a</p>\n          <TextField\n            className='login-box__input'\n            type='password'\n            placeholder='Contrase√±a'\n            value={this.state[PASSWORD_KEY]}\n            onChange={this.onChange.bind(this, [PASSWORD_KEY])}\n            required\n            ref={r => requiredFields.add(r)}\n          />\n          <Button\n            buttonStyle='primary'\n            className='is-fullwidth'\n            onClick={this.changePassword.bind(\n              this,\n              this.props.location.query[TOKEN_KEY]\n            )}\n            loading={this.state.requestInProgress}\n          >\n            Guardar\n          </Button>\n        </div>\n      )\n    }\n    return renderNewPassword\n  }\n\n  // Main render\n  render () {\n    let render =\n      typeof this.props.location.query[TOKEN_KEY] !== 'undefined'\n        ? this.renderNewPassword()\n        : this.requestNewPassword()\n    return (\n      <DocumentTitle title='Restablecer tu contrase√±a - Enconta'>\n        <div className='login-page'>\n          <div className='login-box__background-vectors' />\n          <div className='login-box'>\n            <Logo logoSize={'normal'} />\n            {render}\n          </div>\n          <NotificationsContainer />\n        </div>\n      </DocumentTitle>\n    )\n  }\n}\n\nRecoverPassword.propTypes = {\n  location: PropTypes.shape({\n    query: PropTypes.object\n  })\n}\n\nexport default RecoverPassword\n"]},"metadata":{},"sourceType":"module"}