{"ast":null,"code":"import _defineProperty from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _toConsumableArray from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/shared/timepicker/index.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport SelectField from '../selectField';\nimport { formatNumberToString } from 'utils';\nvar HOURS_PER_DAY = 24;\nvar MINUTES_PER_HOUR = 60;\nvar HOUR_KEY = 'hour';\nvar MINUTE_KEY = 'minute';\n\nvar HOURS = _toConsumableArray(new Array(HOURS_PER_DAY)).map(function (x, i) {\n  return formatNumberToString(i, 2);\n});\n\nvar MINUTES = _toConsumableArray(new Array(MINUTES_PER_HOUR)).map(function (x, i) {\n  return formatNumberToString(i, 2);\n});\n/*\n * The TimePicker is designed to render 2 selects, one for hours (from 0 to 23) and one for minutes (from 0 to 59)\n * Saves the values on its state\n * By default, sets the hours and minutes to the current time on component mount (usually on a new page render)\n */\n\n\nvar TimePicker =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TimePicker, _Component);\n\n  function TimePicker() {\n    var _this$data;\n\n    var _this;\n\n    _classCallCheck(this, TimePicker);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TimePicker).call(this));\n    _this.data = (_this$data = {}, _defineProperty(_this$data, HOUR_KEY, moment().format('HH')), _defineProperty(_this$data, MINUTE_KEY, moment().format('mm')), _this$data);\n    _this.state = Object.assign({}, _this.data);\n    return _this;\n  }\n\n  _createClass(TimePicker, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var prevHour = prevProps.hour;\n      var _this$props = this.props,\n          currentHour = _this$props.hour,\n          currentMinute = _this$props.minute;\n      var typePrevHour = typeof prevHour;\n      var typeCurrentHour = typeof currentHour;\n\n      if (typePrevHour !== typeCurrentHour) {\n        this.setState({\n          hour: currentHour,\n          minute: currentMinute\n        });\n      }\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(field, e) {\n      var _this2 = this;\n\n      this.setState(_defineProperty({}, field, e.target.value), function () {\n        _this2.props.onChange({\n          hour: _this2.state[HOUR_KEY],\n          minute: _this2.state[MINUTE_KEY]\n        });\n      });\n    } // Main render\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(SelectField, {\n        label: \"Horas\",\n        options: HOURS,\n        value: this.state[HOUR_KEY],\n        onChange: this.onChange.bind(this, [HOUR_KEY]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(SelectField, {\n        label: \"Minutos\",\n        options: MINUTES,\n        value: this.state[MINUTE_KEY],\n        onChange: this.onChange.bind(this, [MINUTE_KEY]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return TimePicker;\n}(Component);\n\nTimePicker.propTypes = {\n  onChange: PropTypes.func\n};\nTimePicker.defaultProps = {\n  onChange: function onChange() {},\n  hour: moment().format('HH'),\n  minute: moment().format('mm')\n};\nexport default TimePicker;","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/shared/timepicker/index.js"],"names":["React","Component","PropTypes","moment","SelectField","formatNumberToString","HOURS_PER_DAY","MINUTES_PER_HOUR","HOUR_KEY","MINUTE_KEY","HOURS","Array","map","x","i","MINUTES","TimePicker","data","format","state","Object","assign","prevProps","prevHour","hour","props","currentHour","currentMinute","minute","typePrevHour","typeCurrentHour","setState","field","e","target","value","onChange","bind","propTypes","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport moment from 'moment'\n\nimport SelectField from '../selectField'\nimport { formatNumberToString } from 'utils'\n\nconst HOURS_PER_DAY = 24\nconst MINUTES_PER_HOUR = 60\nconst HOUR_KEY = 'hour'\nconst MINUTE_KEY = 'minute'\n\nconst HOURS = [...new Array(HOURS_PER_DAY)].map((x, i) =>\n  formatNumberToString(i, 2)\n)\nconst MINUTES = [...new Array(MINUTES_PER_HOUR)].map((x, i) =>\n  formatNumberToString(i, 2)\n)\n/*\n * The TimePicker is designed to render 2 selects, one for hours (from 0 to 23) and one for minutes (from 0 to 59)\n * Saves the values on its state\n * By default, sets the hours and minutes to the current time on component mount (usually on a new page render)\n */\n\nclass TimePicker extends Component {\n  constructor () {\n    super()\n    this.data = {\n      [HOUR_KEY]: moment().format('HH'),\n      [MINUTE_KEY]: moment().format('mm')\n    }\n    this.state = Object.assign({}, this.data)\n  }\n\n  componentDidUpdate (prevProps) {\n    const { hour: prevHour } = prevProps\n    const { hour: currentHour, minute: currentMinute } = this.props\n\n    const typePrevHour = typeof prevHour\n    const typeCurrentHour = typeof currentHour\n\n    if (typePrevHour !== typeCurrentHour) {\n      this.setState({ hour: currentHour, minute: currentMinute })\n    }\n  }\n\n  onChange (field, e) {\n    this.setState({ [field]: e.target.value }, () => {\n      this.props.onChange({\n        hour: this.state[HOUR_KEY],\n        minute: this.state[MINUTE_KEY]\n      })\n    })\n  }\n\n  // Main render\n  render () {\n    return (\n      <div className='columns'>\n        <div className='column'>\n          <SelectField\n            label='Horas'\n            options={HOURS}\n            value={this.state[HOUR_KEY]}\n            onChange={this.onChange.bind(this, [HOUR_KEY])}\n          />\n        </div>\n        <div className='column'>\n          <SelectField\n            label='Minutos'\n            options={MINUTES}\n            value={this.state[MINUTE_KEY]}\n            onChange={this.onChange.bind(this, [MINUTE_KEY])}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nTimePicker.propTypes = {\n  onChange: PropTypes.func\n}\n\nTimePicker.defaultProps = {\n  onChange: () => {},\n  hour: moment().format('HH'),\n  minute: moment().format('mm')\n}\n\nexport default TimePicker\n"]},"metadata":{},"sourceType":"module"}