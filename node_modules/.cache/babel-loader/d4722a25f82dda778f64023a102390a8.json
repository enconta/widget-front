{"ast":null,"code":"import _objectSpread from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/shared/selectField/index.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport _isNull from 'lodash/isNull';\nimport _kebabCase from 'lodash/kebabCase'; // Error messages\n\nvar ERROR_TXT = {\n  REQUIRED: 'Este campo es requerido'\n};\n\nvar SelectField =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SelectField, _Component);\n\n  _createClass(SelectField, null, [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      var matchSomeOption = props.options.some(function (option) {\n        return typeof option === 'object' ? props.value === option[props.optionsConfig.id].toString() : props.value === option;\n      });\n\n      if (matchSomeOption || props.value === '') {\n        return _objectSpread({}, state, {\n          value: props.value\n        });\n      }\n\n      return null;\n    }\n  }]);\n\n  function SelectField(props) {\n    var _this;\n\n    _classCallCheck(this, SelectField);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SelectField).call(this, props));\n    _this.data = {\n      value: props.value,\n      isValid: true,\n      errorText: ''\n    };\n    _this.state = Object.assign({}, _this.data);\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.validate = _this.validate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(SelectField, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.mounted = true;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.mounted = false;\n    } // When the field changes, it updates the value locally and calls the passed callback function\n    // so it can also update values on the parent component\n\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      if (this.mounted) this.setState({\n        value: e.target.value\n      }, this.validate);\n      this.props.onChange(e);\n    } // Validates if selected value is any other but the default.\n    // Sets on state the validation result and error message\n    // Returns boolean with the validation result.\n\n  }, {\n    key: \"validate\",\n    value: function validate() {\n      var required = this.props.required;\n      var isValid = !required;\n      var errorText = '';\n\n      if (required) {\n        isValid = !!this.state.value;\n\n        if (!isValid) {\n          errorText = ERROR_TXT.REQUIRED;\n          this.props.onValidationError(\"\".concat(this.props.name, \" - \").concat(ERROR_TXT.REQUIRED));\n        }\n      }\n\n      if (this.mounted) this.setState({\n        isValid: isValid,\n        errorText: errorText\n      });\n      return isValid;\n    } // Return only a placeholder if it's defined\n\n  }, {\n    key: \"renderPlaceholder\",\n    value: function renderPlaceholder() {\n      var placeholder = this.props.placeholder;\n      return placeholder.length > 0 ? React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, placeholder) : null;\n    } // Iterates over the passed options collection to generate the option tags\n    // It evaluates if the passed collection is an array or an object.\n    // Sets them within the select tag and adds the passed default option on top\n\n  }, {\n    key: \"renderOptions\",\n    value: function renderOptions(opts) {\n      var _this$props = this.props,\n          optionsConfig = _this$props.optionsConfig,\n          className = _this$props.className,\n          disabled = _this$props.disabled,\n          onFocus = _this$props.onFocus,\n          onBlur = _this$props.onBlur,\n          required = _this$props.required,\n          showId = _this$props.showId,\n          disabledOptions = _this$props.disabledOptions,\n          hiddenOptions = _this$props.hiddenOptions,\n          label = _this$props.label,\n          testId = _this$props.testId;\n      var _this$state = this.state,\n          value = _this$state.value,\n          isValid = _this$state.isValid;\n      if (_isNull(value)) value = '';\n      var options = opts.map(function (opt) {\n        // Iterates over passed hidden options to not display that value in the options\n        if (hiddenOptions.includes(opt[optionsConfig.id])) return;\n        return typeof opt === 'object' ? React.createElement(\"option\", {\n          value: opt[optionsConfig.id],\n          key: opt[optionsConfig.id],\n          disabled: disabledOptions.includes(opt[optionsConfig.id]),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, showId ? \"\".concat(opt[optionsConfig.id], \" \\u2013 \") : '', opt[optionsConfig.label]) : React.createElement(\"option\", {\n          value: opt,\n          key: opt,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, opt);\n      });\n      return React.createElement(\"select\", Object.assign({\n        className: classNames(className, {\n          'is-danger': !isValid,\n          required: required && !value\n        }),\n        onChange: this.onChange.bind(this),\n        disabled: disabled,\n        value: value,\n        onFocus: onFocus,\n        onBlur: onBlur,\n        required: required\n      }, label ? {\n        id: _kebabCase(label)\n      } : {}, {\n        \"data-testid\": testId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), this.renderPlaceholder(), options);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          label = _this$props2.label,\n          options = _this$props2.options,\n          required = _this$props2.required,\n          info = _this$props2.info,\n          floatLabel = _this$props2.floatLabel;\n      var _this$state2 = this.state,\n          isValid = _this$state2.isValid,\n          errorText = _this$state2.errorText;\n      if (required && label) label = \"\".concat(label, \" *\");\n      return React.createElement(\"div\", {\n        className: classNames({\n          'control float-label': floatLabel\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, ' ', label ? React.createElement(\"label\", {\n        className: \"caption\",\n        htmlFor: _kebabCase(label),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, label) : null, floatLabel && React.createElement(\"label\", {\n        className: \"caption\",\n        htmlFor: _kebabCase(floatLabel),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, floatLabel), React.createElement(\"p\", {\n        className: classNames('control', {\n          'has-info': info\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"select is-fullwidth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, this.renderOptions(options)), info ? React.createElement(\"span\", {\n        className: \"icon info-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"tooltip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, info), React.createElement(\"i\", {\n        className: \"mdi mdi-information-outline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      })) : null), React.createElement(\"span\", {\n        className: classNames('help is-danger', {\n          'is-hidden': isValid\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, errorText || ''));\n    }\n  }]);\n\n  return SelectField;\n}(Component);\n\nexport default SelectField;\nSelectField.propTypes = {\n  label: PropTypes.string,\n  name: PropTypes.string,\n  options: PropTypes.array.isRequired,\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  testId: PropTypes.string,\n  children: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    value: PropTypes.string\n  })]),\n  disabled: PropTypes.bool,\n  required: PropTypes.bool,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  onValidationError: PropTypes.func,\n  optionsConfig: PropTypes.object,\n  showId: PropTypes.bool,\n  disabledOptions: PropTypes.array,\n  hiddenOptions: PropTypes.array,\n  info: PropTypes.string\n};\nSelectField.defaultProps = {\n  options: [],\n  className: '',\n  placeholder: '',\n  value: '',\n  name: '',\n  disabled: false,\n  required: false,\n  onChange: function onChange() {},\n  onFocus: function onFocus() {},\n  onBlur: function onBlur() {},\n  onValidationError: function onValidationError() {},\n  optionsConfig: {\n    id: 'id',\n    label: 'label'\n  },\n  showId: false,\n  disabledOptions: [],\n  hiddenOptions: [],\n  info: '',\n  testId: null\n};","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/shared/selectField/index.js"],"names":["React","Component","PropTypes","classNames","_isNull","_kebabCase","ERROR_TXT","REQUIRED","SelectField","props","state","matchSomeOption","options","some","option","value","optionsConfig","id","toString","data","isValid","errorText","Object","assign","onChange","bind","validate","mounted","e","setState","target","required","onValidationError","name","placeholder","length","opts","className","disabled","onFocus","onBlur","showId","disabledOptions","hiddenOptions","label","testId","map","opt","includes","renderPlaceholder","info","floatLabel","renderOptions","propTypes","string","array","isRequired","children","oneOfType","shape","number","bool","func","object","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport _isNull from 'lodash/isNull'\nimport _kebabCase from 'lodash/kebabCase'\n\n// Error messages\nconst ERROR_TXT = {\n  REQUIRED: 'Este campo es requerido'\n}\n\nclass SelectField extends Component {\n  static getDerivedStateFromProps (props, state) {\n    const matchSomeOption = props.options.some(option =>\n      typeof option === 'object'\n        ? props.value === option[props.optionsConfig.id].toString()\n        : props.value === option\n    )\n\n    if (matchSomeOption || props.value === '') {\n      return {\n        ...state,\n        value: props.value\n      }\n    }\n\n    return null\n  }\n\n  constructor (props) {\n    super(props)\n    this.data = {\n      value: props.value,\n      isValid: true,\n      errorText: ''\n    }\n    this.state = Object.assign({}, this.data)\n    this.onChange = this.onChange.bind(this)\n    this.validate = this.validate.bind(this)\n  }\n\n  componentDidMount () {\n    this.mounted = true\n  }\n\n  componentWillUnmount () {\n    this.mounted = false\n  }\n\n  // When the field changes, it updates the value locally and calls the passed callback function\n  // so it can also update values on the parent component\n  onChange (e) {\n    if (this.mounted) this.setState({ value: e.target.value }, this.validate)\n    this.props.onChange(e)\n  }\n\n  // Validates if selected value is any other but the default.\n  // Sets on state the validation result and error message\n  // Returns boolean with the validation result.\n  validate () {\n    let { required } = this.props\n    let isValid = !required\n    let errorText = ''\n    if (required) {\n      isValid = !!this.state.value\n      if (!isValid) {\n        errorText = ERROR_TXT.REQUIRED\n        this.props.onValidationError(\n          `${this.props.name} - ${ERROR_TXT.REQUIRED}`\n        )\n      }\n    }\n\n    if (this.mounted) this.setState({ isValid, errorText })\n    return isValid\n  }\n\n  // Return only a placeholder if it's defined\n  renderPlaceholder () {\n    const { placeholder } = this.props\n    return placeholder.length > 0 ? (\n      <option value='' disabled>\n        {placeholder}\n      </option>\n    ) : null\n  }\n\n  // Iterates over the passed options collection to generate the option tags\n  // It evaluates if the passed collection is an array or an object.\n  // Sets them within the select tag and adds the passed default option on top\n  renderOptions (opts) {\n    let {\n      optionsConfig,\n      className,\n      disabled,\n      onFocus,\n      onBlur,\n      required,\n      showId,\n      disabledOptions,\n      hiddenOptions,\n      label,\n      testId\n    } = this.props\n    let { value, isValid } = this.state\n    if (_isNull(value)) value = ''\n    let options = opts.map(opt => {\n      // Iterates over passed hidden options to not display that value in the options\n      if (hiddenOptions.includes(opt[optionsConfig.id])) return\n      return typeof opt === 'object' ? (\n        <option\n          value={opt[optionsConfig.id]}\n          key={opt[optionsConfig.id]}\n          disabled={disabledOptions.includes(opt[optionsConfig.id])}\n        >\n          {showId ? `${opt[optionsConfig.id]} – ` : ''}\n          {opt[optionsConfig.label]}\n        </option>\n      ) : (\n        <option value={opt} key={opt}>\n          {opt}\n        </option>\n      )\n    })\n    return (\n      <select\n        className={classNames(className, {\n          'is-danger': !isValid,\n          required: required && !value\n        })}\n        onChange={this.onChange.bind(this)}\n        disabled={disabled}\n        value={value}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        required={required}\n        {...(label ? { id: _kebabCase(label) } : {})}\n        data-testid={testId}\n      >\n        {this.renderPlaceholder()}\n        {options}\n      </select>\n    )\n  }\n\n  render () {\n    let { label, options, required, info, floatLabel } = this.props\n    let { isValid, errorText } = this.state\n    if (required && label) label = `${label} *`\n\n    return (\n      <div\n        className={classNames({\n          'control float-label': floatLabel\n        })}\n      >\n        {' '}\n        {label ? (\n          <label className='caption' htmlFor={_kebabCase(label)}>\n            {label}\n          </label>\n        ) : null}\n        {floatLabel && (\n          <label className='caption' htmlFor={_kebabCase(floatLabel)}>\n            {floatLabel}\n          </label>\n        )}\n        <p\n          className={classNames('control', {\n            'has-info': info\n          })}\n        >\n          <span className='select is-fullwidth'>\n            {this.renderOptions(options)}\n          </span>\n          {info ? (\n            <span className='icon info-icon'>\n              <span className='tooltip'>{info}</span>\n              <i className='mdi mdi-information-outline' />\n            </span>\n          ) : null}\n        </p>\n        <span className={classNames('help is-danger', { 'is-hidden': isValid })}>\n          {errorText || ''}\n        </span>\n      </div>\n    )\n  }\n}\n\nexport default SelectField\n\nSelectField.propTypes = {\n  label: PropTypes.string,\n  name: PropTypes.string,\n  options: PropTypes.array.isRequired,\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  testId: PropTypes.string,\n  children: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      value: PropTypes.string\n    })\n  ]),\n  disabled: PropTypes.bool,\n  required: PropTypes.bool,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  onValidationError: PropTypes.func,\n  optionsConfig: PropTypes.object,\n  showId: PropTypes.bool,\n  disabledOptions: PropTypes.array,\n  hiddenOptions: PropTypes.array,\n  info: PropTypes.string\n}\n\nSelectField.defaultProps = {\n  options: [],\n  className: '',\n  placeholder: '',\n  value: '',\n  name: '',\n  disabled: false,\n  required: false,\n  onChange: () => {},\n  onFocus: () => {},\n  onBlur: () => {},\n  onValidationError: () => {},\n  optionsConfig: { id: 'id', label: 'label' },\n  showId: false,\n  disabledOptions: [],\n  hiddenOptions: [],\n  info: '',\n  testId: null\n}\n"]},"metadata":{},"sourceType":"module"}