{"ast":null,"code":"import _objectSpread from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/facturacion-masiva/index.js\";\n// Libraries\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport update from 'immutability-helper';\nimport { Link } from 'react-router';\nimport AppSignal from 'appsignal'; // Stores - actions\n\nimport SatCredentialsStore from 'stores/satCredentials';\nimport SatCredentialsActions from 'actions/satCredentials';\nimport SessionStore from 'stores/session'; // Invoice sub-views\n\nimport CredentialsExpire from 'shared/credentials';\nimport SelectFile from 'shared/selectFile';\nimport Button from 'shared/button';\nimport Card from 'shared/card';\nimport API from 'api';\nimport NotificationsActions from 'actions/notifications';\nimport { prettyDate, FILE_TEMPLATE_URL, hasDifference, askRemainingPlanDays } from 'utils';\nimport { INVOICING_STATUS } from 'shared/catalogs'; // Billing types for multiple invoicing\n\nvar BILLING_TYPE = [{\n  id: 'regular',\n  billingType: 'sales',\n  label: 'Regulares',\n  uploadFile: API.MultipleInvoicing.Create\n}, {\n  id: 'a_terceros',\n  billingType: 'sales_third_party',\n  label: 'A terceros',\n  uploadFile: API.MultipleInvoicing.CreateThirdParty\n}]; // Keys for file uploader\n\nvar FILE_KEY = 'invoice_import_file';\nvar FILE_DATA_KEY = 'batch_file';\nvar FILE_NAME_KEY = 'batch_file_file_name';\nvar FILE_TYPE_KEY = 'batch_file_content_type'; // Render single invoice\n\nvar renderInvoice = function renderInvoice(invoice, tab) {\n  return React.createElement(\"tr\", {\n    key: invoice.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    className: \"align-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, prettyDate(invoice.created_at, 'YYYY-MM-DD', true, true, '/'), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, moment(invoice.created_at, 'YYYY-MM-DDTHH:mm:SS').format('HH:mm A'))), React.createElement(\"td\", {\n    className: \"align-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, INVOICING_STATUS[invoice.status]), React.createElement(\"td\", {\n    className: \"align-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/facturacion_masiva/proceso/\".concat(tab, \"/\").concat(invoice.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, invoice.batch_file_file_name)));\n};\n\nvar getCurrentState = function getCurrentState() {\n  return {\n    credentials: SatCredentialsStore.getCredentials(),\n    currentUser: SessionStore.getUser()\n  };\n};\n\nvar MultipleInvoicing =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MultipleInvoicing, _Component);\n\n  function MultipleInvoicing(props) {\n    var _FILE_KEY, _this$data;\n\n    var _this;\n\n    _classCallCheck(this, MultipleInvoicing);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultipleInvoicing).call(this, props));\n\n    _this._onChange = function () {\n      // When the store changes, the state goes to it and pulls the updated data\n      // then sets it so the component rerenders\n      var _getCurrentState = getCurrentState(),\n          credentials = _getCurrentState.credentials;\n\n      if (hasDifference(_this.state.credentials, credentials)) {\n        _this.setState({\n          credentials: credentials\n        });\n      }\n    };\n\n    _this.data = (_this$data = {\n      showUpload: false\n    }, _defineProperty(_this$data, FILE_KEY, (_FILE_KEY = {}, _defineProperty(_FILE_KEY, FILE_DATA_KEY, ''), _defineProperty(_FILE_KEY, FILE_NAME_KEY, ''), _defineProperty(_FILE_KEY, FILE_TYPE_KEY, ''), _FILE_KEY)), _defineProperty(_this$data, \"invoices\", []), _defineProperty(_this$data, \"tab\", _this.props.route.tab), _this$data);\n    _this.state = _objectSpread({}, _this.data, getCurrentState());\n    _this._handleEscape = _this._handleEscape.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // Get invoices list on component's mount\n\n\n  _createClass(MultipleInvoicing, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      SatCredentialsStore.addChangeListener(this._onChange);\n      this.loadData();\n      this.loadInvoices();\n      askRemainingPlanDays();\n    }\n  }, {\n    key: \"loadData\",\n    value: function loadData() {\n      SatCredentialsActions.getSatCredentials().catch(function (e) {\n        return NotificationsActions.error(e);\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      SatCredentialsStore.removeChangeListener(this._onChange);\n    } // Get invoices list\n\n  }, {\n    key: \"loadInvoices\",\n    value: function loadInvoices() {\n      var _this2 = this;\n\n      API.MultipleInvoicing.List({\n        billing_type: BILLING_TYPE.find(function (type) {\n          return type.id === _this2.state.tab;\n        }).billingType\n      }).then(function (r) {\n        _this2.setState({\n          invoices: r.invoice_imports\n        });\n      }).catch(function (error) {\n        AppSignal.sendError(error);\n        NotificationsActions.error(error);\n      });\n    } // Sets Diot file data (base64 string) and original filename from SelectFile component\n\n  }, {\n    key: \"setUpload\",\n    value: function setUpload(doc, filename, contentType) {\n      var _update;\n\n      this.setState(_defineProperty({}, FILE_KEY, update(this.state[FILE_KEY], (_update = {}, _defineProperty(_update, FILE_DATA_KEY, {\n        $set: doc\n      }), _defineProperty(_update, FILE_NAME_KEY, {\n        $set: filename\n      }), _defineProperty(_update, FILE_TYPE_KEY, {\n        $set: contentType\n      }), _update))), this.uploadFile);\n    } // Listen for key presses, close the dialog if escape is true\n\n  }, {\n    key: \"_handleEscape\",\n    value: function _handleEscape(key, b) {\n      if (key.keyCode === 27) {\n        window.removeEventListener('keydown', this._handleEscape, true);\n        this.setState({\n          showUpload: false\n        });\n      }\n    } // Toggle this.state.showUpload, enables upload file form\n\n  }, {\n    key: \"toggleUpload\",\n    value: function toggleUpload() {\n      if (!this.state.showUpload) {\n        window.addEventListener('keydown', this._handleEscape, true);\n      }\n\n      this.setState({\n        showUpload: !this.state.showUpload\n      });\n    } // Clean file upload\n\n  }, {\n    key: \"cleanUpload\",\n    value: function cleanUpload() {\n      var _this$setState2;\n\n      this.setState((_this$setState2 = {}, _defineProperty(_this$setState2, FILE_KEY, this.data[FILE_KEY]), _defineProperty(_this$setState2, \"showUpload\", false), _this$setState2), this.loadInvoices());\n    } // Handle file upload\n\n  }, {\n    key: \"uploadFile\",\n    value: function uploadFile() {\n      var _this3 = this;\n\n      BILLING_TYPE.find(function (type) {\n        return type.id === _this3.state.tab;\n      }).uploadFile(_defineProperty({}, FILE_KEY, this.state[FILE_KEY])).then(function (r) {\n        NotificationsActions.success('FacturaciÃ³n masiva iniciada');\n\n        _this3.cleanUpload();\n      }).catch(function (r) {\n        NotificationsActions.error('Error al procesar archivo');\n\n        _this3.cleanUpload();\n      });\n    } // Set tab and load new data\n\n  }, {\n    key: \"setTab\",\n    value: function setTab(tab) {\n      this.setState({\n        tab: tab\n      }, this.loadInvoices);\n    } // Render past multiple invoice attempts\n\n  }, {\n    key: \"renderInvoices\",\n    value: function renderInvoices() {\n      var tab = this.state.tab;\n      var renderInvoices = React.createElement(\"div\", {\n        className: \"block unselectable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, \"No hay facturaci\\xF3n masiva\"));\n\n      if (this.state.invoices.length > 0) {\n        var invoices = this.state.invoices.map(function (invoice) {\n          return renderInvoice(invoice, tab);\n        });\n        renderInvoices = React.createElement(\"table\", {\n          className: \"table is-fullwidth\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }, React.createElement(\"thead\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          className: \"align-left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        }, \"Creado\"), React.createElement(\"th\", {\n          className: \"align-left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }, \"Estado\"), React.createElement(\"th\", {\n          className: \"align-right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          },\n          __self: this\n        }, \"Nombre del archivo\"))), React.createElement(\"tbody\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          },\n          __self: this\n        }, invoices));\n      }\n\n      return renderInvoices;\n    } // Render view title\n\n  }, {\n    key: \"renderTitle\",\n    value: function renderTitle() {\n      var _this$state = this.state,\n          credentials = _this$state.credentials,\n          currentUser = _this$state.currentUser;\n      var hasCSD = Boolean(credentials.csd);\n      var role = currentUser.role;\n      var allowedUser = ['admin', 'account_holder', 'analyst'];\n      var disabled = !(hasCSD && allowedUser.includes(role));\n      return React.createElement(\"div\", {\n        className: \"flex-between\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"headline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"Facturaci\\xF3n Masiva\"), React.createElement(\"div\", {\n        className: \"flex-column flex-end\",\n        style: {\n          display: 'inline-block'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(Button, {\n        icon: \"file-excel\",\n        buttonStyle: \"white\",\n        onClick: this.toggleUpload.bind(this),\n        disabled: disabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, \"Subir archivo\"), React.createElement(\"a\", {\n        href: FILE_TEMPLATE_URL,\n        target: \"_blank\",\n        download: true,\n        className: \"encontaButton white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"mdi mdi-download\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }), \"Descargar formato\"))));\n    } // Main render\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.createElement(CredentialsExpire, {\n        csd: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }), this.renderTitle(), React.createElement(Card, {\n        className: \"is-fullheight flex-column\",\n        title: BILLING_TYPE,\n        activeTab: this.state.tab,\n        baseUrl: \"/facturacion_masiva\",\n        onTabSwitch: this.setTab.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, this.renderInvoices()), React.createElement(SelectFile, {\n        isActive: this.state.showUpload,\n        toggleModal: this.toggleUpload.bind(this),\n        title: \"Subir Archivo\",\n        fileTypePlaceholder: \"archivo\",\n        setFile: this.setUpload.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return MultipleInvoicing;\n}(Component);\n\nMultipleInvoicing.propTypes = {\n  route: PropTypes.shape({\n    tab: PropTypes.number\n  })\n};\nexport default MultipleInvoicing;","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/facturacion-masiva/index.js"],"names":["React","Component","PropTypes","moment","update","Link","AppSignal","SatCredentialsStore","SatCredentialsActions","SessionStore","CredentialsExpire","SelectFile","Button","Card","API","NotificationsActions","prettyDate","FILE_TEMPLATE_URL","hasDifference","askRemainingPlanDays","INVOICING_STATUS","BILLING_TYPE","id","billingType","label","uploadFile","MultipleInvoicing","Create","CreateThirdParty","FILE_KEY","FILE_DATA_KEY","FILE_NAME_KEY","FILE_TYPE_KEY","renderInvoice","invoice","tab","created_at","format","status","batch_file_file_name","getCurrentState","credentials","getCredentials","currentUser","getUser","props","_onChange","state","setState","data","showUpload","route","_handleEscape","bind","addChangeListener","loadData","loadInvoices","getSatCredentials","catch","e","error","removeChangeListener","List","billing_type","find","type","then","r","invoices","invoice_imports","sendError","doc","filename","contentType","$set","key","b","keyCode","window","removeEventListener","addEventListener","success","cleanUpload","renderInvoices","length","map","hasCSD","Boolean","csd","role","allowedUser","disabled","includes","display","toggleUpload","renderTitle","setTab","setUpload","propTypes","shape","number"],"mappings":"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","sourcesContent":["// Libraries\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport moment from 'moment'\nimport update from 'immutability-helper'\nimport { Link } from 'react-router'\nimport AppSignal from 'appsignal'\n\n// Stores - actions\nimport SatCredentialsStore from 'stores/satCredentials'\nimport SatCredentialsActions from 'actions/satCredentials'\nimport SessionStore from 'stores/session'\n\n// Invoice sub-views\nimport CredentialsExpire from 'shared/credentials'\nimport SelectFile from 'shared/selectFile'\nimport Button from 'shared/button'\nimport Card from 'shared/card'\nimport API from 'api'\nimport NotificationsActions from 'actions/notifications'\nimport {\n  prettyDate,\n  FILE_TEMPLATE_URL,\n  hasDifference,\n  askRemainingPlanDays\n} from 'utils'\nimport { INVOICING_STATUS } from 'shared/catalogs'\n\n// Billing types for multiple invoicing\nconst BILLING_TYPE = [\n  {\n    id: 'regular',\n    billingType: 'sales',\n    label: 'Regulares',\n    uploadFile: API.MultipleInvoicing.Create\n  },\n  {\n    id: 'a_terceros',\n    billingType: 'sales_third_party',\n    label: 'A terceros',\n    uploadFile: API.MultipleInvoicing.CreateThirdParty\n  }\n]\n\n// Keys for file uploader\nconst FILE_KEY = 'invoice_import_file'\nconst FILE_DATA_KEY = 'batch_file'\nconst FILE_NAME_KEY = 'batch_file_file_name'\nconst FILE_TYPE_KEY = 'batch_file_content_type'\n\n// Render single invoice\nconst renderInvoice = (invoice, tab) => {\n  return (\n    <tr key={invoice.id}>\n      <td className='align-left'>\n        {prettyDate(invoice.created_at, 'YYYY-MM-DD', true, true, '/')}\n        <br />\n        <small>\n          {moment(invoice.created_at, 'YYYY-MM-DDTHH:mm:SS').format('HH:mm A')}\n        </small>\n      </td>\n      <td className='align-left'>{INVOICING_STATUS[invoice.status]}</td>\n      <td className='align-right'>\n        <Link to={`/facturacion_masiva/proceso/${tab}/${invoice.id}`}>\n          {invoice.batch_file_file_name}\n        </Link>\n      </td>\n    </tr>\n  )\n}\n\nconst getCurrentState = () => ({\n  credentials: SatCredentialsStore.getCredentials(),\n  currentUser: SessionStore.getUser()\n})\n\nclass MultipleInvoicing extends Component {\n  constructor (props) {\n    super(props)\n    this.data = {\n      showUpload: false,\n      [FILE_KEY]: {\n        [FILE_DATA_KEY]: '',\n        [FILE_NAME_KEY]: '',\n        [FILE_TYPE_KEY]: ''\n      },\n      invoices: [],\n      tab: this.props.route.tab\n    }\n    this.state = { ...this.data, ...getCurrentState() }\n    this._handleEscape = this._handleEscape.bind(this)\n  }\n\n  // Get invoices list on component's mount\n  componentDidMount () {\n    SatCredentialsStore.addChangeListener(this._onChange)\n\n    this.loadData()\n    this.loadInvoices()\n    askRemainingPlanDays()\n  }\n\n  _onChange = () => {\n    // When the store changes, the state goes to it and pulls the updated data\n    // then sets it so the component rerenders\n    const { credentials } = getCurrentState()\n\n    if (hasDifference(this.state.credentials, credentials)) {\n      this.setState({ credentials })\n    }\n  }\n\n  loadData () {\n    SatCredentialsActions.getSatCredentials().catch(e =>\n      NotificationsActions.error(e)\n    )\n  }\n\n  componentWillUnmount () {\n    SatCredentialsStore.removeChangeListener(this._onChange)\n  }\n\n  // Get invoices list\n  loadInvoices () {\n    API.MultipleInvoicing.List({\n      billing_type: BILLING_TYPE.find(type => type.id === this.state.tab)\n        .billingType\n    })\n      .then(r => {\n        this.setState({ invoices: r.invoice_imports })\n      })\n      .catch(error => {\n        AppSignal.sendError(error)\n        NotificationsActions.error(error)\n      })\n  }\n\n  // Sets Diot file data (base64 string) and original filename from SelectFile component\n  setUpload (doc, filename, contentType) {\n    this.setState(\n      {\n        [FILE_KEY]: update(this.state[FILE_KEY], {\n          [FILE_DATA_KEY]: { $set: doc },\n          [FILE_NAME_KEY]: { $set: filename },\n          [FILE_TYPE_KEY]: { $set: contentType }\n        })\n      },\n      this.uploadFile\n    )\n  }\n\n  // Listen for key presses, close the dialog if escape is true\n  _handleEscape (key, b) {\n    if (key.keyCode === 27) {\n      window.removeEventListener('keydown', this._handleEscape, true)\n      this.setState({ showUpload: false })\n    }\n  }\n\n  // Toggle this.state.showUpload, enables upload file form\n  toggleUpload () {\n    if (!this.state.showUpload) {\n      window.addEventListener('keydown', this._handleEscape, true)\n    }\n    this.setState({ showUpload: !this.state.showUpload })\n  }\n\n  // Clean file upload\n  cleanUpload () {\n    this.setState(\n      {\n        [FILE_KEY]: this.data[FILE_KEY],\n        showUpload: false\n      },\n      this.loadInvoices()\n    )\n  }\n\n  // Handle file upload\n  uploadFile () {\n    BILLING_TYPE.find(type => type.id === this.state.tab)\n      .uploadFile({\n        [FILE_KEY]: this.state[FILE_KEY]\n      })\n      .then(r => {\n        NotificationsActions.success('FacturaciÃ³n masiva iniciada')\n        this.cleanUpload()\n      })\n      .catch(r => {\n        NotificationsActions.error('Error al procesar archivo')\n        this.cleanUpload()\n      })\n  }\n\n  // Set tab and load new data\n  setTab (tab) {\n    this.setState({ tab }, this.loadInvoices)\n  }\n\n  // Render past multiple invoice attempts\n  renderInvoices () {\n    let { tab } = this.state\n    let renderInvoices = (\n      <div className='block unselectable'>\n        <p>No hay facturaciÃ³n masiva</p>\n      </div>\n    )\n    if (this.state.invoices.length > 0) {\n      let invoices = this.state.invoices.map(invoice =>\n        renderInvoice(invoice, tab)\n      )\n      renderInvoices = (\n        <table className='table is-fullwidth'>\n          <thead>\n            <tr>\n              <th className='align-left'>Creado</th>\n              <th className='align-left'>Estado</th>\n              <th className='align-right'>Nombre del archivo</th>\n            </tr>\n          </thead>\n          <tbody>{invoices}</tbody>\n        </table>\n      )\n    }\n    return renderInvoices\n  }\n\n  // Render view title\n  renderTitle () {\n    const { credentials, currentUser } = this.state\n    const hasCSD = Boolean(credentials.csd)\n    const { role } = currentUser\n    const allowedUser = ['admin', 'account_holder', 'analyst']\n    const disabled = !(hasCSD && allowedUser.includes(role))\n\n    return (\n      <div className='flex-between'>\n        <h1 className='headline'>FacturaciÃ³n Masiva</h1>\n        <div className='flex-column flex-end' style={{ display: 'inline-block' }}>\n          <Button\n            icon='file-excel'\n            buttonStyle='white'\n            onClick={this.toggleUpload.bind(this)}\n            disabled={disabled}\n          >\n            Subir archivo\n          </Button>\n          <a\n            href={FILE_TEMPLATE_URL}\n            target='_blank'\n            download\n            className='encontaButton white'\n          >\n            <span>\n              <i className='mdi mdi-download' />\n              Descargar formato\n            </span>\n          </a>\n        </div>\n      </div>\n    )\n  }\n\n  // Main render\n  render () {\n    return (\n      <div>\n        <CredentialsExpire csd />\n        {this.renderTitle()}\n        <Card\n          className='is-fullheight flex-column'\n          title={BILLING_TYPE}\n          activeTab={this.state.tab}\n          baseUrl='/facturacion_masiva'\n          onTabSwitch={this.setTab.bind(this)}\n        >\n          {this.renderInvoices()}\n        </Card>\n\n        <SelectFile\n          isActive={this.state.showUpload}\n          toggleModal={this.toggleUpload.bind(this)}\n          title='Subir Archivo'\n          fileTypePlaceholder='archivo'\n          setFile={this.setUpload.bind(this)}\n        />\n      </div>\n    )\n  }\n}\n\nMultipleInvoicing.propTypes = {\n  route: PropTypes.shape({\n    tab: PropTypes.number\n  })\n}\n\nexport default MultipleInvoicing\n"]},"metadata":{},"sourceType":"module"}