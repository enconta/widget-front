{"ast":null,"code":"import _toConsumableArray from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/newInvoice/shared/issuer/index.js\";\n// Libraries\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport update from 'immutability-helper';\nimport { Async } from 'react-select';\nimport AppSignal from 'appsignal'; // Components\n\nimport API from 'api';\nimport NotificationsActions from 'actions/notifications';\nimport SessionStore from 'stores/session';\nimport TimePicker from 'shared/timepicker';\nimport Datepicker from 'shared/datepicker';\nimport TextField from 'shared/textField';\nimport SelectField from 'shared/selectField';\nimport { CURRENCY, TAX_CLASSIFICATIONS } from 'shared/catalogs';\nimport InvoiceStore from 'stores/invoices';\nimport InvoiceAction from 'actions/invoices';\nimport { createIssuer } from '../../utils'; // Invoice keys\n\nimport { VOUCHER_TYPE, INVOICE_KEY, SERIES_KEY, FOLIO_KEY, ISSUE_DATE_KEY, EXCHANGE_RATE_KEY, CURRENCY_KEY, BRANCH_KEY, COMMENTS_KEY, TIME_KEY, TAX_CLASSIFICATION_KEY, ISSUER_MG_KEY } from '../../constants';\nvar requiredFields = new Set();\n\nvar getCurrentState = function getCurrentState() {\n  return {\n    dateTime: InvoiceStore.getDateTime(),\n    remainingInvoices: InvoiceStore.getRemainingInvoices(),\n    time: InvoiceStore.getTime(),\n    invoice: InvoiceStore.getInvoice(),\n    originalDatetime: InvoiceStore.getOriginalDateTime()\n  };\n};\n\nvar Issuer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Issuer, _Component);\n\n  function Issuer(props) {\n    var _this;\n\n    _classCallCheck(this, Issuer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Issuer).call(this, props));\n\n    _this.onChangeTaxClassification = function (event) {\n      var value = event && event.nativeEvent ? event.target.value : event;\n\n      _this.setState(function (prevState) {\n        return _objectSpread({}, prevState, {\n          issuer_mg: _objectSpread({}, prevState[ISSUER_MG_KEY], {\n            tax_classification: value\n          })\n        });\n      });\n    };\n\n    _this._onChange =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var updateRemainingInvoices;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              updateRemainingInvoices = _this.props.updateRemainingInvoices;\n              _context.next = 3;\n              return _this.setState(getCurrentState());\n\n            case 3:\n              updateRemainingInvoices(_this.state.remainingInvoices);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    _this.data = _objectSpread({}, createIssuer());\n    _this.state = _objectSpread({}, _this.data, getCurrentState());\n    return _this;\n  } // Get serie and folio on mount\n\n\n  _createClass(Issuer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // if load a invoice, dont query serie and  folio\n      if (this.props.location.query.invoice || this.props.data) {\n        this.setState(_objectSpread({}, this.props.data, _defineProperty({}, INVOICE_KEY, _objectSpread({}, this.props.data[INVOICE_KEY], _defineProperty({}, VOUCHER_TYPE, this.props.voucherType)))));\n      }\n\n      InvoiceStore.addChangeListener(this._onChange);\n      InvoiceAction.getInvoiceInformation();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      InvoiceStore.removeChangeListener(this._onChange);\n      requiredFields.clear();\n    } // Get clients for current taxable entity\n\n  }, {\n    key: \"getBranches\",\n    value: function getBranches(input) {\n      var _this2 = this;\n\n      return API.EditClient.GetBranchesList({\n        description: input\n      }).then(function (response) {\n        return {\n          options: _this2.parseBranches(response.branches)\n        };\n      }).catch(function (error) {\n        AppSignal.sendError(error);\n        throw error;\n      });\n    } // Convert an array of branches in a format that react-select will understand\n\n  }, {\n    key: \"parseBranches\",\n    value: function parseBranches(branches) {\n      return branches.map(function (branch) {\n        return {\n          value: branch.id,\n          label: branch.name\n        };\n      }).filter(function (branch) {\n        return branch.label;\n      });\n    } // Iterates over required fields and validates every one of them,\n    // thus it returns true if all validations succeeded, otherwise false.\n\n  }, {\n    key: \"validateRequiredFields\",\n    value: function validateRequiredFields() {\n      var _this3 = this;\n\n      return this.isValidDate() && _toConsumableArray(requiredFields) // Converts the Set() into an array\n      .filter(Boolean) // Filters the array from any falsy value\n      .map(function (form) {\n        return form.validate.call(_this3);\n      }) // Calls the validate() method on each form\n      .every(function (e) {\n        return e;\n      }) // Checks whether all validations succeeded\n      ;\n    } // Export invoice component data for outside component retrieval\n\n  }, {\n    key: \"exportInvoice\",\n    value: function exportInvoice() {\n      var issuer = this.state[INVOICE_KEY];\n      issuer = update(issuer, _defineProperty({}, ISSUE_DATE_KEY, {\n        $set: moment(issuer[ISSUE_DATE_KEY]).format('YYYY-MM-DDTHH:mm:ss')\n      }));\n      return issuer;\n    } // Exports branch for the outside component retrieval\n\n  }, {\n    key: \"exportBranch\",\n    value: function exportBranch() {\n      return this.state[BRANCH_KEY].value ? {\n        id: this.state[BRANCH_KEY].value\n      } : false;\n    }\n  }, {\n    key: \"exportTaxClassification\",\n    value: function exportTaxClassification() {\n      return this.state[ISSUER_MG_KEY][TAX_CLASSIFICATION_KEY] ? this.state[ISSUER_MG_KEY][TAX_CLASSIFICATION_KEY] || '' : false;\n    } // Persist changes to issuer\n\n  }, {\n    key: \"onChange\",\n    value: function onChange(field, e) {\n      var _this4 = this;\n\n      this.setState(_defineProperty({}, INVOICE_KEY, update(this.state[INVOICE_KEY], _defineProperty({}, field, {\n        $set: e.target.value\n      }))), function () {\n        if (field === VOUCHER_TYPE) {\n          _this4.props.changeVoucherType(_this4.state[INVOICE_KEY][VOUCHER_TYPE]);\n        }\n\n        if (field === CURRENCY_KEY) {\n          _this4.setState(_defineProperty({}, INVOICE_KEY, update(_this4.state[INVOICE_KEY], _defineProperty({}, EXCHANGE_RATE_KEY, {\n            $set: _this4.data[INVOICE_KEY][EXCHANGE_RATE_KEY]\n          }))));\n        }\n      });\n    }\n  }, {\n    key: \"onChangeTime\",\n    value: function onChangeTime(timeObject) {\n      var _this5 = this;\n\n      this.setState(_defineProperty({}, TIME_KEY, timeObject), function () {\n        var date = moment(_this5.state[INVOICE_KEY][ISSUE_DATE_KEY]).set(_this5.state[TIME_KEY]);\n\n        _this5.onChangeDate(date);\n      });\n    }\n  }, {\n    key: \"onChangeDate\",\n    value: function onChangeDate(date) {\n      this.setState(_defineProperty({}, INVOICE_KEY, update(this.state[INVOICE_KEY], _defineProperty({}, ISSUE_DATE_KEY, {\n        $set: date\n      }))), this.isValidDate);\n    }\n  }, {\n    key: \"setBranch\",\n    value: function setBranch(branch) {\n      this.setState(_defineProperty({}, BRANCH_KEY, branch));\n    }\n  }, {\n    key: \"isValidDate\",\n    value: function isValidDate() {\n      var threeDaysInMinutes = 72 * 60;\n      var originalDatetime = this.state.originalDatetime;\n      var minutes = originalDatetime.diff(this.state[INVOICE_KEY][ISSUE_DATE_KEY], 'minutes');\n\n      switch (true) {\n        case minutes < 0:\n          NotificationsActions.error('La fecha de emisión no puede ser en el futuro');\n          return false;\n\n        case minutes > threeDaysInMinutes:\n          NotificationsActions.error('La fecha de emisión no puede exceder 72 horas anteriores a la hora actual');\n          return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"taxClassifications\",\n    value: function taxClassifications(taxClassification) {\n      var taxClassifications = [];\n      TAX_CLASSIFICATIONS.map(function (value) {\n        if (value['encontaId'] === taxClassification || value['encontaId'] === 'technological_platforms') {\n          taxClassifications.push(value);\n        }\n      });\n      return taxClassifications;\n    } // Main render\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var entity = SessionStore.getCurrentEntity();\n      var category = this.props.category;\n      var isPayroll = category === 'payroll';\n      var _this$state$time = this.state.time,\n          hour = _this$state$time.hour,\n          minute = _this$state$time.minute;\n      var taxClassifications = this.taxClassifications(entity.tax_classification);\n      var taxClassification = this.state[ISSUER_MG_KEY][TAX_CLASSIFICATION_KEY];\n      var isIndividual = entity.legal_type === 'individual';\n      var currentDate = '';\n      var minDate = '';\n\n      if (this.state[INVOICE_KEY][ISSUE_DATE_KEY]) {\n        currentDate = this.state['originalDatetime'].format();\n        minDate = moment(currentDate).utc().subtract(3, 'days').format();\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"subheader-green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, \"Emisor\"), React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"name-issuer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, entity.legal_name), React.createElement(\"div\", {\n        className: \"body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, entity.rfc), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(Datepicker, {\n        label: \"Fecha\",\n        value: this.state[INVOICE_KEY][ISSUE_DATE_KEY],\n        maxDate: currentDate,\n        minDate: minDate,\n        onChange: this.onChangeDate.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"column is-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, React.createElement(TimePicker, {\n        onChange: this.onChangeTime.bind(this),\n        hour: hour,\n        minute: minute,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"Serie\",\n        value: this.state[INVOICE_KEY][SERIES_KEY],\n        onChange: this.onChange.bind(this, SERIES_KEY),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"Folio\",\n        value: this.state[INVOICE_KEY][FOLIO_KEY],\n        onChange: this.onChange.bind(this, FOLIO_KEY),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }))), React.createElement(\"label\", {\n        className: \"caption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, \"Sucursal de emisi\\xF3n\"), React.createElement(\"div\", {\n        className: \"control has-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, React.createElement(Async, {\n        value: this.state[BRANCH_KEY],\n        loadOptions: this.getBranches.bind(this),\n        clearable: true,\n        placeholder: \"Selecciona una Sucursal\",\n        loadingPlaceholder: \"Buscando\",\n        searchPromptText: \"Teclear el nombre de la sucursal\",\n        noResultsText: \"No encontrada\",\n        onChange: this.setBranch.bind(this),\n        ignoreAccents: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"icon info-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"tooltip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, \"Para agregar m\\xE1s sucursales ingresa a \\\"mi empresa\\\"\"), React.createElement(\"i\", {\n        className: \"mdi mdi-information-outline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }))), isIndividual && !isPayroll ? React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, React.createElement(SelectField, {\n        placeholder: \"Selecciona un R\\xE9gimen Fiscal\",\n        label: \"R\\xE9gimen Fiscal\",\n        options: taxClassifications,\n        value: taxClassification,\n        onChange: this.onChangeTaxClassification,\n        optionsConfig: {\n          id: 'encontaId',\n          label: 'label'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }))) : null), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }, React.createElement(SelectField, {\n        label: \"Moneda\",\n        placeholder: \"Seleccione una moneda\",\n        options: CURRENCY,\n        value: this.state[INVOICE_KEY][CURRENCY_KEY],\n        onChange: this.onChange.bind(this, CURRENCY_KEY),\n        showId: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"Tipo de cambio\",\n        value: this.state[INVOICE_KEY][EXCHANGE_RATE_KEY],\n        onChange: this.onChange.bind(this, EXCHANGE_RATE_KEY),\n        disabled: this.state[INVOICE_KEY][CURRENCY_KEY] === this.data[INVOICE_KEY][CURRENCY_KEY],\n        required: this.state[INVOICE_KEY][CURRENCY_KEY] !== this.data[INVOICE_KEY][CURRENCY_KEY],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }))), React.createElement(\"label\", {\n        className: \"caption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }, \"Comentarios\"), React.createElement(\"div\", {\n        className: \"control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        value: this.state[INVOICE_KEY][COMMENTS_KEY],\n        onChange: this.onChange.bind(this, COMMENTS_KEY),\n        className: \"textarea\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }), React.createElement(SelectField, {\n        label: \"Tipo de factura\",\n        options: [{\n          id: 'I',\n          label: 'Ingreso'\n        }, {\n          id: 'T',\n          label: 'Traslado'\n        }, {\n          id: 'N',\n          label: 'Nomina'\n        }],\n        disabledOptions: isPayroll ? [] : ['N'],\n        disabled: isPayroll,\n        value: isPayroll ? this.props.voucherType : this.state[INVOICE_KEY][VOUCHER_TYPE],\n        onChange: this.onChange.bind(this, VOUCHER_TYPE),\n        showId: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      })))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"caption required\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }, \"* Campos obligatorios\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Issuer;\n}(Component);\n\nIssuer.propTypes = {\n  category: PropTypes.string.isRequired,\n  changeVoucherType: PropTypes.func.isRequired,\n  location: PropTypes.shape({\n    query: PropTypes.shape({\n      invoice: PropTypes.string\n    })\n  })\n};\nIssuer.defaultProps = {\n  location: {\n    query: {}\n  }\n};\nexport default Issuer;","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/newInvoice/shared/issuer/index.js"],"names":["React","Component","PropTypes","moment","update","Async","AppSignal","API","NotificationsActions","SessionStore","TimePicker","Datepicker","TextField","SelectField","CURRENCY","TAX_CLASSIFICATIONS","InvoiceStore","InvoiceAction","createIssuer","VOUCHER_TYPE","INVOICE_KEY","SERIES_KEY","FOLIO_KEY","ISSUE_DATE_KEY","EXCHANGE_RATE_KEY","CURRENCY_KEY","BRANCH_KEY","COMMENTS_KEY","TIME_KEY","TAX_CLASSIFICATION_KEY","ISSUER_MG_KEY","requiredFields","Set","getCurrentState","dateTime","getDateTime","remainingInvoices","getRemainingInvoices","time","getTime","invoice","getInvoice","originalDatetime","getOriginalDateTime","Issuer","props","onChangeTaxClassification","event","value","nativeEvent","target","setState","prevState","issuer_mg","tax_classification","_onChange","updateRemainingInvoices","state","data","location","query","voucherType","addChangeListener","getInvoiceInformation","removeChangeListener","clear","input","EditClient","GetBranchesList","description","then","response","options","parseBranches","branches","catch","error","sendError","map","branch","id","label","name","filter","isValidDate","Boolean","form","validate","call","every","e","issuer","$set","format","field","changeVoucherType","timeObject","date","set","onChangeDate","threeDaysInMinutes","minutes","diff","taxClassification","taxClassifications","push","entity","getCurrentEntity","category","isPayroll","hour","minute","isIndividual","legal_type","currentDate","minDate","utc","subtract","legal_name","rfc","bind","onChangeTime","onChange","getBranches","setBranch","propTypes","string","isRequired","func","shape","defaultProps"],"mappings":"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","sourcesContent":["// Libraries\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport moment from 'moment'\nimport update from 'immutability-helper'\nimport { Async } from 'react-select'\nimport AppSignal from 'appsignal'\n\n// Components\nimport API from 'api'\nimport NotificationsActions from 'actions/notifications'\nimport SessionStore from 'stores/session'\nimport TimePicker from 'shared/timepicker'\nimport Datepicker from 'shared/datepicker'\nimport TextField from 'shared/textField'\nimport SelectField from 'shared/selectField'\nimport { CURRENCY, TAX_CLASSIFICATIONS } from 'shared/catalogs'\n\nimport InvoiceStore from 'stores/invoices'\nimport InvoiceAction from 'actions/invoices'\n\nimport { createIssuer } from '../../utils'\n// Invoice keys\nimport {\n  VOUCHER_TYPE,\n  INVOICE_KEY,\n  SERIES_KEY,\n  FOLIO_KEY,\n  ISSUE_DATE_KEY,\n  EXCHANGE_RATE_KEY,\n  CURRENCY_KEY,\n  BRANCH_KEY,\n  COMMENTS_KEY,\n  TIME_KEY,\n  TAX_CLASSIFICATION_KEY,\n  ISSUER_MG_KEY\n} from '../../constants'\n\nconst requiredFields = new Set()\n\nconst getCurrentState = () => ({\n  dateTime: InvoiceStore.getDateTime(),\n  remainingInvoices: InvoiceStore.getRemainingInvoices(),\n  time: InvoiceStore.getTime(),\n  invoice: InvoiceStore.getInvoice(),\n  originalDatetime: InvoiceStore.getOriginalDateTime()\n})\n\nclass Issuer extends Component {\n  static propTypes = {\n    category: PropTypes.string.isRequired,\n    changeVoucherType: PropTypes.func.isRequired,\n    location: PropTypes.shape({\n      query: PropTypes.shape({\n        invoice: PropTypes.string\n      })\n    })\n  }\n\n  static defaultProps = {\n    location: {\n      query: {}\n    }\n  }\n\n  constructor (props) {\n    super(props)\n\n    this.data = { ...createIssuer() }\n    this.state = { ...this.data, ...getCurrentState() }\n  }\n  // Get serie and folio on mount\n  componentDidMount () {\n    // if load a invoice, dont query serie and  folio\n    if (this.props.location.query.invoice || this.props.data) {\n      this.setState({\n        ...this.props.data,\n        ...{\n          [INVOICE_KEY]: {\n            ...this.props.data[INVOICE_KEY],\n            [VOUCHER_TYPE]: this.props.voucherType\n          }\n        }\n      })\n    }\n    InvoiceStore.addChangeListener(this._onChange)\n    InvoiceAction.getInvoiceInformation()\n  }\n\n  componentWillUnmount () {\n    InvoiceStore.removeChangeListener(this._onChange)\n    requiredFields.clear()\n  }\n\n  // Get clients for current taxable entity\n  getBranches (input) {\n    return API.EditClient.GetBranchesList({ description: input })\n      .then(response => {\n        return { options: this.parseBranches(response.branches) }\n      })\n      .catch(error => {\n        AppSignal.sendError(error)\n        throw error\n      })\n  }\n\n  // Convert an array of branches in a format that react-select will understand\n  parseBranches (branches) {\n    return branches\n      .map(branch => ({\n        value: branch.id,\n        label: branch.name\n      }))\n      .filter(branch => branch.label)\n  }\n\n  // Iterates over required fields and validates every one of them,\n  // thus it returns true if all validations succeeded, otherwise false.\n  validateRequiredFields () {\n    return (\n      this.isValidDate() &&\n      [...requiredFields] // Converts the Set() into an array\n        .filter(Boolean) // Filters the array from any falsy value\n        .map(form => form.validate.call(this)) // Calls the validate() method on each form\n        .every(e => e) // Checks whether all validations succeeded\n    )\n  }\n\n  // Export invoice component data for outside component retrieval\n  exportInvoice () {\n    let issuer = this.state[INVOICE_KEY]\n    issuer = update(issuer, {\n      [ISSUE_DATE_KEY]: {\n        $set: moment(issuer[ISSUE_DATE_KEY]).format('YYYY-MM-DDTHH:mm:ss')\n      }\n    })\n    return issuer\n  }\n\n  // Exports branch for the outside component retrieval\n  exportBranch () {\n    return this.state[BRANCH_KEY].value\n      ? { id: this.state[BRANCH_KEY].value }\n      : false\n  }\n\n  exportTaxClassification () {\n    return this.state[ISSUER_MG_KEY][TAX_CLASSIFICATION_KEY]\n      ? this.state[ISSUER_MG_KEY][TAX_CLASSIFICATION_KEY] || ''\n      : false\n  }\n\n  // Persist changes to issuer\n  onChange (field, e) {\n    this.setState(\n      {\n        [INVOICE_KEY]: update(this.state[INVOICE_KEY], {\n          [field]: { $set: e.target.value }\n        })\n      },\n      () => {\n        if (field === VOUCHER_TYPE) {\n          this.props.changeVoucherType(this.state[INVOICE_KEY][VOUCHER_TYPE])\n        }\n\n        if (field === CURRENCY_KEY) {\n          this.setState({\n            [INVOICE_KEY]: update(this.state[INVOICE_KEY], {\n              [EXCHANGE_RATE_KEY]: {\n                $set: this.data[INVOICE_KEY][EXCHANGE_RATE_KEY]\n              }\n            })\n          })\n        }\n      }\n    )\n  }\n\n  onChangeTaxClassification = event => {\n    const value = event && event.nativeEvent ? event.target.value : event\n    this.setState(prevState => ({\n      ...prevState,\n      issuer_mg: {\n        ...prevState[ISSUER_MG_KEY],\n        tax_classification: value\n      }\n    }))\n  }\n\n  onChangeTime (timeObject) {\n    this.setState({ [TIME_KEY]: timeObject }, () => {\n      let date = moment(this.state[INVOICE_KEY][ISSUE_DATE_KEY]).set(\n        this.state[TIME_KEY]\n      )\n      this.onChangeDate(date)\n    })\n  }\n\n  onChangeDate (date) {\n    this.setState(\n      {\n        [INVOICE_KEY]: update(this.state[INVOICE_KEY], {\n          [ISSUE_DATE_KEY]: { $set: date }\n        })\n      },\n      this.isValidDate\n    )\n  }\n\n  setBranch (branch) {\n    this.setState({\n      [BRANCH_KEY]: branch\n    })\n  }\n\n  _onChange = async () => {\n    const { updateRemainingInvoices } = this.props\n    await this.setState(getCurrentState())\n    updateRemainingInvoices(this.state.remainingInvoices)\n  }\n\n  isValidDate () {\n    const threeDaysInMinutes = 72 * 60\n    const { originalDatetime } = this.state\n    let minutes = originalDatetime.diff(\n      this.state[INVOICE_KEY][ISSUE_DATE_KEY],\n      'minutes'\n    )\n    switch (true) {\n      case minutes < 0:\n        NotificationsActions.error(\n          'La fecha de emisión no puede ser en el futuro'\n        )\n        return false\n      case minutes > threeDaysInMinutes:\n        NotificationsActions.error(\n          'La fecha de emisión no puede exceder 72 horas anteriores a la hora actual'\n        )\n        return false\n    }\n    return true\n  }\n\n  taxClassifications (taxClassification) {\n    const taxClassifications = []\n    TAX_CLASSIFICATIONS.map(value => {\n      if (\n        value['encontaId'] === taxClassification ||\n        value['encontaId'] === 'technological_platforms'\n      ) {\n        taxClassifications.push(value)\n      }\n    })\n    return taxClassifications\n  }\n\n  // Main render\n  render () {\n    let entity = SessionStore.getCurrentEntity()\n    const { category } = this.props\n    const isPayroll = category === 'payroll'\n    const { hour, minute } = this.state.time\n    const taxClassifications = this.taxClassifications(\n      entity.tax_classification\n    )\n    const taxClassification = this.state[ISSUER_MG_KEY][TAX_CLASSIFICATION_KEY]\n    const isIndividual = entity.legal_type === 'individual'\n\n    let currentDate = ''\n    let minDate = ''\n    if (this.state[INVOICE_KEY][ISSUE_DATE_KEY]) {\n      currentDate = this.state['originalDatetime'].format()\n      minDate = moment(currentDate)\n        .utc()\n        .subtract(3, 'days')\n        .format()\n    }\n\n    return (\n      <div>\n        <h2 className='subheader-green'>Emisor</h2>\n        <div className='columns'>\n          <div className='column'>\n            <div className='name-issuer'>{entity.legal_name}</div>\n            <div className='body'>{entity.rfc}</div>\n            <br />\n            <div className='columns'>\n              <div className='column'>\n                <Datepicker\n                  label='Fecha'\n                  value={this.state[INVOICE_KEY][ISSUE_DATE_KEY]}\n                  maxDate={currentDate}\n                  minDate={minDate}\n                  onChange={this.onChangeDate.bind(this)}\n                />\n              </div>\n              <div className='column is-5'>\n                <TimePicker\n                  onChange={this.onChangeTime.bind(this)}\n                  hour={hour}\n                  minute={minute}\n                />\n              </div>\n            </div>\n            <div className='columns'>\n              <div className='column'>\n                <TextField\n                  label='Serie'\n                  value={this.state[INVOICE_KEY][SERIES_KEY]}\n                  onChange={this.onChange.bind(this, SERIES_KEY)}\n                />\n              </div>\n              <div className='column'>\n                <TextField\n                  label='Folio'\n                  value={this.state[INVOICE_KEY][FOLIO_KEY]}\n                  onChange={this.onChange.bind(this, FOLIO_KEY)}\n                />\n              </div>\n            </div>\n            <label className='caption'>Sucursal de emisión</label>\n            <div className='control has-info'>\n              <Async\n                value={this.state[BRANCH_KEY]}\n                loadOptions={this.getBranches.bind(this)}\n                clearable\n                placeholder='Selecciona una Sucursal'\n                loadingPlaceholder='Buscando'\n                searchPromptText='Teclear el nombre de la sucursal'\n                noResultsText='No encontrada'\n                onChange={this.setBranch.bind(this)}\n                ignoreAccents={false}\n              />\n              <span className='icon info-icon'>\n                <span className='tooltip'>\n                  Para agregar más sucursales ingresa a \"mi empresa\"\n                </span>\n                <i className='mdi mdi-information-outline' />\n              </span>\n            </div>\n            {isIndividual && !isPayroll ? (\n              <div className='columns'>\n                <div className='column'>\n                  <SelectField\n                    placeholder='Selecciona un Régimen Fiscal'\n                    label='Régimen Fiscal'\n                    options={taxClassifications}\n                    value={taxClassification}\n                    onChange={this.onChangeTaxClassification}\n                    optionsConfig={{ id: 'encontaId', label: 'label' }}\n                  />\n                </div>\n              </div>\n            ) : null}\n          </div>\n          <div className='column'>\n            <div className='columns'>\n              <div className='column'>\n                <SelectField\n                  label='Moneda'\n                  placeholder='Seleccione una moneda'\n                  options={CURRENCY}\n                  value={this.state[INVOICE_KEY][CURRENCY_KEY]}\n                  onChange={this.onChange.bind(this, CURRENCY_KEY)}\n                  showId\n                />\n              </div>\n              <div className='column'>\n                <TextField\n                  label='Tipo de cambio'\n                  value={this.state[INVOICE_KEY][EXCHANGE_RATE_KEY]}\n                  onChange={this.onChange.bind(this, EXCHANGE_RATE_KEY)}\n                  disabled={\n                    this.state[INVOICE_KEY][CURRENCY_KEY] ===\n                    this.data[INVOICE_KEY][CURRENCY_KEY]\n                  }\n                  required={\n                    this.state[INVOICE_KEY][CURRENCY_KEY] !==\n                    this.data[INVOICE_KEY][CURRENCY_KEY]\n                  }\n                />\n              </div>\n            </div>\n            <label className='caption'>Comentarios</label>\n            <div className='control'>\n              <textarea\n                value={this.state[INVOICE_KEY][COMMENTS_KEY]}\n                onChange={this.onChange.bind(this, COMMENTS_KEY)}\n                className='textarea'\n              />\n              <SelectField\n                label='Tipo de factura'\n                options={[\n                  { id: 'I', label: 'Ingreso' },\n                  { id: 'T', label: 'Traslado' },\n                  { id: 'N', label: 'Nomina' }\n                ]}\n                disabledOptions={isPayroll ? [] : ['N']}\n                disabled={isPayroll}\n                value={\n                  isPayroll\n                    ? this.props.voucherType\n                    : this.state[INVOICE_KEY][VOUCHER_TYPE]\n                }\n                onChange={this.onChange.bind(this, VOUCHER_TYPE)}\n                showId\n              />\n            </div>\n          </div>\n        </div>\n        <br />\n        <div className='caption required'>* Campos obligatorios</div>\n        <br />\n      </div>\n    )\n  }\n}\n\nexport default Issuer\n"]},"metadata":{},"sourceType":"module"}