{"ast":null,"code":"import _toConsumableArray from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/inventories/products/singleUpload.js\";\n// Libraries\nimport React, { Component, Fragment } from 'react';\nimport { handleBack, handleInputs, parseProducts, parseUnits } from 'utils';\nimport { Async } from 'react-select';\nimport classNames from 'classnames';\nimport { browserHistory } from 'react-router'; // Components\n\nimport Button from 'shared/button';\nimport TextField from 'shared/textField'; // Actions\n\nimport InvoicesActions from 'actions/invoices';\nimport NotificationsActions from 'actions/notifications';\nimport InventoriesActions from 'actions/inventories'; // Stores\n\nimport InventoriesStore from 'stores/inventories';\nimport InvoicesStore from 'stores/invoices'; // Constants\n\nvar requiredFields = new Set();\nexport var createProduct = function createProduct(_ref) {\n  var name = _ref.name,\n      description = _ref.description,\n      sku = _ref.sku,\n      unitCode = _ref.unitCode,\n      productCode = _ref.productCode,\n      stock = _ref.stock;\n  return {\n    product: {\n      name: name,\n      description: description,\n      sku: sku,\n      unit_code: unitCode.value,\n      prod_serv_code: productCode.value,\n      stock: stock\n    }\n  };\n};\n\nvar getCurrentState = function getCurrentState() {\n  return {\n    hasProducts: InventoriesStore.getHasProducts(),\n    products: InvoicesStore.getProducts()\n  };\n};\n\nvar SingleUploadProduct =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SingleUploadProduct, _Component);\n\n  function SingleUploadProduct() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SingleUploadProduct);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SingleUploadProduct)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = _objectSpread({\n      requestInProgress: false,\n      name: '',\n      description: '',\n      productCode: '',\n      unitCode: '',\n      sku: '',\n      stock: 1\n    }, getCurrentState());\n\n    _this._onChange = function () {\n      _this.setState(getCurrentState());\n    };\n\n    _this.onChangeProductType = function (product) {\n      _this.setState({\n        productCode: product\n      });\n    };\n\n    _this.onChangeUnitType = function (unitCode) {\n      _this.setState({\n        unitCode: unitCode\n      });\n    };\n\n    _this.getProducts = function (value) {\n      if (typeof value !== 'undefined' && value.length === 0) {\n        return Promise.resolve(InvoicesStore.getProducts()).then(function (products) {\n          return {\n            options: parseProducts(products)\n          };\n        });\n      }\n\n      return InvoicesActions.setProductsCode({\n        full_text: value\n      }).then(function (data) {\n        return {\n          options: parseProducts(data)\n        };\n      }).catch(function (error) {\n        NotificationsActions.error(error);\n      });\n    };\n\n    _this.getUnits = function (value) {\n      if (typeof value !== 'undefined' && value.length === 0) {\n        return Promise.resolve(InvoicesStore.getUnits()).then(function (units) {\n          return {\n            options: parseUnits(units)\n          };\n        });\n      }\n\n      return InvoicesActions.setUnitsCode({\n        full_text: value\n      }).then(function (data) {\n        return {\n          options: parseUnits(data)\n        };\n      }).catch(function (error) {\n        NotificationsActions.error(error);\n      });\n    };\n\n    _this.saveProduct = function () {\n      _this.setState({\n        requestInProgress: true\n      });\n\n      if (_this.validateAll()) {\n        InventoriesActions.createProduct(createProduct(_this.state)).then(function () {\n          NotificationsActions.success('Producto agregado exitosamente');\n          browserHistory.push('/inventarios/productos');\n        }).catch(function (error) {\n          NotificationsActions.error(error);\n        }).finally(function () {\n          _this.setState({\n            requestInProgress: false\n          });\n        });\n      } else {\n        _this.setState({\n          requestInProgress: false\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(SingleUploadProduct, [{\n    key: \"componentDidMount\",\n    // Adds listener, when the Store changes, trigger the _onChange callback func\n    value: function componentDidMount() {\n      InvoicesStore.addChangeListener(this._onChange);\n      InvoicesActions.setFrequentlyUsedData();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      InvoicesStore.removeChangeListener(this._onChange);\n      requiredFields.clear();\n    } // When the store changes, the state goes to it and pulls the updated data\n    // then sets it so the component renders\n\n  }, {\n    key: \"validateAll\",\n    // Iterates over required fields and validates every one of them\n    // Then it returns true if all validations succeed, else false.\n    value: function validateAll() {\n      return _toConsumableArray(requiredFields) // Converts the Set() into an array\n      .filter(Boolean) // Filters the array from any falsy value\n      .map(function (form) {\n        return form.validate();\n      }) // Calls the validate() method on each form\n      .every(function (e) {\n        return e;\n      }); // Checks if all validations suceeded\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          requestInProgress = _this$state.requestInProgress,\n          hasProducts = _this$state.hasProducts,\n          name = _this$state.name,\n          description = _this$state.description,\n          productCode = _this$state.productCode,\n          unitCode = _this$state.unitCode,\n          sku = _this$state.sku,\n          stock = _this$state.stock;\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, hasProducts && React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column is-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(Button, {\n        buttonStyle: \"link\",\n        icon: \"chevron-double-left\",\n        onClick: handleBack,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"Volver\"))), React.createElement(\"form\", {\n        className: \"columns is-multiline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column is-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        value: name,\n        onChange: handleInputs(this, 'name'),\n        required: true,\n        label: \"Nombre\",\n        ref: function ref(r) {\n          return requiredFields.add(r);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"column is-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        value: description,\n        onChange: handleInputs(this, 'description'),\n        required: true,\n        label: \"Descripci\\xF3n\",\n        ref: function ref(r) {\n          return requiredFields.add(r);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"column is-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"caption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, 'CÃ³digo de producto', \" *\"), React.createElement(\"div\", {\n        className: classNames('control has-info', {\n          'select-required': productCode === null || productCode === ''\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(Async, {\n        value: productCode,\n        placeholder: 'CÃ³digo de producto',\n        loadingPlaceholder: \"Buscando\",\n        searchPromptText: \"Teclear el nombre del producto\",\n        noResultsText: \"No encontrado\",\n        loadOptions: this.getProducts,\n        onChange: this.onChangeProductType,\n        ignoreAccents: false,\n        clearable: true,\n        filterOptions: function filterOptions(options) {\n          return options;\n        },\n        autoload: true,\n        cache: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"icon info-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"tooltip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"Ingresa una palabra que ayude a identificar tu producto o servicio\"), React.createElement(\"i\", {\n        className: \"mdi mdi-information-outline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: classNames('help is-danger', {\n          'is-hidden': productCode !== null\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, \"Este campo es requerido\"))), React.createElement(\"div\", {\n        className: \"column is-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"caption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, 'CÃ³digo de Unidad  - SAT', \" *\"), React.createElement(\"div\", {\n        className: classNames('control has-info', {\n          'select-required': unitCode === null || unitCode === ''\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(Async, {\n        placeholder: 'CÃ³digo de Unidad  - SAT',\n        loadingPlaceholder: \"Buscando\",\n        searchPromptText: \"Teclear el nombre de la unidad\",\n        noResultsText: \"No encontrado\",\n        loadOptions: this.getUnits,\n        value: unitCode,\n        onChange: this.onChangeUnitType,\n        ignoreAccents: false,\n        clearable: true,\n        filterOptions: function filterOptions(options) {\n          return options;\n        },\n        autoload: true,\n        cache: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"icon info-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"tooltip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, \"Unidad de medida del producto o servicio\"), React.createElement(\"i\", {\n        className: \"mdi mdi-information-outline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: classNames('help is-danger', {\n          'is-hidden': unitCode !== null\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, \"Este campo es requerido\")))), React.createElement(\"div\", {\n        className: \"column is-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        value: sku,\n        onChange: handleInputs(this, 'sku'),\n        required: true,\n        placeholder: \"N\\xFAmero identificador\",\n        label: \"SKU\",\n        ref: function ref(r) {\n          return requiredFields.add(r);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"column is-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        value: stock,\n        onChange: handleInputs(this, 'stock'),\n        required: true,\n        label: \"Existencias\",\n        type: \"number\",\n        ref: function ref(r) {\n          return requiredFields.add(r);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column is-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"caption required\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, \"* Campos obligatorios\"))), React.createElement(\"div\", {\n        className: \"buttons-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, hasProducts && React.createElement(Button, {\n        icon: \"cancel\",\n        onClick: handleBack,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, \"Cancelar\"), React.createElement(Button, {\n        buttonStyle: \"primary\",\n        icon: \"content-save\",\n        onClick: this.saveProduct,\n        loading: requestInProgress,\n        disabled: requestInProgress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, \"Guardar aprobados\")));\n    }\n  }]);\n\n  return SingleUploadProduct;\n}(Component);\n\nexport { SingleUploadProduct as default };","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/inventories/products/singleUpload.js"],"names":["React","Component","Fragment","handleBack","handleInputs","parseProducts","parseUnits","Async","classNames","browserHistory","Button","TextField","InvoicesActions","NotificationsActions","InventoriesActions","InventoriesStore","InvoicesStore","requiredFields","Set","createProduct","name","description","sku","unitCode","productCode","stock","product","unit_code","value","prod_serv_code","getCurrentState","hasProducts","getHasProducts","products","getProducts","SingleUploadProduct","state","requestInProgress","_onChange","setState","onChangeProductType","onChangeUnitType","length","Promise","resolve","then","options","setProductsCode","full_text","data","catch","error","getUnits","units","setUnitsCode","saveProduct","validateAll","success","push","finally","addChangeListener","setFrequentlyUsedData","removeChangeListener","clear","filter","Boolean","map","form","validate","every","e","r","add"],"mappings":"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","sourcesContent":["// Libraries\nimport React, { Component, Fragment } from 'react'\nimport { handleBack, handleInputs, parseProducts, parseUnits } from 'utils'\nimport { Async } from 'react-select'\nimport classNames from 'classnames'\nimport { browserHistory } from 'react-router'\n\n// Components\nimport Button from 'shared/button'\nimport TextField from 'shared/textField'\n\n// Actions\nimport InvoicesActions from 'actions/invoices'\nimport NotificationsActions from 'actions/notifications'\nimport InventoriesActions from 'actions/inventories'\n\n// Stores\nimport InventoriesStore from 'stores/inventories'\nimport InvoicesStore from 'stores/invoices'\n\n// Constants\nconst requiredFields = new Set()\n\nexport const createProduct = ({\n  name,\n  description,\n  sku,\n  unitCode,\n  productCode,\n  stock\n}) => ({\n  product: {\n    name: name,\n    description: description,\n    sku: sku,\n    unit_code: unitCode.value,\n    prod_serv_code: productCode.value,\n    stock: stock\n  }\n})\n\nconst getCurrentState = () => {\n  return {\n    hasProducts: InventoriesStore.getHasProducts(),\n    products: InvoicesStore.getProducts()\n  }\n}\n\nexport default class SingleUploadProduct extends Component {\n  state = {\n    requestInProgress: false,\n    name: '',\n    description: '',\n    productCode: '',\n    unitCode: '',\n    sku: '',\n    stock: 1,\n    ...getCurrentState()\n  }\n\n  // Adds listener, when the Store changes, trigger the _onChange callback func\n  componentDidMount () {\n    InvoicesStore.addChangeListener(this._onChange)\n    InvoicesActions.setFrequentlyUsedData()\n  }\n\n  componentWillUnmount () {\n    InvoicesStore.removeChangeListener(this._onChange)\n    requiredFields.clear()\n  }\n\n  // When the store changes, the state goes to it and pulls the updated data\n  // then sets it so the component renders\n  _onChange = () => {\n    this.setState(getCurrentState())\n  }\n\n  onChangeProductType = product => {\n    this.setState({ productCode: product })\n  }\n\n  onChangeUnitType = unitCode => {\n    this.setState({ unitCode: unitCode })\n  }\n\n  // Iterates over required fields and validates every one of them\n  // Then it returns true if all validations succeed, else false.\n  validateAll () {\n    return [...requiredFields] // Converts the Set() into an array\n      .filter(Boolean) // Filters the array from any falsy value\n      .map(form => form.validate()) // Calls the validate() method on each form\n      .every(e => e) // Checks if all validations suceeded\n  }\n\n  getProducts = value => {\n    if (typeof value !== 'undefined' && value.length === 0) {\n      return Promise.resolve(InvoicesStore.getProducts()).then(products => ({\n        options: parseProducts(products)\n      }))\n    }\n\n    return InvoicesActions.setProductsCode({ full_text: value })\n      .then(data => {\n        return { options: parseProducts(data) }\n      })\n      .catch(error => {\n        NotificationsActions.error(error)\n      })\n  }\n\n  getUnits = value => {\n    if (typeof value !== 'undefined' && value.length === 0) {\n      return Promise.resolve(InvoicesStore.getUnits()).then(units => ({\n        options: parseUnits(units)\n      }))\n    }\n\n    return InvoicesActions.setUnitsCode({ full_text: value })\n      .then(data => {\n        return { options: parseUnits(data) }\n      })\n      .catch(error => {\n        NotificationsActions.error(error)\n      })\n  }\n\n  saveProduct = () => {\n    this.setState({ requestInProgress: true })\n    if (this.validateAll()) {\n      InventoriesActions.createProduct(createProduct(this.state))\n        .then(() => {\n          NotificationsActions.success('Producto agregado exitosamente')\n          browserHistory.push('/inventarios/productos')\n        })\n        .catch(error => {\n          NotificationsActions.error(error)\n        })\n        .finally(() => {\n          this.setState({ requestInProgress: false })\n        })\n    } else {\n      this.setState({ requestInProgress: false })\n    }\n  }\n\n  render () {\n    const {\n      requestInProgress,\n      hasProducts,\n      name,\n      description,\n      productCode,\n      unitCode,\n      sku,\n      stock\n    } = this.state\n    return (\n      <Fragment>\n        {hasProducts && (\n          <div className='columns'>\n            <div className='column is-12'>\n              <Button\n                buttonStyle='link'\n                icon='chevron-double-left'\n                onClick={handleBack}\n              >\n                Volver\n              </Button>\n            </div>\n          </div>\n        )}\n\n        <form className='columns is-multiline'>\n          <div className='column is-6'>\n            <TextField\n              value={name}\n              onChange={handleInputs(this, 'name')}\n              required\n              label='Nombre'\n              ref={r => requiredFields.add(r)}\n            />\n          </div>\n          <div className='column is-6'>\n            <TextField\n              value={description}\n              onChange={handleInputs(this, 'description')}\n              required\n              label='DescripciÃ³n'\n              ref={r => requiredFields.add(r)}\n            />\n          </div>\n          <div className='column is-6'>\n            <label className='caption'>{'CÃ³digo de producto'} *</label>\n            <div\n              className={classNames('control has-info', {\n                'select-required': productCode === null || productCode === ''\n              })}\n            >\n              <Async\n                value={productCode}\n                placeholder={'CÃ³digo de producto'}\n                loadingPlaceholder='Buscando'\n                searchPromptText='Teclear el nombre del producto'\n                noResultsText='No encontrado'\n                loadOptions={this.getProducts}\n                onChange={this.onChangeProductType}\n                ignoreAccents={false}\n                clearable\n                filterOptions={options => options}\n                autoload\n                cache={false}\n              />\n              <span className='icon info-icon'>\n                <span className='tooltip'>\n                  Ingresa una palabra que ayude a identificar tu producto o\n                  servicio\n                </span>\n                <i className='mdi mdi-information-outline' />\n              </span>\n              <span\n                className={classNames('help is-danger', {\n                  'is-hidden': productCode !== null\n                })}\n              >\n                Este campo es requerido\n              </span>\n            </div>\n          </div>\n          <div className='column is-6'>\n            <div className='control'>\n              <label className='caption'>{'CÃ³digo de Unidad  - SAT'} *</label>\n              <div\n                className={classNames('control has-info', {\n                  'select-required': unitCode === null || unitCode === ''\n                })}\n              >\n                <Async\n                  placeholder={'CÃ³digo de Unidad  - SAT'}\n                  loadingPlaceholder='Buscando'\n                  searchPromptText='Teclear el nombre de la unidad'\n                  noResultsText='No encontrado'\n                  loadOptions={this.getUnits}\n                  value={unitCode}\n                  onChange={this.onChangeUnitType}\n                  ignoreAccents={false}\n                  clearable\n                  filterOptions={options => options}\n                  autoload\n                  cache={false}\n                />\n                <span className='icon info-icon'>\n                  <span className='tooltip'>\n                    Unidad de medida del producto o servicio\n                  </span>\n                  <i className='mdi mdi-information-outline' />\n                </span>\n                <span\n                  className={classNames('help is-danger', {\n                    'is-hidden': unitCode !== null\n                  })}\n                >\n                  Este campo es requerido\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className='column is-6'>\n            <TextField\n              value={sku}\n              onChange={handleInputs(this, 'sku')}\n              required\n              placeholder='NÃºmero identificador'\n              label='SKU'\n              ref={r => requiredFields.add(r)}\n            />\n          </div>\n          <div className='column is-3'>\n            <TextField\n              value={stock}\n              onChange={handleInputs(this, 'stock')}\n              required\n              label='Existencias'\n              type='number'\n              ref={r => requiredFields.add(r)}\n            />\n          </div>\n        </form>\n        <div className='columns'>\n          <div className='column is-12'>\n            <p className='caption required'>* Campos obligatorios</p>\n          </div>\n        </div>\n        <div className='buttons-bar'>\n          {hasProducts && (\n            <Button icon='cancel' onClick={handleBack}>\n              Cancelar\n            </Button>\n          )}\n          <Button\n            buttonStyle='primary'\n            icon='content-save'\n            onClick={this.saveProduct}\n            loading={requestInProgress}\n            disabled={requestInProgress}\n          >\n            Guardar aprobados\n          </Button>\n        </div>\n      </Fragment>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}