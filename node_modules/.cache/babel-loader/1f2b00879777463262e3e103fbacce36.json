{"ast":null,"code":"import _objectSpread from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/diagnostic/create.js\";\nimport React, { Component, Fragment } from 'react';\nimport DocumentTitle from 'react-document-title';\nimport NotificationsContainer from 'shared/notifications';\nimport Button from 'shared/button';\nimport { handleInputs, hasANumber, hasCapitalLetter, getPasswordLengthValid, handleURL, toggleShowHidePassword, validateAll } from 'utils';\nimport Logo from 'shared/logo';\nimport TextField from 'shared/textField';\nimport classNames from 'classnames';\nimport Terms from 'shared/terms';\nimport { createAccount } from './utils';\nimport DiagnosisStore from 'stores/diagnosis';\nimport NotificationsActions from 'actions/notifications';\nimport RegisterActions from 'actions/register';\nimport SessionActions from 'actions/session';\nvar requiredFields = new Set();\nvar labelName = 'Nombre completo';\nvar labelEmail = 'Correo';\nvar labelPhone = 'Número de teléfono';\nvar labelRFC = 'RFC';\nvar labelPassword = 'Contraseña';\nvar labelPasswordConfirmation = 'Confirmar contraseña';\nexport var signIn = function signIn(_ref) {\n  var email = _ref.email,\n      password = _ref.password;\n  return {\n    email: email,\n    password: password\n  };\n};\n\nvar getCurrentState = function getCurrentState() {\n  return {\n    userId: DiagnosisStore.getUserId()\n  };\n};\n\nvar CreateAccount =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateAccount, _Component);\n\n  function CreateAccount() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CreateAccount);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CreateAccount)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = _objectSpread({\n      fullName: '',\n      rfc: '',\n      email: '',\n      phone: '',\n      password: '',\n      passwordConfirmation: '',\n      termsChecked: false,\n      hidden: true,\n      hiddenConfirmation: true,\n      params: _this.props.location && _this.props.location.query\n    }, getCurrentState());\n\n    _this._onChange = function () {\n      _this.setState(getCurrentState());\n    };\n\n    _this.toggleCheckTerms = function () {\n      _this.setState(function (state) {\n        return {\n          termsChecked: !state.termsChecked\n        };\n      });\n    };\n\n    _this.createDiagnosis = function () {\n      var _this$state = _this.state,\n          rfc = _this$state.rfc,\n          userId = _this$state.userId;\n      SessionActions.login(signIn(_this.state)).then(function () {\n        NotificationsActions.success('El registro de la cuenta fue exitoso');\n        handleURL(\"/diagnostico/credenciales/\".concat(rfc));\n        RegisterActions.createDiagnosis(userId);\n      }).catch(function (error) {\n        NotificationsActions.error(error);\n      });\n    };\n\n    _this.saveData = function (event) {\n      event.preventDefault();\n\n      if (validateAll(requiredFields, _assertThisInitialized(_assertThisInitialized(_this)))) {\n        RegisterActions.createRegister(createAccount(_this.state)).then(function () {\n          _this.createDiagnosis();\n        }).catch(function (error) {\n          NotificationsActions.error(error);\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(CreateAccount, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      DiagnosisStore.addChangeListener(this._onChange);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      DiagnosisStore.removeChangeListener(this._onChange);\n    }\n  }, {\n    key: \"renderForm\",\n    value: function renderForm() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          fullName = _this$state2.fullName,\n          rfc = _this$state2.rfc,\n          email = _this$state2.email,\n          phone = _this$state2.phone,\n          password = _this$state2.password,\n          passwordConfirmation = _this$state2.passwordConfirmation,\n          termsChecked = _this$state2.termsChecked,\n          hidden = _this$state2.hidden,\n          hiddenConfirmation = _this$state2.hiddenConfirmation;\n      var validPasswordLength = getPasswordLengthValid(password);\n      var hasNumber = hasANumber(password);\n      var capitalLetter = hasCapitalLetter(password);\n      var disabledButton = validPasswordLength && hasNumber && capitalLetter && termsChecked;\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"register--left-side\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"register--left-side-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Logo, {\n        logoSize: \"normal\",\n        textColour: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"register--left-side__title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"mdi mdi-greater-than register--left-side-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), \"Crea tu cuenta\"), React.createElement(\"p\", {\n        className: \"register--left-side__subtitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Ingresa tus datos de manera correcta para crear tu cuenta\"))), React.createElement(\"form\", {\n        className: \"register__form register--full-height\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"register__form-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Comencemos creando tu\", ' ', React.createElement(\"span\", {\n        className: \"register__form-title--highlight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"cuenta\")), React.createElement(\"div\", {\n        className: \"register__form-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        value: fullName,\n        onChange: handleInputs(this, 'fullName'),\n        ref: function ref(r) {\n          return requiredFields.add(r);\n        },\n        required: true,\n        floatLabel: labelName,\n        placeholder: labelName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        value: rfc,\n        onChange: handleInputs(this, 'rfc'),\n        ref: function ref(r) {\n          return requiredFields.add(r);\n        },\n        required: true,\n        floatLabel: labelRFC,\n        placeholder: labelRFC,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        value: email,\n        onChange: handleInputs(this, 'email'),\n        ref: function ref(r) {\n          return requiredFields.add(r);\n        },\n        required: true,\n        floatLabel: labelEmail,\n        placeholder: labelEmail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        value: phone,\n        onChange: handleInputs(this, 'phone'),\n        ref: function ref(r) {\n          return requiredFields.add(r);\n        },\n        required: true,\n        floatLabel: labelPhone,\n        placeholder: labelPhone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        value: password,\n        onChange: handleInputs(this, 'password'),\n        ref: function ref(r) {\n          return requiredFields.add(r);\n        },\n        required: true,\n        floatLabel: labelPassword,\n        placeholder: labelPassword,\n        type: hidden ? 'password' : 'text',\n        hideAndShowPassword: true,\n        onChangeType: function onChangeType() {\n          return toggleShowHidePassword(_this2, 'hidden');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        value: passwordConfirmation,\n        onChange: handleInputs(this, 'passwordConfirmation'),\n        ref: function ref(r) {\n          return requiredFields.add(r);\n        },\n        required: true,\n        floatLabel: labelPasswordConfirmation,\n        placeholder: labelPasswordConfirmation,\n        type: hiddenConfirmation ? 'password' : 'text',\n        hideAndShowPassword: true,\n        onChangeType: function onChangeType() {\n          return toggleShowHidePassword(_this2, 'hiddenConfirmation');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"register__text register__password-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"La contrase\\xF1a debe cumplir las siguientes caracter\\xEDsticas:\"), React.createElement(\"div\", {\n        className: \"register__text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \" register__password-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: classNames('mdi mdi-check register__icon', {\n          'register__icon-valid': validPasswordLength\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }), \"M\\xEDnimo 6 Caracteres\"), React.createElement(\"p\", {\n        className: \"register__password-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: classNames('mdi mdi-check register__icon', {\n          'register__icon-valid': capitalLetter\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }), \"Al menos 1 May\\xFAscula\"), React.createElement(\"p\", {\n        className: \"register__password-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: classNames('mdi mdi-check register__icon', {\n          'register__icon-valid': hasNumber\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }), \"Al menos un N\\xFAmero\"))), React.createElement(\"div\", {\n        className: \"register__form-terms\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(Terms, {\n        terms: termsChecked,\n        toggleCheckTerms: this.toggleCheckTerms,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      })), React.createElement(Button, {\n        buttonStyle: \"round\",\n        type: \"submit\",\n        className: \"register__form-button\",\n        disabled: !disabledButton,\n        onClick: this.saveData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \"Crear mi cuenta\")));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(DocumentTitle, {\n        title: 'Diagnóstico - Enconta',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"register\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, this.renderForm(), React.createElement(\"div\", {\n        className: \"notification-container notification-centered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(NotificationsContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return CreateAccount;\n}(Component);\n\nexport default CreateAccount;","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/diagnostic/create.js"],"names":["React","Component","Fragment","DocumentTitle","NotificationsContainer","Button","handleInputs","hasANumber","hasCapitalLetter","getPasswordLengthValid","handleURL","toggleShowHidePassword","validateAll","Logo","TextField","classNames","Terms","createAccount","DiagnosisStore","NotificationsActions","RegisterActions","SessionActions","requiredFields","Set","labelName","labelEmail","labelPhone","labelRFC","labelPassword","labelPasswordConfirmation","signIn","email","password","getCurrentState","userId","getUserId","CreateAccount","state","fullName","rfc","phone","passwordConfirmation","termsChecked","hidden","hiddenConfirmation","params","props","location","query","_onChange","setState","toggleCheckTerms","createDiagnosis","login","then","success","catch","error","saveData","event","preventDefault","createRegister","addChangeListener","removeChangeListener","validPasswordLength","hasNumber","capitalLetter","disabledButton","r","add","renderForm"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport DocumentTitle from 'react-document-title'\n\nimport NotificationsContainer from 'shared/notifications'\nimport Button from 'shared/button'\nimport {\n  handleInputs,\n  hasANumber,\n  hasCapitalLetter,\n  getPasswordLengthValid,\n  handleURL,\n  toggleShowHidePassword,\n  validateAll\n} from 'utils'\nimport Logo from 'shared/logo'\nimport TextField from 'shared/textField'\nimport classNames from 'classnames'\nimport Terms from 'shared/terms'\nimport { createAccount } from './utils'\n\nimport DiagnosisStore from 'stores/diagnosis'\n\nimport NotificationsActions from 'actions/notifications'\nimport RegisterActions from 'actions/register'\nimport SessionActions from 'actions/session'\n\nconst requiredFields = new Set()\nconst labelName = 'Nombre completo'\nconst labelEmail = 'Correo'\nconst labelPhone = 'Número de teléfono'\nconst labelRFC = 'RFC'\nconst labelPassword = 'Contraseña'\nconst labelPasswordConfirmation = 'Confirmar contraseña'\n\nexport const signIn = ({ email, password }) => ({\n  email: email,\n  password: password\n})\n\nconst getCurrentState = () => {\n  return {\n    userId: DiagnosisStore.getUserId()\n  }\n}\n\nclass CreateAccount extends Component {\n  state = {\n    fullName: '',\n    rfc: '',\n    email: '',\n    phone: '',\n    password: '',\n    passwordConfirmation: '',\n    termsChecked: false,\n    hidden: true,\n    hiddenConfirmation: true,\n    params: this.props.location && this.props.location.query,\n    ...getCurrentState()\n  }\n\n  componentDidMount () {\n    DiagnosisStore.addChangeListener(this._onChange)\n  }\n\n  componentWillUnmount () {\n    DiagnosisStore.removeChangeListener(this._onChange)\n  }\n\n  _onChange = () => {\n    this.setState(getCurrentState())\n  }\n\n  toggleCheckTerms = () => {\n    this.setState(state => ({ termsChecked: !state.termsChecked }))\n  }\n\n  createDiagnosis = () => {\n    const { rfc, userId } = this.state\n\n    SessionActions.login(signIn(this.state))\n      .then(() => {\n        NotificationsActions.success('El registro de la cuenta fue exitoso')\n        handleURL(`/diagnostico/credenciales/${rfc}`)\n        RegisterActions.createDiagnosis(userId)\n      })\n      .catch(error => {\n        NotificationsActions.error(error)\n      })\n  }\n  saveData = event => {\n    event.preventDefault()\n\n    if (validateAll(requiredFields, this)) {\n      RegisterActions.createRegister(createAccount(this.state))\n        .then(() => {\n          this.createDiagnosis()\n        })\n        .catch(error => {\n          NotificationsActions.error(error)\n        })\n    }\n  }\n\n  renderForm () {\n    const {\n      fullName,\n      rfc,\n      email,\n      phone,\n      password,\n      passwordConfirmation,\n      termsChecked,\n      hidden,\n      hiddenConfirmation\n    } = this.state\n\n    const validPasswordLength = getPasswordLengthValid(password)\n    const hasNumber = hasANumber(password)\n    const capitalLetter = hasCapitalLetter(password)\n    const disabledButton =\n      validPasswordLength && hasNumber && capitalLetter && termsChecked\n\n    return (\n      <Fragment>\n        <div className='register--left-side'>\n          <div className='register--left-side-container'>\n            <Logo logoSize='normal' textColour='white' />\n            <p className='register--left-side__title'>\n              <i className='mdi mdi-greater-than register--left-side-icon' />\n              Crea tu cuenta\n            </p>\n            <p className='register--left-side__subtitle'>\n              Ingresa tus datos de manera correcta para crear tu cuenta\n            </p>\n          </div>\n        </div>\n\n        <form className='register__form register--full-height'>\n          <p className='register__form-title'>\n            Comencemos creando tu{' '}\n            <span className='register__form-title--highlight'>cuenta</span>\n          </p>\n\n          <div className='register__form-container'>\n            <TextField\n              value={fullName}\n              onChange={handleInputs(this, 'fullName')}\n              ref={r => requiredFields.add(r)}\n              required\n              floatLabel={labelName}\n              placeholder={labelName}\n            />\n\n            <TextField\n              value={rfc}\n              onChange={handleInputs(this, 'rfc')}\n              ref={r => requiredFields.add(r)}\n              required\n              floatLabel={labelRFC}\n              placeholder={labelRFC}\n            />\n\n            <TextField\n              value={email}\n              onChange={handleInputs(this, 'email')}\n              ref={r => requiredFields.add(r)}\n              required\n              floatLabel={labelEmail}\n              placeholder={labelEmail}\n            />\n\n            <TextField\n              value={phone}\n              onChange={handleInputs(this, 'phone')}\n              ref={r => requiredFields.add(r)}\n              required\n              floatLabel={labelPhone}\n              placeholder={labelPhone}\n            />\n            <TextField\n              value={password}\n              onChange={handleInputs(this, 'password')}\n              ref={r => requiredFields.add(r)}\n              required\n              floatLabel={labelPassword}\n              placeholder={labelPassword}\n              type={hidden ? 'password' : 'text'}\n              hideAndShowPassword\n              onChangeType={() => toggleShowHidePassword(this, 'hidden')}\n            />\n            <TextField\n              value={passwordConfirmation}\n              onChange={handleInputs(this, 'passwordConfirmation')}\n              ref={r => requiredFields.add(r)}\n              required\n              floatLabel={labelPasswordConfirmation}\n              placeholder={labelPasswordConfirmation}\n              type={hiddenConfirmation ? 'password' : 'text'}\n              hideAndShowPassword\n              onChangeType={() =>\n                toggleShowHidePassword(this, 'hiddenConfirmation')\n              }\n            />\n            <p className='register__text register__password-text'>\n              La contraseña debe cumplir las siguientes características:\n            </p>\n            <div className='register__text'>\n              <p className=' register__password-text'>\n                <i\n                  className={classNames('mdi mdi-check register__icon', {\n                    'register__icon-valid': validPasswordLength\n                  })}\n                />\n                Mínimo 6 Caracteres\n              </p>\n              <p className='register__password-text'>\n                <i\n                  className={classNames('mdi mdi-check register__icon', {\n                    'register__icon-valid': capitalLetter\n                  })}\n                />\n                Al menos 1 Mayúscula\n              </p>\n              <p className='register__password-text'>\n                <i\n                  className={classNames('mdi mdi-check register__icon', {\n                    'register__icon-valid': hasNumber\n                  })}\n                />\n                Al menos un Número\n              </p>\n            </div>\n          </div>\n\n          <div className='register__form-terms'>\n            <Terms\n              terms={termsChecked}\n              toggleCheckTerms={this.toggleCheckTerms}\n            />\n          </div>\n          <Button\n            buttonStyle='round'\n            type='submit'\n            className='register__form-button'\n            disabled={!disabledButton}\n            onClick={this.saveData}\n          >\n            Crear mi cuenta\n          </Button>\n        </form>\n      </Fragment>\n    )\n  }\n\n  render () {\n    return (\n      <DocumentTitle title={'Diagnóstico - Enconta'}>\n        <div className='register'>\n          {this.renderForm()}\n          <div className='notification-container notification-centered'>\n            <NotificationsContainer />\n          </div>\n        </div>\n      </DocumentTitle>\n    )\n  }\n}\n\nexport default CreateAccount\n"]},"metadata":{},"sourceType":"module"}