{"ast":null,"code":"import _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport BaseStore from './baseStore';\n\nvar Clients =\n/*#__PURE__*/\nfunction (_BaseStore) {\n  _inherits(Clients, _BaseStore);\n\n  function Clients() {\n    var _this;\n\n    _classCallCheck(this, Clients);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Clients).call(this));\n    _this.currentClient = {\n      clientLegalName: '',\n      clientNickname: '',\n      clientPostalCode: '',\n      clientRfc: ''\n    };\n    _this.clientsList = [];\n    _this.totalPages = 1;\n    _this.currentPage = 1;\n    _this.actions = {\n      CLIENTS_LIST_RECEIVED: function CLIENTS_LIST_RECEIVED(action) {\n        _this.setClientsList(action.data);\n      },\n      CLIENT_DATA_RECEIVED: function CLIENT_DATA_RECEIVED(action) {\n        _this.setCurrentClient(action.data);\n      },\n      CLIENT_STATUS_CHANGED: function CLIENT_STATUS_CHANGED(action) {\n        _this.updateClientList(action.data);\n      },\n      CLEAR_CURRENT_CLIENT: function CLEAR_CURRENT_CLIENT() {\n        _this.clearCurrentClient();\n      }\n    };\n    return _this;\n  } // Pagination: Get total pages\n\n\n  _createClass(Clients, [{\n    key: \"getTotalPages\",\n    value: function getTotalPages() {\n      return this.totalPages;\n    } // Pagination: Get total items\n\n  }, {\n    key: \"getTotalItems\",\n    value: function getTotalItems() {\n      return this.totalItems;\n    } // Pagination: Get current page\n\n  }, {\n    key: \"getCurrentPage\",\n    value: function getCurrentPage() {\n      return this.currentPage;\n    } // Returns stored Employee, this is used when explicitly you want to know it\n\n  }, {\n    key: \"getCurrentClient\",\n    value: function getCurrentClient() {\n      return this.currentClient;\n    } // Returns stored Clients List, this is used when explicitly you want to know it\n\n  }, {\n    key: \"getClientsList\",\n    value: function getClientsList() {\n      return this.clientsList;\n    }\n  }, {\n    key: \"setClientsList\",\n    value: function setClientsList(data) {\n      this.clientsList = data ? data.clients.map(function (client) {\n        return {\n          id: client.id,\n          legalName: client.legal_name,\n          rfc: client.rfc,\n          email: client.email,\n          deactivated: client.deactivated,\n          nickname: client.nickname\n        };\n      }) : this.clientsList;\n      this.totalPages = data.pagination.total_pages;\n      this.totalItems = data.pagination.total_items;\n      this.currentPage = data.pagination.current_page;\n    }\n  }, {\n    key: \"updateClientList\",\n    value: function updateClientList(data) {\n      var clientsList = this.clientsList;\n      clientsList.map(function (client) {\n        if (client.id === data.client.id) {\n          client.deactivated = data.client.deactivated;\n        }\n      });\n      this.clientsList = clientsList;\n    } // If data is received from server, stores it as currentClient, otherwise stores the defaults\n\n  }, {\n    key: \"setCurrentClient\",\n    value: function setCurrentClient(data) {\n      var _data$client = data.client,\n          email = _data$client.email,\n          legalName = _data$client.legal_name,\n          nickname = _data$client.nickname,\n          postalCode = _data$client.postal_code,\n          rfc = _data$client.rfc;\n      this.currentClient = {\n        clientEmail: email,\n        clientLegalName: legalName,\n        clientNickname: nickname,\n        clientPostalCode: postalCode,\n        clientRfc: rfc\n      };\n    }\n  }, {\n    key: \"clearCurrentClient\",\n    value: function clearCurrentClient() {\n      this.currentClient = {\n        clientLegalName: '',\n        clientName: '',\n        clientNickname: '',\n        clientPostalCode: '',\n        clientRfc: ''\n      };\n    }\n  }]);\n\n  return Clients;\n}(BaseStore);\n\nexport default Clients.getInstance();","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/stores/clients.js"],"names":["BaseStore","Clients","currentClient","clientLegalName","clientNickname","clientPostalCode","clientRfc","clientsList","totalPages","currentPage","actions","CLIENTS_LIST_RECEIVED","action","setClientsList","data","CLIENT_DATA_RECEIVED","setCurrentClient","CLIENT_STATUS_CHANGED","updateClientList","CLEAR_CURRENT_CLIENT","clearCurrentClient","totalItems","clients","map","client","id","legalName","legal_name","rfc","email","deactivated","nickname","pagination","total_pages","total_items","current_page","postalCode","postal_code","clientEmail","clientName","getInstance"],"mappings":"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","sourcesContent":["import BaseStore from './baseStore'\n\nclass Clients extends BaseStore {\n  constructor () {\n    super()\n    this.currentClient = {\n      clientLegalName: '',\n      clientNickname: '',\n      clientPostalCode: '',\n      clientRfc: ''\n    }\n    this.clientsList = []\n    this.totalPages = 1\n    this.currentPage = 1\n    this.actions = {\n      CLIENTS_LIST_RECEIVED: action => {\n        this.setClientsList(action.data)\n      },\n      CLIENT_DATA_RECEIVED: action => {\n        this.setCurrentClient(action.data)\n      },\n      CLIENT_STATUS_CHANGED: action => {\n        this.updateClientList(action.data)\n      },\n      CLEAR_CURRENT_CLIENT: () => {\n        this.clearCurrentClient()\n      }\n    }\n  }\n  // Pagination: Get total pages\n  getTotalPages () {\n    return this.totalPages\n  }\n  // Pagination: Get total items\n  getTotalItems () {\n    return this.totalItems\n  }\n\n  // Pagination: Get current page\n  getCurrentPage () {\n    return this.currentPage\n  }\n  // Returns stored Employee, this is used when explicitly you want to know it\n  getCurrentClient () {\n    return this.currentClient\n  }\n  // Returns stored Clients List, this is used when explicitly you want to know it\n  getClientsList () {\n    return this.clientsList\n  }\n  setClientsList (data) {\n    this.clientsList = data\n      ? data.clients.map(client => {\n        return {\n          id: client.id,\n          legalName: client.legal_name,\n          rfc: client.rfc,\n          email: client.email,\n          deactivated: client.deactivated,\n          nickname: client.nickname\n        }\n      })\n      : this.clientsList\n    this.totalPages = data.pagination.total_pages\n    this.totalItems = data.pagination.total_items\n    this.currentPage = data.pagination.current_page\n  }\n\n  updateClientList (data) {\n    let clientsList = this.clientsList\n    clientsList.map(client => {\n      if (client.id === data.client.id) {\n        client.deactivated = data.client.deactivated\n      }\n    })\n    this.clientsList = clientsList\n  }\n  // If data is received from server, stores it as currentClient, otherwise stores the defaults\n  setCurrentClient (data) {\n    const {\n      email,\n      legal_name: legalName,\n      nickname,\n      postal_code: postalCode,\n      rfc\n    } = data.client\n\n    this.currentClient = {\n      clientEmail: email,\n      clientLegalName: legalName,\n      clientNickname: nickname,\n      clientPostalCode: postalCode,\n      clientRfc: rfc\n    }\n  }\n  clearCurrentClient () {\n    this.currentClient = {\n      clientLegalName: '',\n      clientName: '',\n      clientNickname: '',\n      clientPostalCode: '',\n      clientRfc: ''\n    }\n  }\n}\n\nexport default Clients.getInstance()\n"]},"metadata":{},"sourceType":"module"}