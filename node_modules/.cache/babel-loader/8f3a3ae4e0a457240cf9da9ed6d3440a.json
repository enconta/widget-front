{"ast":null,"code":"import _defineProperty from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/editClient/employees/index.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router';\nimport accounting from 'accounting';\nimport EditClientActions from 'actions/editClient';\nimport EmployeeStore from 'stores/employees';\nimport Paginator from 'shared/paginator';\nimport IconButton from 'shared/iconButton';\nimport TextField from 'shared/textField';\nimport SelectField from 'shared/selectField';\nimport TableFilter from 'shared/tableFilter';\n\nfunction getCurrentState() {\n  var employees = EmployeeStore.getEmployeesList();\n  var totalPages = EmployeeStore.getTotalPages();\n  var totalItems = EmployeeStore.getTotalItems();\n  return {\n    employees: employees,\n    totalItems: totalItems,\n    totalPages: totalPages\n  };\n}\n\nvar PLATFORM_STATUS_OPTIONS = [{\n  id: '',\n  label: 'Todos'\n}, {\n  id: 'active',\n  label: 'Activos'\n}, {\n  id: 'inactive',\n  label: 'Inactivos'\n}];\n\nvar EmployeesTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EmployeesTable, _Component);\n\n  function EmployeesTable() {\n    var _this;\n\n    _classCallCheck(this, EmployeesTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EmployeesTable).call(this));\n    _this.data = {\n      filters: {\n        full_name: '',\n        active_status: '',\n        rfc: ''\n      }\n    };\n    _this.state = Object.assign({}, _this.data, getCurrentState());\n    _this._onChange = _this._onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(EmployeesTable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Adds listener, when the Store changes, trigger the _onChange callback func\n      EmployeeStore.addChangeListener(this._onChange);\n      this.loadData();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.location.search !== prevProps.location.search) {\n        this.loadData(this.props);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // Removes the listener to avoid memory leaks\n      EmployeeStore.removeChangeListener(this._onChange);\n    }\n  }, {\n    key: \"_onChange\",\n    value: function _onChange() {\n      // When the store changes, the state goes to it and pulls the updated data\n      // then sets it so the component rerenders\n      var state = getCurrentState();\n      this.setState(state);\n    } // Toggles Employee Status (active: true/false)\n\n  }, {\n    key: \"toggleEmployeeStatus\",\n    value: function toggleEmployeeStatus(id, active) {\n      // active is a boolean, request is a string that is going to be sent to the API via URL\n      var request = active ? 'activate' : 'deactivate';\n      EditClientActions.toggleEmployeeStatus(id, request);\n    }\n  }, {\n    key: \"loadData\",\n    value: function loadData() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var params = Object.assign({}, props.location.query);\n      EditClientActions.getEmployeesList(params);\n      this.setState(function (prevState) {\n        return {\n          filters: Object.assign({}, prevState.filters, params)\n        };\n      });\n    }\n  }, {\n    key: \"onChangeFilter\",\n    value: function onChangeFilter(field, e) {\n      var filter = _defineProperty({}, field, e.target.value);\n\n      this.setState(function (prevState) {\n        return {\n          filters: Object.assign({}, prevState.filters, filter)\n        };\n      });\n    } // Reset all filters and data to default\n\n  }, {\n    key: \"clearFilters\",\n    value: function clearFilters() {\n      this.setState({\n        filters: this.data.filters\n      });\n    } // Render a wrapper for the filters element\n\n  }, {\n    key: \"renderFilters\",\n    value: function renderFilters() {\n      var filters = this.state.filters;\n      return React.createElement(TableFilter, {\n        baseUrl: \"/empleados\",\n        filters: filters,\n        onClearFilters: this.clearFilters.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        placeholder: \"Nombre\",\n        value: this.state.filters.full_name,\n        onChange: this.onChangeFilter.bind(this, 'full_name'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        placeholder: \"RFC\",\n        value: this.state.filters.rfc,\n        onChange: this.onChangeFilter.bind(this, 'rfc'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(SelectField, {\n        placeholder: \"Activos / Inactivos\",\n        value: this.state.filters.active_status,\n        options: PLATFORM_STATUS_OPTIONS,\n        onChange: this.onChangeFilter.bind(this, 'active_status'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }));\n    } // Renders each employee and adds them as a row in the table\n\n  }, {\n    key: \"renderTableBody\",\n    value: function renderTableBody() {\n      var _this2 = this;\n\n      var rows = this.state.employees.map(function (employee) {\n        return React.createElement(\"tr\", {\n          key: employee.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          className: \"align-left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, employee.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, employee.rfc), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, employee.email), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"link\",\n          onClick: _this2.toggleEmployeeStatus.bind(_this2, employee.id, employee.deactivated),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, employee.deactivated ? 'Inactivo' : 'Activo')), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/empleado/\".concat(employee.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          icon: \"pencil\",\n          tooltip: \"Editar\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }))));\n      });\n      return React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, rows);\n    }\n  }, {\n    key: \"renderTable\",\n    value: function renderTable() {\n      var table = React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"block unselectable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"No hay empleados\")));\n\n      if (this.state.employees.length > 0) {\n        table = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, React.createElement(\"table\", {\n          className: \"table\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }, React.createElement(\"thead\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          className: \"align-left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, \"Nombre\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, \"RFC\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, \"Correo\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, \"Estado\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }))), this.renderTableBody()), React.createElement(Paginator, {\n          totalPages: this.state.totalPages,\n          location: this.props.location,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }));\n      }\n\n      return table;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, this.renderFilters(), React.createElement(\"div\", {\n        className: \"caption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, accounting.formatNumber(this.state.totalItems), \" elementos visibles\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }), this.renderTable());\n    }\n  }]);\n\n  return EmployeesTable;\n}(Component);\n\nEmployeesTable.propTypes = {\n  location: PropTypes.object\n};\nexport default EmployeesTable;","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/editClient/employees/index.js"],"names":["React","Component","PropTypes","Link","accounting","EditClientActions","EmployeeStore","Paginator","IconButton","TextField","SelectField","TableFilter","getCurrentState","employees","getEmployeesList","totalPages","getTotalPages","totalItems","getTotalItems","PLATFORM_STATUS_OPTIONS","id","label","EmployeesTable","data","filters","full_name","active_status","rfc","state","Object","assign","_onChange","bind","addChangeListener","loadData","prevProps","props","location","search","removeChangeListener","setState","active","request","toggleEmployeeStatus","params","query","prevState","field","e","filter","target","value","clearFilters","onChangeFilter","rows","map","employee","name","email","deactivated","table","length","renderTableBody","renderFilters","formatNumber","renderTable","propTypes","object"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router'\nimport accounting from 'accounting'\n\nimport EditClientActions from 'actions/editClient'\nimport EmployeeStore from 'stores/employees'\nimport Paginator from 'shared/paginator'\nimport IconButton from 'shared/iconButton'\nimport TextField from 'shared/textField'\nimport SelectField from 'shared/selectField'\nimport TableFilter from 'shared/tableFilter'\n\nfunction getCurrentState () {\n  const employees = EmployeeStore.getEmployeesList()\n  const totalPages = EmployeeStore.getTotalPages()\n  const totalItems = EmployeeStore.getTotalItems()\n  return {\n    employees,\n    totalItems,\n    totalPages\n  }\n}\n\nconst PLATFORM_STATUS_OPTIONS = [\n  { id: '', label: 'Todos' },\n  { id: 'active', label: 'Activos' },\n  { id: 'inactive', label: 'Inactivos' }\n]\n\nclass EmployeesTable extends Component {\n  constructor () {\n    super()\n    this.data = {\n      filters: {\n        full_name: '',\n        active_status: '',\n        rfc: ''\n      }\n    }\n    this.state = Object.assign({}, this.data, getCurrentState())\n    this._onChange = this._onChange.bind(this)\n  }\n\n  componentDidMount () {\n    // Adds listener, when the Store changes, trigger the _onChange callback func\n    EmployeeStore.addChangeListener(this._onChange)\n    this.loadData()\n  }\n\n  componentDidUpdate (prevProps) {\n    if (this.props.location.search !== prevProps.location.search) {\n      this.loadData(this.props)\n    }\n  }\n\n  componentWillUnmount () {\n    // Removes the listener to avoid memory leaks\n    EmployeeStore.removeChangeListener(this._onChange)\n  }\n\n  _onChange () {\n    // When the store changes, the state goes to it and pulls the updated data\n    // then sets it so the component rerenders\n    const state = getCurrentState()\n    this.setState(state)\n  }\n\n  // Toggles Employee Status (active: true/false)\n  toggleEmployeeStatus (id, active) {\n    // active is a boolean, request is a string that is going to be sent to the API via URL\n    const request = active ? 'activate' : 'deactivate'\n    EditClientActions.toggleEmployeeStatus(id, request)\n  }\n\n  loadData (props = this.props) {\n    const params = Object.assign({}, props.location.query)\n    EditClientActions.getEmployeesList(params)\n    this.setState(prevState => ({\n      filters: Object.assign({}, prevState.filters, params)\n    }))\n  }\n\n  onChangeFilter (field, e) {\n    const filter = { [field]: e.target.value }\n    this.setState(prevState => ({\n      filters: Object.assign({}, prevState.filters, filter)\n    }))\n  }\n\n  // Reset all filters and data to default\n  clearFilters () {\n    this.setState({ filters: this.data.filters })\n  }\n\n  // Render a wrapper for the filters element\n  renderFilters () {\n    const { filters } = this.state\n    return (\n      <TableFilter\n        baseUrl='/empleados'\n        filters={filters}\n        onClearFilters={this.clearFilters.bind(this)}\n      >\n        <TextField\n          placeholder='Nombre'\n          value={this.state.filters.full_name}\n          onChange={this.onChangeFilter.bind(this, 'full_name')}\n        />\n        <TextField\n          placeholder='RFC'\n          value={this.state.filters.rfc}\n          onChange={this.onChangeFilter.bind(this, 'rfc')}\n        />\n        <SelectField\n          placeholder='Activos / Inactivos'\n          value={this.state.filters.active_status}\n          options={PLATFORM_STATUS_OPTIONS}\n          onChange={this.onChangeFilter.bind(this, 'active_status')}\n        />\n      </TableFilter>\n    )\n  }\n\n  // Renders each employee and adds them as a row in the table\n  renderTableBody () {\n    const rows = this.state.employees.map(employee => {\n      return (\n        <tr key={employee.id}>\n          <td className='align-left'>{employee.name}</td>\n          <td>{employee.rfc}</td>\n          <td>{employee.email}</td>\n          <td>\n            <button\n              className='link'\n              onClick={this.toggleEmployeeStatus.bind(\n                this,\n                employee.id,\n                employee.deactivated\n              )}\n            >\n              {employee.deactivated ? 'Inactivo' : 'Activo'}\n            </button>\n          </td>\n          <td>\n            <Link to={`/empleado/${employee.id}`}>\n              <IconButton icon='pencil' tooltip='Editar' />\n            </Link>\n          </td>\n        </tr>\n      )\n    })\n\n    return <tbody>{rows}</tbody>\n  }\n\n  renderTable () {\n    let table = (\n      <div className='content'>\n        <div className='block unselectable'>\n          <p>No hay empleados</p>\n        </div>\n      </div>\n    )\n    if (this.state.employees.length > 0) {\n      table = (\n        <div>\n          <table className='table'>\n            <thead>\n              <tr>\n                <th className='align-left'>Nombre</th>\n                <th>RFC</th>\n                <th>Correo</th>\n                <th>Estado</th>\n                <th />\n              </tr>\n            </thead>\n            {this.renderTableBody()}\n          </table>\n          <Paginator\n            totalPages={this.state.totalPages}\n            location={this.props.location}\n          />\n        </div>\n      )\n    }\n    return table\n  }\n\n  render () {\n    return (\n      <div>\n        {this.renderFilters()}\n        <div className='caption'>\n          {accounting.formatNumber(this.state.totalItems)} elementos visibles\n        </div>\n        <br />\n        {this.renderTable()}\n      </div>\n    )\n  }\n}\n\nEmployeesTable.propTypes = {\n  location: PropTypes.object\n}\nexport default EmployeesTable\n"]},"metadata":{},"sourceType":"module"}