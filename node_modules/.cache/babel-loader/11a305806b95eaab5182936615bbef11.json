{"ast":null,"code":"import _toConsumableArray from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/editClient/synchronization/components/bankList/index.js\";\nimport React, { Component, Fragment } from 'react';\nimport { replaceUnderScore, handleURL } from 'utils';\nimport KebabMenu from 'shared/kebabMenu';\nimport PaymentAccountsStore from 'stores/paymentAccounts';\n\nfunction getCurrentState() {\n  return {\n    activeBankList: PaymentAccountsStore.getActiveBankList()\n  };\n}\n\nvar BankList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BankList, _Component);\n\n  function BankList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BankList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BankList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = _objectSpread({}, getCurrentState());\n\n    _this.handleCRUDMenu = function (id) {\n      var activeBankList = _toConsumableArray(_this.state.activeBankList);\n\n      activeBankList.forEach(function (bank, index) {\n        if (bank.id === id) {\n          activeBankList[index].isCRUDMenuShow = !bank.isCRUDMenuShow;\n        } else {\n          activeBankList[index].isCRUDMenuShow = false;\n        }\n      });\n\n      _this.setState({\n        activeBankList: activeBankList\n      });\n    };\n\n    _this.optionsMenu = function (name) {\n      var optionsMenu = name === 'bancomer' ? [{\n        icon: 'pencil',\n        handle: function handle() {\n          return handleURL(\"/\".concat(name, \"/editar-cuentas/\"));\n        },\n        tooltip: 'Editar',\n        disabled: false\n      }, {\n        icon: 'lock-reset',\n        handle: function handle() {\n          return handleURL(\"/\".concat(name, \"/actualizar-token\"));\n        },\n        tooltip: 'Actualizar token',\n        disabled: false\n      }] : [{\n        icon: 'pencil',\n        handle: function handle() {\n          return handleURL(\"/\".concat(name, \"/editar-cuentas/\"));\n        },\n        tooltip: 'Editar',\n        disabled: false\n      }];\n      return optionsMenu;\n    };\n\n    return _this;\n  }\n\n  _createClass(BankList, [{\n    key: \"renderBanks\",\n    value: function renderBanks() {\n      var _this2 = this;\n\n      var activeBankList = this.state.activeBankList;\n      var bankList = activeBankList.map(function (_ref) {\n        var name = _ref.bank_name,\n            id = _ref.id,\n            isCRUDMenuShow = _ref.isCRUDMenuShow;\n        return React.createElement(\"div\", {\n          className: \"synchronization__bank-list-item\",\n          key: id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, replaceUnderScore(name)), React.createElement(\"div\", {\n          className: \"container-menu\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(KebabMenu, {\n          options: _this2.optionsMenu(name),\n          handleKebabMenu: function handleKebabMenu() {\n            return _this2.handleCRUDMenu(id);\n          },\n          idRow: id,\n          isOpen: isCRUDMenuShow,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        })));\n      });\n      return React.createElement(\"div\", {\n        className: \"synchronization__bank-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"synchronization__bank-list-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Banco\"), bankList);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"subheader-green margin-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Editar sincronizaci\\xF3n con banco existente\"), React.createElement(\"p\", {\n        className: \"synchronization__title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Mis cuentas\"), React.createElement(\"p\", {\n        className: \"synchronization__text-gray\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Selecciona un banco para editar la sincronizaci\\xF3n tus cuentas.\"), this.renderBanks());\n    }\n  }]);\n\n  return BankList;\n}(Component);\n\nexport { BankList as default };","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/editClient/synchronization/components/bankList/index.js"],"names":["React","Component","Fragment","replaceUnderScore","handleURL","KebabMenu","PaymentAccountsStore","getCurrentState","activeBankList","getActiveBankList","BankList","state","handleCRUDMenu","id","forEach","bank","index","isCRUDMenuShow","setState","optionsMenu","name","icon","handle","tooltip","disabled","bankList","map","bank_name","renderBanks"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { replaceUnderScore, handleURL } from 'utils'\nimport KebabMenu from 'shared/kebabMenu'\n\nimport PaymentAccountsStore from 'stores/paymentAccounts'\n\nfunction getCurrentState () {\n  return {\n    activeBankList: PaymentAccountsStore.getActiveBankList()\n  }\n}\nexport default class BankList extends Component {\n  state = {\n    ...getCurrentState()\n  }\n\n  handleCRUDMenu = id => {\n    let activeBankList = [...this.state.activeBankList]\n    activeBankList.forEach((bank, index) => {\n      if (bank.id === id) {\n        activeBankList[index].isCRUDMenuShow = !bank.isCRUDMenuShow\n      } else {\n        activeBankList[index].isCRUDMenuShow = false\n      }\n    })\n    this.setState({\n      activeBankList: activeBankList\n    })\n  }\n\n  optionsMenu = name => {\n    const optionsMenu =\n      name === 'bancomer'\n        ? [\n          {\n            icon: 'pencil',\n            handle: () => handleURL(`/${name}/editar-cuentas/`),\n            tooltip: 'Editar',\n            disabled: false\n          },\n          {\n            icon: 'lock-reset',\n            handle: () => handleURL(`/${name}/actualizar-token`),\n            tooltip: 'Actualizar token',\n            disabled: false\n          }\n        ]\n        : [\n          {\n            icon: 'pencil',\n            handle: () => handleURL(`/${name}/editar-cuentas/`),\n            tooltip: 'Editar',\n            disabled: false\n          }\n        ]\n    return optionsMenu\n  }\n\n  renderBanks () {\n    const { activeBankList } = this.state\n    const bankList = activeBankList.map(\n      ({ bank_name: name, id, isCRUDMenuShow }) => (\n        <div className='synchronization__bank-list-item' key={id}>\n          <p>{replaceUnderScore(name)}</p>\n          <div className='container-menu'>\n            <KebabMenu\n              options={this.optionsMenu(name)}\n              handleKebabMenu={() => this.handleCRUDMenu(id)}\n              idRow={id}\n              isOpen={isCRUDMenuShow}\n            />\n          </div>\n        </div>\n      )\n    )\n\n    return (\n      <div className='synchronization__bank-list'>\n        <p className='synchronization__bank-list-title'>Banco</p>\n        {bankList}\n      </div>\n    )\n  }\n  render () {\n    return (\n      <Fragment>\n        <h4 className='subheader-green margin-top'>\n          Editar sincronización con banco existente\n        </h4>\n        <p className='synchronization__title'>Mis cuentas</p>\n        <p className='synchronization__text-gray'>\n          Selecciona un banco para editar la sincronización tus cuentas.\n        </p>\n        {this.renderBanks()}\n      </Fragment>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}