{"ast":null,"code":"import _objectSpread from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/editClient/index.js\";\nimport React, { Fragment, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, browserHistory } from 'react-router';\nimport Card from 'shared/card';\nimport Button from 'shared/button';\nimport NewBank from './synchronization';\nimport SelectBank from './synchronization/selectBank';\nimport SmartSync from './synchronization/smart-sync';\nimport SynchronizationFinished from './synchronization/synchronizationFinished';\nimport EditSyncAccounts from './synchronization/editSyncAccounts';\nimport UpdateToken from './synchronization/updateToken';\nimport SessionStore from 'stores/session';\nimport EditClientActions from 'actions/editClient';\n\nfunction getCurrentState() {\n  return {\n    checkFeature: SessionStore.getFeatures()\n  };\n}\n\nvar EditClient =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditClient, _Component);\n\n  function EditClient() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditClient);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditClient)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = _objectSpread({}, getCurrentState());\n\n    _this._onChange = function () {\n      _this.setState(getCurrentState());\n    };\n\n    return _this;\n  }\n\n  _createClass(EditClient, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      SessionStore.addChangeListener(this._onChange);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      SessionStore.removeChangeListener(this._onChange);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var checkFeature = this.state.checkFeature;\n      var hasSynchronization = checkFeature.find(function (feature) {\n        return feature.key === 'synchronization';\n      });\n      var content = null;\n      var button = null;\n\n      switch (this.props.route.tab) {\n        case 'entidades':\n          switch (this.props.route.content) {\n            case 'list':\n              content = React.createElement(RegisteredRFC, Object.assign({}, this.props, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 51\n                },\n                __self: this\n              }));\n              break;\n\n            case 'edit':\n              content = React.createElement(EditClientRFC, Object.assign({}, this.props, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 54\n                },\n                __self: this\n              }));\n              break;\n          }\n\n          break;\n\n        case 'sucursales':\n          switch (this.props.route.content) {\n            case 'list':\n              content = React.createElement(BranchesTable, Object.assign({}, this.props, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 61\n                },\n                __self: this\n              }));\n              button = React.createElement(Link, {\n                to: \"/sucursal/nueva\",\n                onClick: EditClientActions.clearBranch,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 63\n                },\n                __self: this\n              }, React.createElement(Button, {\n                buttonStyle: \"secondary\",\n                icon: \"plus\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 67\n                },\n                __self: this\n              }, \"Nueva Sucursal\"));\n              break;\n\n            case 'edit':\n              content = React.createElement(EditClientBranch, Object.assign({}, this.props, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 74\n                },\n                __self: this\n              }));\n              break;\n          }\n\n          break;\n\n        case 'cuentas-de-pago':\n          switch (this.props.route.content) {\n            case 'list':\n              content = React.createElement(PaymentAccounts, Object.assign({}, this.props, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 81\n                },\n                __self: this\n              }));\n              button = React.createElement(Fragment, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 83\n                },\n                __self: this\n              }, hasSynchronization && React.createElement(Button, {\n                buttonStyle: \"secondary\",\n                icon: \"cloud-sync\",\n                onClick: function onClick() {\n                  browserHistory.push('/smart-sync');\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 85\n                },\n                __self: this\n              }, \"Sincronizaci\\xF3n Bancaria\"), React.createElement(Link, {\n                to: \"/cuenta-de-pago/nueva\",\n                onClick: PaymentAccountsActions.clearCurrent,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 95\n                },\n                __self: this\n              }, React.createElement(Button, {\n                buttonStyle: \"secondary\",\n                icon: \"plus\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 99\n                },\n                __self: this\n              }, \"Agregar Cuenta\")));\n              break;\n\n            case 'edit':\n              content = React.createElement(NewPaymentAccount, Object.assign({}, this.props, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 107\n                },\n                __self: this\n              }));\n              break;\n\n            case 'smartSync':\n              content = React.createElement(SmartSync, Object.assign({}, this.props, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 110\n                },\n                __self: this\n              }));\n              break;\n\n            case 'editSecond':\n              content = React.createElement(NewBank, Object.assign({}, this.props, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 113\n                },\n                __self: this\n              }));\n              break;\n\n            case 'continue':\n              content = React.createElement(SelectBank, Object.assign({}, this.props, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 116\n                },\n                __self: this\n              }));\n              break;\n\n            case 'finished':\n              content = React.createElement(SynchronizationFinished, Object.assign({}, this.props, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 119\n                },\n                __self: this\n              }));\n              break;\n\n            case 'edit-sync-accounts':\n              content = React.createElement(EditSyncAccounts, Object.assign({}, this.props, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 122\n                },\n                __self: this\n              }));\n              break;\n\n            case 'update-token':\n              content = React.createElement(UpdateToken, Object.assign({}, this.props, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 125\n                },\n                __self: this\n              }));\n              break;\n          }\n\n          break;\n\n        case 'clientes':\n          switch (this.props.route.content) {\n            case 'list':\n              content = React.createElement(ClientsTable, Object.assign({}, this.props, {\n                type: \"client\",\n                key: \"client\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 133\n                },\n                __self: this\n              }));\n              button = React.createElement(Link, {\n                to: \"/cliente/nuevo\",\n                onClick: EditClientActions.clearClient,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 136\n                },\n                __self: this\n              }, React.createElement(Button, {\n                buttonStyle: \"secondary\",\n                icon: \"plus\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 137\n                },\n                __self: this\n              }, \"Agregar Cliente\"));\n              break;\n\n            case 'edit':\n              content = React.createElement(EditClientInfo, Object.assign({}, this.props, {\n                type: \"client\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 144\n                },\n                __self: this\n              }));\n              break;\n          }\n\n          break;\n\n        case 'empleados':\n          switch (this.props.route.content) {\n            case 'list':\n              content = React.createElement(EmployeesTable, Object.assign({}, this.props, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 151\n                },\n                __self: this\n              }));\n              button = React.createElement(Link, {\n                to: \"/empleado/nuevo\",\n                onClick: EditClientActions.clearEmployee,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 153\n                },\n                __self: this\n              }, React.createElement(Button, {\n                buttonStyle: \"secondary\",\n                icon: \"plus\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 157\n                },\n                __self: this\n              }, \"Agregar Empleado\"));\n              break;\n\n            case 'edit':\n              content = React.createElement(EditEmployee, Object.assign({}, this.props, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 164\n                },\n                __self: this\n              }));\n              break;\n          }\n\n          break;\n\n        case 'proveedores':\n          switch (this.props.route.content) {\n            case 'list':\n              content = React.createElement(ClientsTable, Object.assign({}, this.props, {\n                type: \"supplier\",\n                key: \"supplier\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 172\n                },\n                __self: this\n              }));\n              button = React.createElement(Link, {\n                to: \"/proveedor/nuevo\",\n                onClick: EditClientActions.clearClient,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 175\n                },\n                __self: this\n              }, React.createElement(Button, {\n                buttonStyle: \"secondary\",\n                icon: \"plus\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 179\n                },\n                __self: this\n              }, \"Agregar Proveedor\"));\n              break;\n\n            case 'edit':\n              content = React.createElement(EditClientInfo, Object.assign({}, this.props, {\n                type: \"supplier\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 186\n                },\n                __self: this\n              }));\n              break;\n          }\n\n          break;\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"flex-between\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"headline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Mi Empresa\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, button)), React.createElement(Card, {\n        title: [{\n          id: 'entidades',\n          label: 'Entidades'\n        }, {\n          id: 'sucursales',\n          label: 'Sucursales'\n        }, {\n          id: 'cuentas-de-pago',\n          label: 'Cuentas Bancarias'\n        }, {\n          id: 'clientes',\n          label: 'Clientes'\n        }, {\n          id: 'empleados',\n          label: 'Empleados'\n        }, {\n          id: 'proveedores',\n          label: 'proveedores'\n        }],\n        activeTab: this.props.route.tab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, content));\n    }\n  }]);\n\n  return EditClient;\n}(Component);\n\nEditClient.propTypes = {\n  route: PropTypes.shape({\n    tab: PropTypes.number,\n    content: PropTypes.element\n  })\n};\nexport default EditClient;","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/editClient/index.js"],"names":["React","Fragment","Component","PropTypes","Link","browserHistory","Card","Button","NewBank","SelectBank","SmartSync","SynchronizationFinished","EditSyncAccounts","UpdateToken","SessionStore","EditClientActions","getCurrentState","checkFeature","getFeatures","EditClient","state","_onChange","setState","addChangeListener","removeChangeListener","hasSynchronization","find","feature","key","content","button","props","route","tab","clearBranch","push","PaymentAccountsActions","clearCurrent","clearClient","clearEmployee","id","label","propTypes","shape","number","element"],"mappings":"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","sourcesContent":["import React, { Fragment, Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link, browserHistory } from 'react-router'\n\nimport Card from 'shared/card'\nimport Button from 'shared/button'\n\nimport NewBank from './synchronization'\nimport SelectBank from './synchronization/selectBank'\nimport SmartSync from './synchronization/smart-sync'\nimport SynchronizationFinished from './synchronization/synchronizationFinished'\nimport EditSyncAccounts from './synchronization/editSyncAccounts'\nimport UpdateToken from './synchronization/updateToken'\n\nimport SessionStore from 'stores/session'\n\nimport EditClientActions from 'actions/editClient'\n\nfunction getCurrentState () {\n  return {\n    checkFeature: SessionStore.getFeatures()\n  }\n}\nclass EditClient extends Component {\n  state = {\n    ...getCurrentState()\n  }\n\n  componentDidMount () {\n    SessionStore.addChangeListener(this._onChange)\n  }\n\n  componentWillUnmount () {\n    SessionStore.removeChangeListener(this._onChange)\n  }\n  _onChange = () => {\n    this.setState(getCurrentState())\n  }\n\n  render () {\n    const { checkFeature } = this.state\n    const hasSynchronization = checkFeature.find(\n      feature => feature.key === 'synchronization'\n    )\n    let content = null\n    let button = null\n    switch (this.props.route.tab) {\n      case 'entidades':\n        switch (this.props.route.content) {\n          case 'list':\n            content = <RegisteredRFC {...this.props} />\n            break\n          case 'edit':\n            content = <EditClientRFC {...this.props} />\n            break\n        }\n        break\n      case 'sucursales':\n        switch (this.props.route.content) {\n          case 'list':\n            content = <BranchesTable {...this.props} />\n            button = (\n              <Link\n                to='/sucursal/nueva'\n                onClick={EditClientActions.clearBranch}\n              >\n                <Button buttonStyle='secondary' icon='plus'>\n                  Nueva Sucursal\n                </Button>\n              </Link>\n            )\n            break\n          case 'edit':\n            content = <EditClientBranch {...this.props} />\n            break\n        }\n        break\n      case 'cuentas-de-pago':\n        switch (this.props.route.content) {\n          case 'list':\n            content = <PaymentAccounts {...this.props} />\n            button = (\n              <Fragment>\n                {hasSynchronization && (\n                  <Button\n                    buttonStyle='secondary'\n                    icon='cloud-sync'\n                    onClick={() => {\n                      browserHistory.push('/smart-sync')\n                    }}\n                  >\n                    Sincronización Bancaria\n                  </Button>\n                )}\n                <Link\n                  to='/cuenta-de-pago/nueva'\n                  onClick={PaymentAccountsActions.clearCurrent}\n                >\n                  <Button buttonStyle='secondary' icon='plus'>\n                    Agregar Cuenta\n                  </Button>\n                </Link>\n              </Fragment>\n            )\n            break\n          case 'edit':\n            content = <NewPaymentAccount {...this.props} />\n            break\n          case 'smartSync':\n            content = <SmartSync {...this.props} />\n            break\n          case 'editSecond':\n            content = <NewBank {...this.props} />\n            break\n          case 'continue':\n            content = <SelectBank {...this.props} />\n            break\n          case 'finished':\n            content = <SynchronizationFinished {...this.props} />\n            break\n          case 'edit-sync-accounts':\n            content = <EditSyncAccounts {...this.props} />\n            break\n          case 'update-token':\n            content = <UpdateToken {...this.props} />\n            break\n        }\n        break\n      case 'clientes':\n        switch (this.props.route.content) {\n          case 'list':\n            content = (\n              <ClientsTable {...this.props} type='client' key='client' />\n            )\n            button = (\n              <Link to='/cliente/nuevo' onClick={EditClientActions.clearClient}>\n                <Button buttonStyle='secondary' icon='plus'>\n                  Agregar Cliente\n                </Button>\n              </Link>\n            )\n            break\n          case 'edit':\n            content = <EditClientInfo {...this.props} type='client' />\n            break\n        }\n        break\n      case 'empleados':\n        switch (this.props.route.content) {\n          case 'list':\n            content = <EmployeesTable {...this.props} />\n            button = (\n              <Link\n                to='/empleado/nuevo'\n                onClick={EditClientActions.clearEmployee}\n              >\n                <Button buttonStyle='secondary' icon='plus'>\n                  Agregar Empleado\n                </Button>\n              </Link>\n            )\n            break\n          case 'edit':\n            content = <EditEmployee {...this.props} />\n            break\n        }\n        break\n      case 'proveedores':\n        switch (this.props.route.content) {\n          case 'list':\n            content = (\n              <ClientsTable {...this.props} type='supplier' key='supplier' />\n            )\n            button = (\n              <Link\n                to='/proveedor/nuevo'\n                onClick={EditClientActions.clearClient}\n              >\n                <Button buttonStyle='secondary' icon='plus'>\n                  Agregar Proveedor\n                </Button>\n              </Link>\n            )\n            break\n          case 'edit':\n            content = <EditClientInfo {...this.props} type='supplier' />\n            break\n        }\n        break\n    }\n    return (\n      <div>\n        <div className='flex-between'>\n          <h1 className='headline'>Mi Empresa</h1>\n          <div>{button}</div>\n        </div>\n        <Card\n          title={[\n            { id: 'entidades', label: 'Entidades' },\n            { id: 'sucursales', label: 'Sucursales' },\n            { id: 'cuentas-de-pago', label: 'Cuentas Bancarias' },\n            { id: 'clientes', label: 'Clientes' },\n            { id: 'empleados', label: 'Empleados' },\n            { id: 'proveedores', label: 'proveedores' }\n          ]}\n          activeTab={this.props.route.tab}\n        >\n          {content}\n        </Card>\n      </div>\n    )\n  }\n}\n\nEditClient.propTypes = {\n  route: PropTypes.shape({\n    tab: PropTypes.number,\n    content: PropTypes.element\n  })\n}\nexport default EditClient\n"]},"metadata":{},"sourceType":"module"}