{"ast":null,"code":"import AppDispatcher from '../dispatcher'; // This action creator sends the type of action and the params (if any) to the dispatcher\n\nexport default {\n  // Calls the create method and passes the params\n  info: function info(message, timeOut, onClick) {\n    this.sendNotification('info', message, timeOut, onClick);\n  },\n  success: function success(message, timeOut, onClick) {\n    this.sendNotification('success', message, timeOut, onClick);\n  },\n  error: function error(message, timeOut, onClick) {\n    this.sendNotification('error', message, timeOut, onClick);\n  },\n  sendNotification: function sendNotification(type) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    window.setTimeout(function () {\n      AppDispatcher.handleAction({\n        actionType: 'SEND_NOTIFICATION',\n        data: {\n          type: type,\n          message: args[0],\n          timeOut: args[1],\n          onClick: args[2]\n        }\n      });\n    }, 0);\n  },\n  hide: function hide(notificationId) {\n    AppDispatcher.handleAction({\n      actionType: 'HIDE_NOTIFICATION',\n      data: notificationId\n    });\n  },\n  clearAll: function clearAll() {\n    AppDispatcher.handleAction({\n      actionType: 'CLEAR_ALL_NOTIFICATIONS'\n    });\n  }\n};","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/actions/notifications.js"],"names":["AppDispatcher","info","message","timeOut","onClick","sendNotification","success","error","type","args","window","setTimeout","handleAction","actionType","data","hide","notificationId","clearAll"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,eAA1B,C,CAEA;;AACA,eAAe;AACb;AACAC,EAAAA,IAFa,gBAEPC,OAFO,EAEEC,OAFF,EAEWC,OAFX,EAEoB;AAC/B,SAAKC,gBAAL,CAAsB,MAAtB,EAA8BH,OAA9B,EAAuCC,OAAvC,EAAgDC,OAAhD;AACD,GAJY;AAMbE,EAAAA,OANa,mBAMJJ,OANI,EAMKC,OANL,EAMcC,OANd,EAMuB;AAClC,SAAKC,gBAAL,CAAsB,SAAtB,EAAiCH,OAAjC,EAA0CC,OAA1C,EAAmDC,OAAnD;AACD,GARY;AAUbG,EAAAA,KAVa,iBAUNL,OAVM,EAUGC,OAVH,EAUYC,OAVZ,EAUqB;AAChC,SAAKC,gBAAL,CAAsB,OAAtB,EAA+BH,OAA/B,EAAwCC,OAAxC,EAAiDC,OAAjD;AACD,GAZY;AAcbC,EAAAA,gBAda,4BAcKG,IAdL,EAcoB;AAAA,sCAANC,IAAM;AAANA,MAAAA,IAAM;AAAA;;AAC/BC,IAAAA,MAAM,CAACC,UAAP,CAAkB,YAAM;AACtBX,MAAAA,aAAa,CAACY,YAAd,CAA2B;AACzBC,QAAAA,UAAU,EAAE,mBADa;AAEzBC,QAAAA,IAAI,EAAE;AACJN,UAAAA,IAAI,EAAEA,IADF;AAEJN,UAAAA,OAAO,EAAEO,IAAI,CAAC,CAAD,CAFT;AAGJN,UAAAA,OAAO,EAAEM,IAAI,CAAC,CAAD,CAHT;AAIJL,UAAAA,OAAO,EAAEK,IAAI,CAAC,CAAD;AAJT;AAFmB,OAA3B;AASD,KAVD,EAUG,CAVH;AAWD,GA1BY;AA4BbM,EAAAA,IA5Ba,gBA4BPC,cA5BO,EA4BS;AACpBhB,IAAAA,aAAa,CAACY,YAAd,CAA2B;AACzBC,MAAAA,UAAU,EAAE,mBADa;AAEzBC,MAAAA,IAAI,EAAEE;AAFmB,KAA3B;AAID,GAjCY;AAkCbC,EAAAA,QAlCa,sBAkCD;AACVjB,IAAAA,aAAa,CAACY,YAAd,CAA2B;AACzBC,MAAAA,UAAU,EAAE;AADa,KAA3B;AAGD;AAtCY,CAAf","sourcesContent":["import AppDispatcher from '../dispatcher'\n\n// This action creator sends the type of action and the params (if any) to the dispatcher\nexport default {\n  // Calls the create method and passes the params\n  info (message, timeOut, onClick) {\n    this.sendNotification('info', message, timeOut, onClick)\n  },\n\n  success (message, timeOut, onClick) {\n    this.sendNotification('success', message, timeOut, onClick)\n  },\n\n  error (message, timeOut, onClick) {\n    this.sendNotification('error', message, timeOut, onClick)\n  },\n\n  sendNotification (type, ...args) {\n    window.setTimeout(() => {\n      AppDispatcher.handleAction({\n        actionType: 'SEND_NOTIFICATION',\n        data: {\n          type: type,\n          message: args[0],\n          timeOut: args[1],\n          onClick: args[2]\n        }\n      })\n    }, 0)\n  },\n\n  hide (notificationId) {\n    AppDispatcher.handleAction({\n      actionType: 'HIDE_NOTIFICATION',\n      data: notificationId\n    })\n  },\n  clearAll () {\n    AppDispatcher.handleAction({\n      actionType: 'CLEAR_ALL_NOTIFICATIONS'\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}