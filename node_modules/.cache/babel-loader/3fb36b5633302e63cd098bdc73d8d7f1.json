{"ast":null,"code":"import _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport BaseStore from './baseStore';\n\nvar InventoriesStore =\n/*#__PURE__*/\nfunction (_BaseStore) {\n  _inherits(InventoriesStore, _BaseStore);\n\n  function InventoriesStore() {\n    var _this;\n\n    _classCallCheck(this, InventoriesStore);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InventoriesStore).call(this));\n    _this.products = [];\n    _this.analyzedProducts = [];\n    _this.hasProducts = false;\n    _this.totalPages = 1;\n    _this.totalItems = 0;\n    _this.currentPage = 1;\n    _this.productsTotal = 0;\n    _this.validRecords = 0;\n    _this.invalidRecords = 0;\n    _this.productImport = {};\n    _this.firstId = null;\n    _this.actions = {\n      PRODUCTS_RECEIVED: function PRODUCTS_RECEIVED(action) {\n        _this.setProducts(action.data);\n\n        _this.setPagination(action.data);\n\n        _this.setFisrtId(action.data);\n      },\n      PRODUCTS_ANALYZED: function PRODUCTS_ANALYZED(action) {\n        _this.setAnalyzedProducts(action.data);\n      },\n      PRODUCTS_SAVED: function PRODUCTS_SAVED(action) {\n        _this.setHasProducts(action.data);\n      },\n      FILE_UPLOADED: function FILE_UPLOADED(action) {\n        _this.setProductImport(action.data.product_import);\n      },\n      PRODUCT_CREATED: function PRODUCT_CREATED(action) {\n        _this.setHasProducts(action.data);\n      },\n      PRODUCT_UPDATED: function PRODUCT_UPDATED(action) {\n        _this.setNewProductList(action.data.product);\n      },\n      PRODUCT_DELETED: function PRODUCT_DELETED(action) {\n        _this.setDeletedProduct(action.idDeleted);\n      }\n    };\n    return _this;\n  }\n  /* If products is filled, the first element is going to be selected as\n  default to render the respective info of it */\n\n\n  _createClass(InventoriesStore, [{\n    key: \"setProducts\",\n    value: function setProducts(_ref) {\n      var products = _ref.products;\n      this.products = products;\n      this.hasProducts = products.length > 0;\n\n      if (this.hasProducts) {\n        products[0].isSelected = true;\n      }\n    }\n  }, {\n    key: \"setPagination\",\n    value: function setPagination(_ref2) {\n      var pagination = _ref2.pagination;\n      this.totalPages = pagination.total_pages;\n      this.totalItems = pagination.total_items;\n      this.currentPage = pagination.current_page;\n    }\n  }, {\n    key: \"getProducts\",\n    value: function getProducts() {\n      return this.products;\n    }\n  }, {\n    key: \"getHasProducts\",\n    value: function getHasProducts() {\n      return this.hasProducts;\n    }\n  }, {\n    key: \"setAnalyzedProducts\",\n    value: function setAnalyzedProducts(_ref3) {\n      var products = _ref3.products,\n          total = _ref3.total,\n          invalid = _ref3.invalid;\n      this.analyzedProducts = products;\n      this.validRecords = +total - +invalid;\n      this.invalidRecords = invalid;\n      this.productsTotal = total;\n    }\n  }, {\n    key: \"getAnalyzedProducts\",\n    value: function getAnalyzedProducts() {\n      return this.analyzedProducts;\n    }\n  }, {\n    key: \"getTotalPages\",\n    value: function getTotalPages() {\n      return this.totalPages;\n    }\n  }, {\n    key: \"getTotalItems\",\n    value: function getTotalItems() {\n      return this.totalItems;\n    }\n  }, {\n    key: \"getCurrentPage\",\n    value: function getCurrentPage() {\n      return this.currentPage;\n    }\n  }, {\n    key: \"getProductsTotal\",\n    value: function getProductsTotal() {\n      return this.productsTotal;\n    }\n  }, {\n    key: \"getValidRecords\",\n    value: function getValidRecords() {\n      return this.validRecords;\n    }\n  }, {\n    key: \"getInvalidRecords\",\n    value: function getInvalidRecords() {\n      return this.invalidRecords;\n    }\n  }, {\n    key: \"setProductImport\",\n    value: function setProductImport(_ref4) {\n      var attachedFile = _ref4.attached_file;\n      this.productImport = {\n        product_import: {\n          attached_file: attachedFile,\n          preview: false\n        }\n      };\n    }\n  }, {\n    key: \"getProductImport\",\n    value: function getProductImport() {\n      return this.productImport;\n    }\n  }, {\n    key: \"setHasProducts\",\n    value: function setHasProducts(_ref5) {\n      var products = _ref5.products,\n          product = _ref5.product;\n\n      if (products) {\n        this.hasProducts = products.length > 0;\n      }\n\n      if (product) {\n        this.hasProducts = product.active;\n      }\n    }\n  }, {\n    key: \"setFisrtId\",\n    value: function setFisrtId(_ref6) {\n      var products = _ref6.products;\n      this.firstId = products.length > 0 && products[0].id;\n    }\n  }, {\n    key: \"getFirstId\",\n    value: function getFirstId() {\n      return this.firstId;\n    }\n  }, {\n    key: \"setDeletedProduct\",\n    value: function setDeletedProduct(productIdDeleted) {\n      this.products.splice(this.products.findIndex(function (product) {\n        return product.id === productIdDeleted;\n      }), 1);\n      this.setFisrtId(this);\n      this.totalItems--;\n    }\n  }, {\n    key: \"setNewProductList\",\n    value: function setNewProductList(data) {\n      var products = this.products;\n      var newProduct = products.map(function (product) {\n        if (product.id === data.id) {\n          product = data;\n          product.isSelected = true;\n        }\n\n        return product;\n      });\n      this.products = newProduct;\n    }\n  }]);\n\n  return InventoriesStore;\n}(BaseStore);\n\nexport default InventoriesStore.getInstance();","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/stores/inventories.js"],"names":["BaseStore","InventoriesStore","products","analyzedProducts","hasProducts","totalPages","totalItems","currentPage","productsTotal","validRecords","invalidRecords","productImport","firstId","actions","PRODUCTS_RECEIVED","action","setProducts","data","setPagination","setFisrtId","PRODUCTS_ANALYZED","setAnalyzedProducts","PRODUCTS_SAVED","setHasProducts","FILE_UPLOADED","setProductImport","product_import","PRODUCT_CREATED","PRODUCT_UPDATED","setNewProductList","product","PRODUCT_DELETED","setDeletedProduct","idDeleted","length","isSelected","pagination","total_pages","total_items","current_page","total","invalid","attachedFile","attached_file","preview","active","id","productIdDeleted","splice","findIndex","newProduct","map","getInstance"],"mappings":"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","sourcesContent":["import BaseStore from './baseStore'\n\nclass InventoriesStore extends BaseStore {\n  constructor () {\n    super()\n    this.products = []\n    this.analyzedProducts = []\n    this.hasProducts = false\n    this.totalPages = 1\n    this.totalItems = 0\n    this.currentPage = 1\n    this.productsTotal = 0\n    this.validRecords = 0\n    this.invalidRecords = 0\n    this.productImport = {}\n    this.firstId = null\n\n    this.actions = {\n      PRODUCTS_RECEIVED: action => {\n        this.setProducts(action.data)\n        this.setPagination(action.data)\n        this.setFisrtId(action.data)\n      },\n      PRODUCTS_ANALYZED: action => {\n        this.setAnalyzedProducts(action.data)\n      },\n      PRODUCTS_SAVED: action => {\n        this.setHasProducts(action.data)\n      },\n      FILE_UPLOADED: action => {\n        this.setProductImport(action.data.product_import)\n      },\n      PRODUCT_CREATED: action => {\n        this.setHasProducts(action.data)\n      },\n      PRODUCT_UPDATED: action => {\n        this.setNewProductList(action.data.product)\n      },\n      PRODUCT_DELETED: action => {\n        this.setDeletedProduct(action.idDeleted)\n      }\n    }\n  }\n\n  /* If products is filled, the first element is going to be selected as\n  default to render the respective info of it */\n  setProducts ({ products }) {\n    this.products = products\n    this.hasProducts = products.length > 0\n    if (this.hasProducts) {\n      products[0].isSelected = true\n    }\n  }\n\n  setPagination ({ pagination }) {\n    this.totalPages = pagination.total_pages\n    this.totalItems = pagination.total_items\n    this.currentPage = pagination.current_page\n  }\n\n  getProducts () {\n    return this.products\n  }\n\n  getHasProducts () {\n    return this.hasProducts\n  }\n\n  setAnalyzedProducts ({ products, total, invalid }) {\n    this.analyzedProducts = products\n    this.validRecords = +total - +invalid\n    this.invalidRecords = invalid\n    this.productsTotal = total\n  }\n\n  getAnalyzedProducts () {\n    return this.analyzedProducts\n  }\n\n  getTotalPages () {\n    return this.totalPages\n  }\n\n  getTotalItems () {\n    return this.totalItems\n  }\n\n  getCurrentPage () {\n    return this.currentPage\n  }\n  getProductsTotal () {\n    return this.productsTotal\n  }\n  getValidRecords () {\n    return this.validRecords\n  }\n  getInvalidRecords () {\n    return this.invalidRecords\n  }\n\n  setProductImport ({ attached_file: attachedFile }) {\n    this.productImport = {\n      product_import: {\n        attached_file: attachedFile,\n        preview: false\n      }\n    }\n  }\n  getProductImport () {\n    return this.productImport\n  }\n  setHasProducts ({ products, product }) {\n    if (products) {\n      this.hasProducts = products.length > 0\n    }\n    if (product) {\n      this.hasProducts = product.active\n    }\n  }\n\n  setFisrtId ({ products }) {\n    this.firstId = products.length > 0 && products[0].id\n  }\n\n  getFirstId () {\n    return this.firstId\n  }\n\n  setDeletedProduct (productIdDeleted) {\n    this.products.splice(\n      this.products.findIndex(product => product.id === productIdDeleted),\n      1\n    )\n    this.setFisrtId(this)\n    this.totalItems--\n  }\n\n  setNewProductList (data) {\n    let products = this.products\n    const newProduct = products.map(product => {\n      if (product.id === data.id) {\n        product = data\n        product.isSelected = true\n      }\n      return product\n    })\n    this.products = newProduct\n  }\n}\n\nexport default InventoriesStore.getInstance()\n"]},"metadata":{},"sourceType":"module"}