{"ast":null,"code":"import _defineProperty from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/taxableEntities/notifications/index.js\";\n// Libraries\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router';\nimport update from 'immutability-helper';\nimport Button from 'shared/button';\n\nvar NotifyTaxableEntities =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NotifyTaxableEntities, _Component);\n\n  function NotifyTaxableEntities(props) {\n    var _this;\n\n    _classCallCheck(this, NotifyTaxableEntities);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NotifyTaxableEntities).call(this, props));\n    _this.data = {\n      entityId: _this.props.params.entityId,\n      notifications: [{\n        selected: false,\n        id: 0,\n        label: 'Nuevas Facturas'\n      }, {\n        selected: false,\n        id: 1,\n        label: 'Facturas Descargadas'\n      }]\n    };\n    _this.state = Object.assign({}, _this.data);\n    return _this;\n  }\n\n  _createClass(NotifyTaxableEntities, [{\n    key: \"renderNewButton\",\n    value: function renderNewButton(right) {\n      return React.createElement(\"div\", {\n        className: \"field is-grouped\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.sendData.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Guardar\")), React.createElement(\"span\", {\n        className: \"control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/admin/entidades_fiscales/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Cancelar\"))));\n    }\n  }, {\n    key: \"sendData\",\n    value: function sendData() {\n      console.table(this.state.notifications);\n    }\n  }, {\n    key: \"toggleNotification\",\n    value: function toggleNotification(catId) {\n      var notificationPosition = 0; // Get TRUE position of category, currently maps to 1:1, 2:2, 3:3, ..., 123:123 (zero index)\n\n      for (var i = 0; i < this.state.notifications.length; i++) {\n        if (catId === this.state.notifications[i].id) notificationPosition = i;\n      }\n\n      this.setState({\n        notifications: update(this.state.notifications, _defineProperty({}, notificationPosition, {\n          selected: {\n            $set: !this.state.notifications[notificationPosition].selected\n          }\n        }))\n      });\n    }\n  }, {\n    key: \"renderNotifications\",\n    value: function renderNotifications() {\n      var renderNotifications = React.createElement(\"article\", {\n        className: \"message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"message-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"No hay notificaciones.\"));\n\n      if (this.state.notifications.length > 0) {\n        renderNotifications = this.state.notifications.map(function (notification, index) {\n          return React.createElement(\"div\", {\n            key: notification.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"field\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            className: \"control\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            className: \"checkbox\",\n            htmlFor: notification.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            id: notification.id,\n            type: \"checkbox\",\n            onChange: this.toggleNotification.bind(this, notification.id),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }), notification.label))));\n        }.bind(this));\n      }\n\n      return renderNotifications;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"title is-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Notificaciones por correo electr\\xF3nico\"), this.renderNotifications(), this.renderNewButton());\n    }\n  }]);\n\n  return NotifyTaxableEntities;\n}(Component);\n\nNotifyTaxableEntities.propTypes = {\n  params: PropTypes.shape({\n    entityId: PropTypes.string\n  })\n};\nexport default NotifyTaxableEntities;","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/taxableEntities/notifications/index.js"],"names":["React","Component","PropTypes","Link","update","Button","NotifyTaxableEntities","props","data","entityId","params","notifications","selected","id","label","state","Object","assign","right","sendData","bind","console","table","catId","notificationPosition","i","length","setState","$set","renderNotifications","map","notification","index","toggleNotification","renderNewButton","propTypes","shape","string"],"mappings":"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","sourcesContent":["// Libraries\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router'\nimport update from 'immutability-helper'\n\nimport Button from 'shared/button'\n\nclass NotifyTaxableEntities extends Component {\n  constructor (props) {\n    super(props)\n    this.data = {\n      entityId: this.props.params.entityId,\n      notifications: [\n        {\n          selected: false,\n          id: 0,\n          label: 'Nuevas Facturas'\n        },\n        {\n          selected: false,\n          id: 1,\n          label: 'Facturas Descargadas'\n        }\n      ]\n    }\n    this.state = Object.assign({}, this.data)\n  }\n\n  renderNewButton (right) {\n    return (\n      <div className='field is-grouped'>\n        <span className='control'>\n          <Button onClick={this.sendData.bind(this)}>Guardar</Button>\n        </span>\n        <span className='control'>\n          <Link to='/admin/entidades_fiscales/'>\n            <Button>Cancelar</Button>\n          </Link>\n        </span>\n      </div>\n    )\n  }\n\n  sendData () {\n    console.table(this.state.notifications)\n  }\n\n  toggleNotification (catId) {\n    let notificationPosition = 0\n    // Get TRUE position of category, currently maps to 1:1, 2:2, 3:3, ..., 123:123 (zero index)\n    for (let i = 0; i < this.state.notifications.length; i++) {\n      if (catId === this.state.notifications[i].id) notificationPosition = i\n    }\n    this.setState({\n      notifications: update(this.state.notifications, {\n        [notificationPosition]: {\n          selected: {\n            $set: !this.state.notifications[notificationPosition].selected\n          }\n        }\n      })\n    })\n  }\n\n  renderNotifications () {\n    let renderNotifications = (\n      <article className='message'>\n        <div className='message-body'>No hay notificaciones.</div>\n      </article>\n    )\n    if (this.state.notifications.length > 0) {\n      renderNotifications = this.state.notifications.map(\n        function (notification, index) {\n          return (\n            <div key={notification.id}>\n              <div className='field'>\n                <p className='control'>\n                  <label className='checkbox' htmlFor={notification.id}>\n                    <input\n                      id={notification.id}\n                      type='checkbox'\n                      onChange={this.toggleNotification.bind(\n                        this,\n                        notification.id\n                      )}\n                    />\n                    {notification.label}\n                  </label>\n                </p>\n              </div>\n            </div>\n          )\n        }.bind(this)\n      )\n    }\n    return renderNotifications\n  }\n\n  render () {\n    return (\n      <div>\n        <h1 className='title is-4'>Notificaciones por correo electrónico</h1>\n        {this.renderNotifications()}\n        {this.renderNewButton()}\n      </div>\n    )\n  }\n}\n\nNotifyTaxableEntities.propTypes = {\n  params: PropTypes.shape({\n    entityId: PropTypes.string\n  })\n}\n\nexport default NotifyTaxableEntities\n"]},"metadata":{},"sourceType":"module"}