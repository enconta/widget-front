{"ast":null,"code":"import _objectWithoutProperties from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/shared/credentials/components/DropzoneFile.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Dropzone from 'react-dropzone';\nimport classNames from 'classnames';\n\nvar DropZoneFile = function DropZoneFile(_ref) {\n  var onDrop = _ref.onDrop,\n      file = _ref.file,\n      _ref$icon = _ref.icon,\n      icon = _ref$icon === void 0 ? 'mdi-file-check' : _ref$icon,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? '' : _ref$className,\n      message = _ref.message,\n      deleteButton = _ref.deleteButton,\n      addFileMessage = _ref.addFileMessage,\n      props = _objectWithoutProperties(_ref, [\"onDrop\", \"file\", \"icon\", \"className\", \"message\", \"deleteButton\", \"addFileMessage\"]);\n\n  var validateCerFiel = addFileMessage && props.accept === '.key' || props.accept === '.cer';\n  return React.createElement(Dropzone, Object.assign({\n    multiple: false,\n    onDrop: onDrop,\n    className: \"dropzone dropzone--small \".concat(className)\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), file ? React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"columns is-multiline is-fullwidth is-marginless dropzone-area--charging container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classNames('column is-12 flex-center dropzone-area--main__icon', {\n      'dropzone-area-column': validateCerFiel\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: classNames(\"mdi dropzone__icon dropzone__icon--space \".concat(icon), {\n      'dropzone__icon-green': validateCerFiel\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"caption dropzone__text break-line\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, file, validateCerFiel && ' adjuntado exitosamente'), message && React.createElement(\"span\", {\n    className: \"dropzone__message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, message))), deleteButton && React.createElement(\"div\", {\n    className: \"dropzone-area--overlay\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, deleteButton))) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: classNames('mdi mdi-upload dropzone__icon', {\n      'dropzone__icon--smaller': addFileMessage,\n      'dropzone__icon--hide': validateCerFiel\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), addFileMessage && React.createElement(\"span\", {\n    className: classNames('dropzone__add', {\n      'dropzone__add--darkmode': validateCerFiel\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, addFileMessage)));\n};\n\nDropZoneFile.propTypes = {\n  onDrop: PropTypes.func.isRequired,\n  file: PropTypes.string.isRequired\n};\nexport default DropZoneFile;","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/shared/credentials/components/DropzoneFile.js"],"names":["React","Fragment","PropTypes","Dropzone","classNames","DropZoneFile","onDrop","file","icon","className","message","deleteButton","addFileMessage","props","validateCerFiel","accept","propTypes","func","isRequired","string"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OASf;AAAA,MARJC,MAQI,QARJA,MAQI;AAAA,MAPJC,IAOI,QAPJA,IAOI;AAAA,uBANJC,IAMI;AAAA,MANJA,IAMI,0BANG,gBAMH;AAAA,4BALJC,SAKI;AAAA,MALJA,SAKI,+BALQ,EAKR;AAAA,MAJJC,OAII,QAJJA,OAII;AAAA,MAHJC,YAGI,QAHJA,YAGI;AAAA,MAFJC,cAEI,QAFJA,cAEI;AAAA,MADDC,KACC;;AACJ,MAAMC,eAAe,GAClBF,cAAc,IAAIC,KAAK,CAACE,MAAN,KAAiB,MAApC,IAA+CF,KAAK,CAACE,MAAN,KAAiB,MADlE;AAEA,SACE,oBAAC,QAAD;AACE,IAAA,QAAQ,EAAE,KADZ;AAEE,IAAA,MAAM,EAAET,MAFV;AAGE,IAAA,SAAS,qCAA8BG,SAA9B;AAHX,KAIMI,KAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMGN,IAAI,GACH,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,mFAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAEH,UAAU,CACnB,oDADmB,EAEnB;AACE,8BAAwBU;AAD1B,KAFmB,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE;AACE,IAAA,SAAS,EAAEV,UAAU,oDACyBI,IADzB,GAEnB;AACE,8BAAwBM;AAD1B,KAFmB,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAgBE;AAAG,IAAA,SAAS,EAAC,mCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,IADH,EAEGO,eAAe,IAAI,yBAFtB,CADF,EAKGJ,OAAO,IACN;AAAM,IAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCA,OAArC,CANJ,CAhBF,CADF,EA2BGC,YAAY,IACX;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCA,YAAzC,CA5BJ,CADF,CADG,GAmCH,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAEP,UAAU,CAAC,+BAAD,EAAkC;AACrD,iCAA2BQ,cAD0B;AAErD,8BAAwBE;AAF6B,KAAlC,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOGF,cAAc,IACb;AACE,IAAA,SAAS,EAAER,UAAU,CAAC,eAAD,EAAkB;AACrC,iCAA2BU;AADU,KAAlB,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGF,cALH,CARJ,CAzCJ,CADF;AA8DD,CA1ED;;AA4EAP,YAAY,CAACW,SAAb,GAAyB;AACvBV,EAAAA,MAAM,EAAEJ,SAAS,CAACe,IAAV,CAAeC,UADA;AAEvBX,EAAAA,IAAI,EAAEL,SAAS,CAACiB,MAAV,CAAiBD;AAFA,CAAzB;AAKA,eAAeb,YAAf","sourcesContent":["import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\n\nimport Dropzone from 'react-dropzone'\nimport classNames from 'classnames'\n\nconst DropZoneFile = ({\n  onDrop,\n  file,\n  icon = 'mdi-file-check',\n  className = '',\n  message,\n  deleteButton,\n  addFileMessage,\n  ...props\n}) => {\n  const validateCerFiel =\n    (addFileMessage && props.accept === '.key') || props.accept === '.cer'\n  return (\n    <Dropzone\n      multiple={false}\n      onDrop={onDrop}\n      className={`dropzone dropzone--small ${className}`}\n      {...props}\n    >\n      {file ? (\n        <Fragment>\n          <div className='columns is-multiline is-fullwidth is-marginless dropzone-area--charging container'>\n            <div\n              className={classNames(\n                'column is-12 flex-center dropzone-area--main__icon',\n                {\n                  'dropzone-area-column': validateCerFiel\n                }\n              )}\n            >\n              <i\n                className={classNames(\n                  `mdi dropzone__icon dropzone__icon--space ${icon}`,\n                  {\n                    'dropzone__icon-green': validateCerFiel\n                  }\n                )}\n              />\n              <p className='caption dropzone__text break-line'>\n                <span>\n                  {file}\n                  {validateCerFiel && ' adjuntado exitosamente'}\n                </span>\n                {message && (\n                  <span className='dropzone__message'>{message}</span>\n                )}\n              </p>\n            </div>\n            {deleteButton && (\n              <div className='dropzone-area--overlay'>{deleteButton}</div>\n            )}\n          </div>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <i\n            className={classNames('mdi mdi-upload dropzone__icon', {\n              'dropzone__icon--smaller': addFileMessage,\n              'dropzone__icon--hide': validateCerFiel\n            })}\n          />\n          {addFileMessage && (\n            <span\n              className={classNames('dropzone__add', {\n                'dropzone__add--darkmode': validateCerFiel\n              })}\n            >\n              {addFileMessage}\n            </span>\n          )}\n        </Fragment>\n      )}\n    </Dropzone>\n  )\n}\n\nDropZoneFile.propTypes = {\n  onDrop: PropTypes.func.isRequired,\n  file: PropTypes.string.isRequired\n}\n\nexport default DropZoneFile\n"]},"metadata":{},"sourceType":"module"}