{"ast":null,"code":"var _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/shared/filter/radioOptions.js\";\n// Libraries\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types'; // Components\n\nimport RadioButton from 'shared/radioButton';\n/**\n * Radio Options is a small pieze of the filters\n *\n * It will receive the title of all options and an array with the properties to build each Radio Button component\n * It's convenient to use it with maximum 3 options and one of them is the all option\n * I.E. Active, Inactive and All, statuses.\n * @param {*} props\n */\n\nvar RadioOptions = function RadioOptions(props) {\n  var mainLabel = props.mainLabel,\n      options = props.options;\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"filter__caption\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, mainLabel), buldRadios(options));\n};\n\nvar buldRadios = function buldRadios(options) {\n  return options.map(function (_ref, index) {\n    var value = _ref.value,\n        handleRadio = _ref.handleRadio,\n        checked = _ref.checked,\n        label = _ref.label;\n    return React.createElement(RadioButton, {\n      value: value,\n      handleRadio: handleRadio,\n      checked: checked,\n      label: label,\n      index: index,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    });\n  });\n};\n\nexport default RadioOptions;\nRadioOptions.propTypes = {\n  mainLabel: PropTypes.string.isRequired,\n  options: PropTypes.array.isRequired,\n  clear: PropTypes.func.isRequired\n};\nRadioOptions.defaultProps = {\n  mainLabel: 'Estatus',\n  options: [],\n  clear: function clear() {}\n};","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/shared/filter/radioOptions.js"],"names":["React","Fragment","PropTypes","RadioButton","RadioOptions","props","mainLabel","options","buldRadios","map","index","value","handleRadio","checked","label","propTypes","string","isRequired","array","clear","func","defaultProps"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AAEA;;;;;;;;;AAQA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AAAA,MACpBC,SADoB,GACGD,KADH,CACpBC,SADoB;AAAA,MACTC,OADS,GACGF,KADH,CACTE,OADS;AAE5B,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCD,SAAhC,CADF,EAEGE,UAAU,CAACD,OAAD,CAFb,CADF;AAMD,CARD;;AAUA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAD,OAAO,EAAI;AAC5B,SAAOA,OAAO,CAACE,GAAR,CAAY,gBAAyCC,KAAzC,EAAmD;AAAA,QAAhDC,KAAgD,QAAhDA,KAAgD;AAAA,QAAzCC,WAAyC,QAAzCA,WAAyC;AAAA,QAA5BC,OAA4B,QAA5BA,OAA4B;AAAA,QAAnBC,KAAmB,QAAnBA,KAAmB;AACpE,WACE,oBAAC,WAAD;AACE,MAAA,KAAK,EAAEH,KADT;AAEE,MAAA,WAAW,EAAEC,WAFf;AAGE,MAAA,OAAO,EAAEC,OAHX;AAIE,MAAA,KAAK,EAAEC,KAJT;AAKE,MAAA,KAAK,EAAEJ,KALT;AAME,MAAA,GAAG,EAAEA,KANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAUD,GAXM,CAAP;AAYD,CAbD;;AAeA,eAAeN,YAAf;AAEAA,YAAY,CAACW,SAAb,GAAyB;AACvBT,EAAAA,SAAS,EAAEJ,SAAS,CAACc,MAAV,CAAiBC,UADL;AAEvBV,EAAAA,OAAO,EAAEL,SAAS,CAACgB,KAAV,CAAgBD,UAFF;AAGvBE,EAAAA,KAAK,EAAEjB,SAAS,CAACkB,IAAV,CAAeH;AAHC,CAAzB;AAMAb,YAAY,CAACiB,YAAb,GAA4B;AAC1Bf,EAAAA,SAAS,EAAE,SADe;AAE1BC,EAAAA,OAAO,EAAE,EAFiB;AAG1BY,EAAAA,KAAK,EAAE,iBAAM,CAAE;AAHW,CAA5B","sourcesContent":["// Libraries\nimport React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\n\n// Components\nimport RadioButton from 'shared/radioButton'\n\n/**\n * Radio Options is a small pieze of the filters\n *\n * It will receive the title of all options and an array with the properties to build each Radio Button component\n * It's convenient to use it with maximum 3 options and one of them is the all option\n * I.E. Active, Inactive and All, statuses.\n * @param {*} props\n */\nconst RadioOptions = props => {\n  const { mainLabel, options } = props\n  return (\n    <Fragment>\n      <p className='filter__caption'>{mainLabel}</p>\n      {buldRadios(options)}\n    </Fragment>\n  )\n}\n\nconst buldRadios = options => {\n  return options.map(({ value, handleRadio, checked, label }, index) => {\n    return (\n      <RadioButton\n        value={value}\n        handleRadio={handleRadio}\n        checked={checked}\n        label={label}\n        index={index}\n        key={index}\n      />\n    )\n  })\n}\n\nexport default RadioOptions\n\nRadioOptions.propTypes = {\n  mainLabel: PropTypes.string.isRequired,\n  options: PropTypes.array.isRequired,\n  clear: PropTypes.func.isRequired\n}\n\nRadioOptions.defaultProps = {\n  mainLabel: 'Estatus',\n  options: [],\n  clear: () => {}\n}\n"]},"metadata":{},"sourceType":"module"}