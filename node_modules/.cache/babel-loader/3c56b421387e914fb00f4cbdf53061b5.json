{"ast":null,"code":"var _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/viewInvoice/utilsRestrictions/index.js\";\nimport React from 'react';\nimport pluralize from 'pluralize';\nimport Modal from 'shared/modal';\nimport Plans from 'shared/plans';\nimport Button from 'shared/button';\nvar windowGlobal = typeof window !== 'undefined' && window;\npluralize.addPluralRule('queda', 'quedan');\nexport var toggleBanner = function toggleBanner(component, showBanner, sawBanner) {\n  component.setState(function (prevState) {\n    return {\n      showBanner: !prevState.showBanner\n    };\n  });\n  windowGlobal.localStorage.setItem(sawBanner, 'seen');\n};\nexport var textIncomes = function textIncomes(remainingDownloads) {\n  return \"Te \".concat(pluralize('queda', remainingDownloads), \" \").concat(remainingDownloads, \" reportes para exportar .\");\n};\nexport var toggleBannerModal = function toggleBannerModal(component, showBannerModal, close) {\n  component.setState(function (prevState) {\n    return {\n      showBannerModal: !prevState.showBannerModal\n    };\n  });\n\n  if (close) {\n    toggleUpdatePlanModal(component);\n  }\n};\nexport var modalPlans = function modalPlans(component) {\n  var showBannerModal = component.state.showBannerModal;\n  return React.createElement(Modal, {\n    isActive: showBannerModal,\n    toggleModal: function toggleModal() {\n      return toggleBannerModal(component);\n    },\n    noFooter: true,\n    isAlert: true,\n    isFullScreen: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Plans, {\n    controlPlansModal: function controlPlansModal() {\n      return toggleBannerModal(component, '', true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }));\n};\nexport var toggleUpdatePlanModal = function toggleUpdatePlanModal(component, updatePlanModal, type) {\n  component.setState(function (prevState) {\n    return {\n      updatePlanModal: !prevState.updatePlanModal,\n      type: type\n    };\n  });\n};\nexport var modalUpdatePlan = function modalUpdatePlan(component) {\n  var _component$state = component.state,\n      updatePlanModal = _component$state.updatePlanModal,\n      type = _component$state.type;\n  return React.createElement(Modal, {\n    isActive: updatePlanModal,\n    toggleModal: function toggleModal() {\n      return toggleUpdatePlanModal(component);\n    },\n    noFooter: true,\n    title: \"Actualizar ahora\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Has alcanzado el l\\xEDmite de 5 \", type, \" gratis\"), React.createElement(\"div\", {\n    className: \"plans__modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Button, {\n    buttonStyle: \"primary\",\n    type: \"submit\",\n    onClick: function onClick() {\n      return toggleBannerModal(component, '', true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Mejora tu plan\")));\n};","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/viewInvoice/utilsRestrictions/index.js"],"names":["React","pluralize","Modal","Plans","Button","windowGlobal","window","addPluralRule","toggleBanner","component","showBanner","sawBanner","setState","prevState","localStorage","setItem","textIncomes","remainingDownloads","toggleBannerModal","showBannerModal","close","toggleUpdatePlanModal","modalPlans","state","updatePlanModal","type","modalUpdatePlan"],"mappings":"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","sourcesContent":["import React from 'react'\nimport pluralize from 'pluralize'\nimport Modal from 'shared/modal'\nimport Plans from 'shared/plans'\nimport Button from 'shared/button'\n\nconst windowGlobal = typeof window !== 'undefined' && window\n\npluralize.addPluralRule('queda', 'quedan')\n\nexport const toggleBanner = (component, showBanner, sawBanner) => {\n  component.setState(prevState => ({ showBanner: !prevState.showBanner }))\n  windowGlobal.localStorage.setItem(sawBanner, 'seen')\n}\n\nexport const textIncomes = remainingDownloads => {\n  return `Te ${pluralize(\n    'queda',\n    remainingDownloads\n  )} ${remainingDownloads} reportes para exportar .`\n}\n\nexport const toggleBannerModal = (component, showBannerModal, close) => {\n  component.setState(prevState => ({\n    showBannerModal: !prevState.showBannerModal\n  }))\n\n  if (close) {\n    toggleUpdatePlanModal(component)\n  }\n}\n\nexport const modalPlans = component => {\n  const { showBannerModal } = component.state\n  return (\n    <Modal\n      isActive={showBannerModal}\n      toggleModal={() => toggleBannerModal(component)}\n      noFooter\n      isAlert\n      isFullScreen\n    >\n      <Plans controlPlansModal={() => toggleBannerModal(component, '', true)} />\n    </Modal>\n  )\n}\n\nexport const toggleUpdatePlanModal = (component, updatePlanModal, type) => {\n  component.setState(prevState => ({\n    updatePlanModal: !prevState.updatePlanModal,\n    type: type\n  }))\n}\n\nexport const modalUpdatePlan = component => {\n  const { updatePlanModal, type } = component.state\n  return (\n    <Modal\n      isActive={updatePlanModal}\n      toggleModal={() => toggleUpdatePlanModal(component)}\n      noFooter\n      title='Actualizar ahora'\n    >\n      <p>Has alcanzado el l√≠mite de 5 {type} gratis</p>\n      <div className='plans__modal'>\n        <Button\n          buttonStyle='primary'\n          type='submit'\n          onClick={() => toggleBannerModal(component, '', true)}\n        >\n          Mejora tu plan\n        </Button>\n      </div>\n    </Modal>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}