{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { Serializable } from \"./serializable\";\nimport { getStacktrace } from \"./utils/stacktrace\";\nimport { toHashMapString } from \"./utils/hashmap\";\n\nvar Span = function (_super) {\n  __extends(Span, _super);\n\n  function Span(span) {\n    return _super.call(this, __assign({\n      timestamp: Math.round(new Date().getTime() / 1000),\n      namespace: \"frontend\",\n      error: {\n        name: \"NullError\",\n        message: \"No error has been set\",\n        backtrace: []\n      }\n    }, span)) || this;\n  }\n\n  Span.prototype.setAction = function (name) {\n    if (!name || typeof name !== \"string\") {\n      return this;\n    }\n\n    this._data.action = name;\n    return this;\n  };\n\n  Span.prototype.setNamespace = function (name) {\n    if (!name || typeof name !== \"string\") {\n      return this;\n    }\n\n    this._data.namespace = name;\n    return this;\n  };\n\n  Span.prototype.setError = function (error) {\n    if (!error) return this;\n    this._data.error = {\n      name: error.name || \"Error\",\n      message: error.message || \"No message given\",\n      backtrace: getStacktrace(error)\n    };\n    return this;\n  };\n\n  Span.prototype.setTags = function (tags) {\n    this._data.tags = __assign(__assign({}, this._data.tags), toHashMapString(tags));\n    return this;\n  };\n\n  Span.prototype.setParams = function (params) {\n    this._data.params = __assign(__assign({}, this._data.params), params);\n    return this;\n  };\n\n  Span.prototype.setBreadcrumbs = function (breadcrumbs) {\n    this._data.breadcrumbs = breadcrumbs;\n    return this;\n  };\n\n  return Span;\n}(Serializable);\n\nexport { Span };","map":null,"metadata":{},"sourceType":"module"}