{"ast":null,"code":"import _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/shared/tableFilter/index.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { browserHistory } from 'react-router';\nimport Button from '../button';\nimport { stringifyQuery } from 'utils';\nimport _pickBy from 'lodash/pickBy';\n\nvar TableFilter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TableFilter, _Component);\n\n  function TableFilter() {\n    var _this;\n\n    _classCallCheck(this, TableFilter);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TableFilter).call(this));\n    _this.data = {\n      open: false\n    };\n    _this.state = Object.assign({}, _this.data);\n    return _this;\n  }\n\n  _createClass(TableFilter, [{\n    key: \"toggleFilters\",\n    value: function toggleFilters() {\n      var onOpenFilters = this.props.onOpenFilters;\n      this.setState(function (prevState) {\n        return {\n          open: !prevState.open\n        };\n      }); // curremt state closed, filters where open, notify the handler in case it exists\n\n      if (!this.state.open && onOpenFilters) onOpenFilters();\n    } // Reset all filters and data to default\n\n  }, {\n    key: \"onClearFilters\",\n    value: function onClearFilters() {\n      this.props.onClearFilters();\n      browserHistory.push(this.props.baseUrl);\n    }\n  }, {\n    key: \"onFilter\",\n    value: function onFilter() {\n      var _this$props = this.props,\n          baseUrl = _this$props.baseUrl,\n          filters = _this$props.filters,\n          prepareFilters = _this$props.prepareFilters; // Pass the filters thru the function if they are needed in a special format, if no function is provided it returns the filters as they are\n\n      var preparedFilters = _pickBy(prepareFilters(filters), function (filter) {\n        return filter.length > 0 && !/^all/.test(filter);\n      }); // Converts the filters object into a query string including the '?' symbol, if empty object is provided it returns an empty string\n\n\n      var query = stringifyQuery(preparedFilters);\n      browserHistory.push(baseUrl + query);\n    }\n  }, {\n    key: \"renderButtons\",\n    value: function renderButtons() {\n      return React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          height: '100%',\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.onFilter.bind(this),\n        buttonStyle: \"filter\",\n        icon: \"filter\",\n        className: \"is-marginless\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Filtrar\"), React.createElement(\"div\", {\n        style: {\n          marginBottom: '11px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.onClearFilters.bind(this),\n        icon: \"eraser\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Limpiar\"));\n    } // Renders main component\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var open = this.state.open;\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          baseUrl = _this$props2.baseUrl;\n      var filters = children.length > 1 ? children.filter(Boolean).map(function (child, index) {\n        return React.createElement(\"div\", {\n          className: \"column\",\n          key: \"filter\".concat(baseUrl, \"-\").concat(index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, Object.assign({}, child, {\n          props: Object.assign({}, child.props, child.props.onEnter ? {\n            onEnter: _this2.onFilter.bind(_this2)\n          } : {})\n        }));\n      }) : React.createElement(\"div\", {\n        className: \"column is-three-quarters\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, Object.assign({}, children, {\n        props: Object.assign({}, children.props, children.props.onEnter ? {\n          onEnter: this.onFilter.bind(this)\n        } : {})\n      }));\n      return React.createElement(\"div\", {\n        style: {\n          borderBottom: \"2px solid \".concat(open ? '#111820' : '#C7C9CA'),\n          paddingBottom: \"\".concat(open ? '2.5' : '0.5', \"rem\"),\n          marginBottom: '3rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          color: \"\".concat(open ? '#111820' : '#6F7378'),\n          cursor: 'pointer',\n          fontSize: '14px',\n          fontWeight: 500,\n          lineHeight: '16px',\n          userSelect: 'none'\n        },\n        onClick: this.toggleFilters.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"FILTRAR TABLA\", React.createElement(\"i\", {\n        className: classNames('mdi', {\n          'mdi-menu-down': !open,\n          'mdi-menu-up': open\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        style: {\n          paddingTop: '2.5rem'\n        },\n        className: classNames({\n          'is-hidden': !open\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, filters, React.createElement(\"div\", {\n        className: \"arrow_filters\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, this.renderButtons()))));\n    }\n  }]);\n\n  return TableFilter;\n}(Component);\n\nexport default TableFilter;\nTableFilter.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.array]),\n  onClearFilters: PropTypes.func,\n  baseUrl: PropTypes.string.isRequired,\n  filters: PropTypes.object.isRequired,\n  // prepareFilters must be a function that receive the filters as argument and returns the parsed filters object\n  prepareFilters: PropTypes.func,\n  onOpenFilters: PropTypes.func // children must be an array of React components,\n  // this component will wrap each of em into a div.column\n  // and will inject the onEnter prop\n\n};\nTableFilter.defaultProps = {\n  prepareFilters: function prepareFilters(filters) {\n    return filters;\n  }\n};","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/shared/tableFilter/index.js"],"names":["React","Component","PropTypes","classNames","browserHistory","Button","stringifyQuery","_pickBy","TableFilter","data","open","state","Object","assign","onOpenFilters","props","setState","prevState","onClearFilters","push","baseUrl","filters","prepareFilters","preparedFilters","filter","length","test","query","display","flexDirection","alignItems","height","justifyContent","onFilter","bind","marginBottom","children","Boolean","map","child","index","onEnter","borderBottom","paddingBottom","color","cursor","fontSize","fontWeight","lineHeight","userSelect","toggleFilters","paddingTop","renderButtons","propTypes","oneOfType","element","array","func","string","isRequired","object","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport { browserHistory } from 'react-router'\n\nimport Button from '../button'\nimport { stringifyQuery } from 'utils'\nimport _pickBy from 'lodash/pickBy'\n\nclass TableFilter extends Component {\n  constructor () {\n    super()\n    this.data = {\n      open: false\n    }\n    this.state = Object.assign({}, this.data)\n  }\n\n  toggleFilters () {\n    const { onOpenFilters } = this.props\n    this.setState(prevState => ({\n      open: !prevState.open\n    }))\n    // curremt state closed, filters where open, notify the handler in case it exists\n    if (!this.state.open && onOpenFilters) onOpenFilters()\n  }\n\n  // Reset all filters and data to default\n  onClearFilters () {\n    this.props.onClearFilters()\n    browserHistory.push(this.props.baseUrl)\n  }\n\n  onFilter () {\n    const { baseUrl, filters, prepareFilters } = this.props\n    // Pass the filters thru the function if they are needed in a special format, if no function is provided it returns the filters as they are\n    const preparedFilters = _pickBy(\n      prepareFilters(filters),\n      filter => filter.length > 0 && !/^all/.test(filter)\n    )\n\n    // Converts the filters object into a query string including the '?' symbol, if empty object is provided it returns an empty string\n    const query = stringifyQuery(preparedFilters)\n    browserHistory.push(baseUrl + query)\n  }\n\n  renderButtons () {\n    return (\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          height: '100%',\n          justifyContent: 'center'\n        }}\n      >\n        <Button\n          onClick={this.onFilter.bind(this)}\n          buttonStyle='filter'\n          icon='filter'\n          className='is-marginless'\n        >\n          Filtrar\n        </Button>\n        <div style={{ marginBottom: '11px' }} />\n        <Button onClick={this.onClearFilters.bind(this)} icon='eraser'>\n          Limpiar\n        </Button>\n      </div>\n    )\n  }\n\n  // Renders main component\n  render () {\n    const { open } = this.state\n    const { children, baseUrl } = this.props\n    const filters =\n      children.length > 1 ? (\n        children.filter(Boolean).map((child, index) => (\n          <div className='column' key={`filter${baseUrl}-${index}`}>\n            {Object.assign({}, child, {\n              props: Object.assign(\n                {},\n                child.props,\n                child.props.onEnter ? { onEnter: this.onFilter.bind(this) } : {}\n              )\n            })}\n          </div>\n        ))\n      ) : (\n        <div className='column is-three-quarters'>\n          {Object.assign({}, children, {\n            props: Object.assign(\n              {},\n              children.props,\n              children.props.onEnter\n                ? { onEnter: this.onFilter.bind(this) }\n                : {}\n            )\n          })}\n        </div>\n      )\n    return (\n      <div\n        style={{\n          borderBottom: `2px solid ${open ? '#111820' : '#C7C9CA'}`,\n          paddingBottom: `${open ? '2.5' : '0.5'}rem`,\n          marginBottom: '3rem'\n        }}\n      >\n        <div\n          style={{\n            color: `${open ? '#111820' : '#6F7378'}`,\n            cursor: 'pointer',\n            fontSize: '14px',\n            fontWeight: 500,\n            lineHeight: '16px',\n            userSelect: 'none'\n          }}\n          onClick={this.toggleFilters.bind(this)}\n        >\n          FILTRAR TABLA\n          <i\n            className={classNames('mdi', {\n              'mdi-menu-down': !open,\n              'mdi-menu-up': open\n            })}\n          />\n        </div>\n        <div\n          style={{ paddingTop: '2.5rem' }}\n          className={classNames({ 'is-hidden': !open })}\n        >\n          <div className='columns'>\n            {filters}\n            <div className='arrow_filters' />\n            <div className='column'>{this.renderButtons()}</div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default TableFilter\n\nTableFilter.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.array]),\n  onClearFilters: PropTypes.func,\n  baseUrl: PropTypes.string.isRequired,\n  filters: PropTypes.object.isRequired,\n  // prepareFilters must be a function that receive the filters as argument and returns the parsed filters object\n  prepareFilters: PropTypes.func,\n  onOpenFilters: PropTypes.func\n  // children must be an array of React components,\n  // this component will wrap each of em into a div.column\n  // and will inject the onEnter prop\n}\n\nTableFilter.defaultProps = {\n  prepareFilters: filters => filters\n}\n"]},"metadata":{},"sourceType":"module"}