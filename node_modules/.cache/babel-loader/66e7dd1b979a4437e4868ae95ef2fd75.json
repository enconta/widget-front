{"ast":null,"code":"import _defineProperty from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/editClient/synchronization/index.js\";\nimport React, { Component, Fragment } from 'react';\nimport { withRouter } from 'react-router';\nimport AppSignal from 'appsignal';\nimport Button from 'shared/button';\nimport TextField from 'shared/textField';\nimport SelectField from 'shared/selectField';\nimport { handleBack, validateAll, replaceUnderScore, handleURL, handleModals, encryptData } from 'utils';\nimport loading from 'shared/animations/1672-spinner.json';\nimport failed from 'shared/animations/alert.json';\nimport WaitAdvertisment from 'shared/waitAdvertisment';\nimport { addBank, getLogo, checkFeatureFlag, filterCatalog, getStatusStepper, renderExplainCredentialsModal, renderKeysModal, tryAgain as _tryAgain, renderTokenExplain } from './utils';\nimport StepperSmartSync from 'shared/stepperSmartSync';\nimport BanksSynchronizationActions from 'actions/smartsync';\nimport NotificationsActions from 'actions/notifications';\nimport BanksSynchronizationStores from 'stores/smartsync';\nimport PaymentAccountsStore from 'stores/paymentAccounts';\nvar interval = 1000;\nvar requiredFields = new Set();\n\nfunction getCurrentState() {\n  return {\n    bank: BanksSynchronizationStores.getCurrent(),\n    paymentAccounts: PaymentAccountsStore.getPaymentAccounts(),\n    activeBankList: PaymentAccountsStore.getActiveBankList(),\n    widgetToken: BanksSynchronizationStores.getWidgetToken()\n  };\n}\n\nexport var NewBank =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewBank, _Component);\n\n  function NewBank() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NewBank);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NewBank)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.defaultState = {\n      requestInProgress: false,\n      failedToRegister: false,\n      isModalAccountExplainOpen: false,\n      isModalKeysOpen: false,\n      error: '',\n      bank: {\n        username: '',\n        institution: '',\n        password: '',\n        token: ''\n      }\n    };\n    _this.state = _objectSpread({}, _this.defaultState, getCurrentState());\n    _this.timer = null;\n\n    _this._onChange = function () {\n      _this.setState(getCurrentState());\n    };\n\n    _this.onEventCallbackFunction = function (data) {// Do something with the event data\n    };\n\n    _this.onExitCallbackFunction = function (data) {// Do something with the exit data\n    };\n\n    _this.successCallbackFunction = function (link, institution) {// Do something with the link_id or institution name\n    };\n\n    _this.openBelvoWidget = function () {\n      var widgetToken = _this.state.widgetToken;\n      belvoSDK // eslint-disable-line\n      .createWidget(widgetToken, {\n        locale: 'es',\n        company_name: 'Enconta',\n        // institution: 'bancomer_mx_retail', // to start the widget directly on a specific institution credentials page\n        // institution_types: ['fiscal', 'retail', 'business', 'gig'], // to select the type of institution to show in the widget\n        access_mode: 'recurrent',\n        // to specify the type of link to be created from the widget\n        country_codes: ['MX'],\n        callback: function callback(link, institution) {\n          return _this.successCallbackFunction(link, institution);\n        },\n        onExit: function onExit(data) {\n          return _this.onExitCallbackFunction(data);\n        },\n        onEvent: function onEvent(data) {\n          return _this.onEventCallbackFunction(data);\n        }\n      }).build();\n    };\n\n    _this.saveNewInstitution = function () {\n      var bank = _this.state.bank;\n\n      if (validateAll(requiredFields, _assertThisInitialized(_assertThisInitialized(_this)))) {\n        _this.setState({\n          requestInProgress: true\n        });\n\n        BanksSynchronizationActions.addBank(addBank(bank));\n\n        _this.askSynchronizationStatus();\n      }\n    };\n\n    _this.askSynchronizationStatus = function () {\n      var institution = _this.state.bank.institution;\n      var encryptBank = encodeURIComponent(encryptData(institution));\n      _this.timer = setTimeout(\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var status;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return BanksSynchronizationActions.askStatus(encryptBank);\n\n              case 2:\n                status = _context.sent;\n                _context.t0 = status;\n                _context.next = _context.t0 === 'working' ? 6 : _context.t0 === 'failed' ? 8 : _context.t0 === 'finished' ? 10 : 14;\n                break;\n\n              case 6:\n                _this.askSynchronizationStatus();\n\n                return _context.abrupt(\"break\", 14);\n\n              case 8:\n                _this.setState({\n                  requestInProgress: false,\n                  failedToRegister: true\n                });\n\n                return _context.abrupt(\"break\", 14);\n\n              case 10:\n                _this.setState({\n                  requestInProgress: false\n                });\n\n                NotificationsActions.clearAll();\n                BanksSynchronizationActions.getReponseRegister(institution).then(function () {\n                  NotificationsActions.success('El registro de la cuenta fue exitoso');\n                  handleURL(\"/seleccionar/banco/\".concat(institution));\n                }).catch(function (error) {\n                  _this.setState({\n                    error: error,\n                    failedToRegister: true,\n                    requestInProgress: false\n                  });\n\n                  AppSignal.addBreadcrumb({\n                    category: 'Smart Sync',\n                    action: 'Error: Crear registro.',\n                    metadata: {\n                      institution: institution,\n                      url: \"/nuevo/banco\",\n                      error: error\n                    }\n                  });\n                  AppSignal.sendError(new Error(error));\n                });\n                return _context.abrupt(\"break\", 14);\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      })), interval);\n    };\n\n    _this.onChange = function (field) {\n      return function (event) {\n        var value = event.target.value;\n\n        _this.setState(function (state) {\n          return _objectSpread({}, state, {\n            bank: _objectSpread({}, state.bank, _defineProperty({}, field, value))\n          });\n        });\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(NewBank, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // this.getToken()\n      BanksSynchronizationActions.getWidgetToken();\n      BanksSynchronizationStores.addChangeListener(this._onChange);\n      PaymentAccountsStore.addChangeListener(this._onChange);\n      BanksSynchronizationActions.getBankList();\n      checkFeatureFlag();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearTimeout(this.timer);\n      BanksSynchronizationStores.removeChangeListener(this._onChange);\n      PaymentAccountsStore.removeChangeListener(this._onChange);\n      BanksSynchronizationActions.clearBank();\n      requiredFields.clear();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          bank = _this$state.bank,\n          requestInProgress = _this$state.requestInProgress,\n          failedToRegister = _this$state.failedToRegister,\n          error = _this$state.error;\n      var institution = bank.institution;\n      var textInProgress = \"Por favor espera, estamos conectando con \".concat(replaceUnderScore(institution), \"...\");\n      var textFailed = \"Error: \".concat(error);\n      var status = getStatusStepper(this);\n      var bancomer = institution === 'bancomer';\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(Button, {\n        buttonStyle: \"link\",\n        icon: \"chevron-double-left\",\n        onClick: handleBack,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"Volver\"), React.createElement(\"p\", {\n        className: \"subheader-green margin-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"Paso \", institution ? 2 : 1, \" de 3\", ' ', failedToRegister && institution && '/ error de sincronización'), React.createElement(StepperSmartSync, {\n        status: status,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"synchronization\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, !requestInProgress && !failedToRegister && React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"synchronization__text--bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"Ingresa tus datos\"), React.createElement(\"div\", {\n        className: \"synchronization--select-bank synchronization--margin-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(SelectField, {\n        placeholder: \"Selecciona tu banco\",\n        options: filterCatalog(this),\n        value: bank.institution,\n        onChange: this.onChange('institution'),\n        optionsConfig: {\n          id: 'id',\n          label: 'label'\n        },\n        testId: \"selecciona-tu-banco\",\n        ref: function ref(r) {\n          return requiredFields.add(r);\n        },\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }), React.createElement(\"img\", Object.assign({\n        className: \" synchronization__logo\"\n      }, getLogo(institution), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"synchronization--credentials-user synchronization--margin-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"Usuario\",\n        value: bank.username,\n        onChange: this.onChange('username'),\n        ref: function ref(r) {\n          return requiredFields.add(r);\n        },\n        type: \"password\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"synchronization--margin-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"Contrase\\xF1a\",\n        value: bank.password,\n        onChange: this.onChange('password'),\n        ref: function ref(r) {\n          return requiredFields.add(r);\n        },\n        type: \"password\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      })), bancomer && React.createElement(\"div\", {\n        className: \"synchronization--margin-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"Token\",\n        value: bank.token,\n        onChange: this.onChange('token'),\n        ref: function ref(r) {\n          return requiredFields.add(r);\n        },\n        type: \"password\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        buttonStyle: \"primary\",\n        type: \"submit\",\n        loading: requestInProgress,\n        disabled: requestInProgress,\n        onClick: this.saveNewInstitution,\n        className: \"synchronization--margin-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, \"Siguiente\"), React.createElement(\"div\", {\n        className: \"synchronization__link-open-modal synchronization--margin-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"synchronization__link-open-modal--text\",\n        onClick: function onClick() {\n          return handleModals('isModalAccountExplainOpen', _this2);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, \"\\xBFCu\\xE1l es mi usuario y contrase\\xF1a?\"), React.createElement(\"p\", {\n        className: \"synchronization__link-open-modal--text\",\n        onClick: function onClick() {\n          return handleModals('isModalKeysOpen', _this2);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, \"\\xBFPor qu\\xE9 necesito ingresar mis claves de acceso?\"), bancomer && React.createElement(\"p\", {\n        className: \"synchronization__link-open-modal--text\",\n        onClick: function onClick() {\n          return handleModals('isModalTokenOpen', _this2);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, \"\\xBFPor qu\\xE9 necesitan mi token?\"))), requestInProgress && institution && React.createElement(\"div\", {\n        className: \"synchronization--margin-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, React.createElement(WaitAdvertisment, {\n        text: textInProgress,\n        animationData: loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      })), failedToRegister && institution && React.createElement(\"div\", {\n        className: \"synchronization--margin-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, React.createElement(WaitAdvertisment, {\n        animationData: failed,\n        text: textFailed,\n        button: true,\n        tryAgain: function tryAgain() {\n          return _tryAgain(_this2);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }))), renderExplainCredentialsModal(institution, this), renderKeysModal(this), renderTokenExplain(this), bancomer && this.openBelvoWidget());\n    }\n  }]);\n\n  return NewBank;\n}(Component);\nexport default withRouter(NewBank);","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/editClient/synchronization/index.js"],"names":["React","Component","Fragment","withRouter","AppSignal","Button","TextField","SelectField","handleBack","validateAll","replaceUnderScore","handleURL","handleModals","encryptData","loading","failed","WaitAdvertisment","addBank","getLogo","checkFeatureFlag","filterCatalog","getStatusStepper","renderExplainCredentialsModal","renderKeysModal","tryAgain","renderTokenExplain","StepperSmartSync","BanksSynchronizationActions","NotificationsActions","BanksSynchronizationStores","PaymentAccountsStore","interval","requiredFields","Set","getCurrentState","bank","getCurrent","paymentAccounts","getPaymentAccounts","activeBankList","getActiveBankList","widgetToken","getWidgetToken","NewBank","defaultState","requestInProgress","failedToRegister","isModalAccountExplainOpen","isModalKeysOpen","error","username","institution","password","token","state","timer","_onChange","setState","onEventCallbackFunction","data","onExitCallbackFunction","successCallbackFunction","link","openBelvoWidget","belvoSDK","createWidget","locale","company_name","access_mode","country_codes","callback","onExit","onEvent","build","saveNewInstitution","askSynchronizationStatus","encryptBank","encodeURIComponent","setTimeout","askStatus","status","clearAll","getReponseRegister","then","success","catch","addBreadcrumb","category","action","metadata","url","sendError","Error","onChange","field","event","value","target","addChangeListener","getBankList","clearTimeout","removeChangeListener","clearBank","clear","textInProgress","textFailed","bancomer","id","label","r","add"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { withRouter } from 'react-router'\nimport AppSignal from 'appsignal'\n\nimport Button from 'shared/button'\nimport TextField from 'shared/textField'\nimport SelectField from 'shared/selectField'\nimport {\n  handleBack,\n  validateAll,\n  replaceUnderScore,\n  handleURL,\n  handleModals,\n  encryptData\n} from 'utils'\nimport loading from 'shared/animations/1672-spinner.json'\nimport failed from 'shared/animations/alert.json'\nimport WaitAdvertisment from 'shared/waitAdvertisment'\nimport {\n  addBank,\n  getLogo,\n  checkFeatureFlag,\n  filterCatalog,\n  getStatusStepper,\n  renderExplainCredentialsModal,\n  renderKeysModal,\n  tryAgain,\n  renderTokenExplain\n} from './utils'\nimport StepperSmartSync from 'shared/stepperSmartSync'\n\nimport BanksSynchronizationActions from 'actions/smartsync'\nimport NotificationsActions from 'actions/notifications'\n\nimport BanksSynchronizationStores from 'stores/smartsync'\nimport PaymentAccountsStore from 'stores/paymentAccounts'\nconst interval = 1000\nconst requiredFields = new Set()\n\nfunction getCurrentState () {\n  return {\n    bank: BanksSynchronizationStores.getCurrent(),\n    paymentAccounts: PaymentAccountsStore.getPaymentAccounts(),\n    activeBankList: PaymentAccountsStore.getActiveBankList(),\n    widgetToken: BanksSynchronizationStores.getWidgetToken()\n  }\n}\n\nexport class NewBank extends Component {\n  defaultState = {\n    requestInProgress: false,\n    failedToRegister: false,\n    isModalAccountExplainOpen: false,\n    isModalKeysOpen: false,\n    error: '',\n    bank: {\n      username: '',\n      institution: '',\n      password: '',\n      token: ''\n    }\n  }\n\n  state = { ...this.defaultState, ...getCurrentState() }\n  timer = null\n\n  componentDidMount () {\n    // this.getToken()\n    BanksSynchronizationActions.getWidgetToken()\n    BanksSynchronizationStores.addChangeListener(this._onChange)\n    PaymentAccountsStore.addChangeListener(this._onChange)\n    BanksSynchronizationActions.getBankList()\n    checkFeatureFlag()\n  }\n\n  componentWillUnmount () {\n    clearTimeout(this.timer)\n    BanksSynchronizationStores.removeChangeListener(this._onChange)\n    PaymentAccountsStore.removeChangeListener(this._onChange)\n    BanksSynchronizationActions.clearBank()\n    requiredFields.clear()\n  }\n\n  _onChange = () => {\n    this.setState(getCurrentState())\n  }\n\n  onEventCallbackFunction = data => {\n    // Do something with the event data\n  }\n\n  onExitCallbackFunction = data => {\n    // Do something with the exit data\n  }\n\n  successCallbackFunction = (link, institution) => {\n    // Do something with the link_id or institution name\n  }\n\n  openBelvoWidget = () => {\n    const { widgetToken } = this.state\n    belvoSDK // eslint-disable-line\n      .createWidget(widgetToken, {\n        locale: 'es',\n        company_name: 'Enconta',\n        // institution: 'bancomer_mx_retail', // to start the widget directly on a specific institution credentials page\n        // institution_types: ['fiscal', 'retail', 'business', 'gig'], // to select the type of institution to show in the widget\n        access_mode: 'recurrent', // to specify the type of link to be created from the widget\n        country_codes: ['MX'],\n        callback: (link, institution) =>\n          this.successCallbackFunction(link, institution),\n        onExit: data => this.onExitCallbackFunction(data),\n        onEvent: data => this.onEventCallbackFunction(data)\n      })\n      .build()\n  }\n\n  saveNewInstitution = () => {\n    const { bank } = this.state\n\n    if (validateAll(requiredFields, this)) {\n      this.setState({ requestInProgress: true })\n      BanksSynchronizationActions.addBank(addBank(bank))\n\n      this.askSynchronizationStatus()\n    }\n  }\n\n  askSynchronizationStatus = () => {\n    const { institution } = this.state.bank\n    const encryptBank = encodeURIComponent(encryptData(institution))\n\n    this.timer = setTimeout(async () => {\n      const status = await BanksSynchronizationActions.askStatus(encryptBank)\n      switch (status) {\n        case 'working':\n          this.askSynchronizationStatus()\n          break\n        case 'failed':\n          this.setState({ requestInProgress: false, failedToRegister: true })\n          break\n        case 'finished':\n          this.setState({ requestInProgress: false })\n          NotificationsActions.clearAll()\n          BanksSynchronizationActions.getReponseRegister(institution)\n            .then(() => {\n              NotificationsActions.success(\n                'El registro de la cuenta fue exitoso'\n              )\n              handleURL(`/seleccionar/banco/${institution}`)\n            })\n            .catch(error => {\n              this.setState({\n                error: error,\n                failedToRegister: true,\n                requestInProgress: false\n              })\n\n              AppSignal.addBreadcrumb({\n                category: 'Smart Sync',\n                action: 'Error: Crear registro.',\n                metadata: {\n                  institution: institution,\n                  url: `/nuevo/banco`,\n                  error: error\n                }\n              })\n              AppSignal.sendError(new Error(error))\n            })\n          break\n      }\n    }, interval)\n  }\n\n  onChange = field => event => {\n    const { value } = event.target\n\n    this.setState(state => ({\n      ...state,\n      bank: {\n        ...state.bank,\n        [field]: value\n      }\n    }))\n  }\n\n  render () {\n    const { bank, requestInProgress, failedToRegister, error } = this.state\n    const { institution } = bank\n    const textInProgress = `Por favor espera, estamos conectando con ${replaceUnderScore(\n      institution\n    )}...`\n    const textFailed = `Error: ${error}`\n\n    const status = getStatusStepper(this)\n    const bancomer = institution === 'bancomer'\n    return (\n      <Fragment>\n        <Button\n          buttonStyle='link'\n          icon='chevron-double-left'\n          onClick={handleBack}\n        >\n          Volver\n        </Button>\n        <p className='subheader-green margin-top'>\n          Paso {institution ? 2 : 1} de 3{' '}\n          {failedToRegister && institution && '/ error de sincronización'}\n        </p>\n        <StepperSmartSync status={status} />\n        <div className='synchronization'>\n          {!requestInProgress && !failedToRegister && (\n            <Fragment>\n              <p className='synchronization__text--bold'>Ingresa tus datos</p>\n              <div className='synchronization--select-bank synchronization--margin-top'>\n                <SelectField\n                  placeholder='Selecciona tu banco'\n                  options={filterCatalog(this)}\n                  value={bank.institution}\n                  onChange={this.onChange('institution')}\n                  optionsConfig={{ id: 'id', label: 'label' }}\n                  testId='selecciona-tu-banco'\n                  ref={r => requiredFields.add(r)}\n                  required\n                />\n                <img\n                  className=' synchronization__logo'\n                  {...getLogo(institution)}\n                />\n              </div>\n\n              <div className='synchronization--credentials-user synchronization--margin-top'>\n                <TextField\n                  label='Usuario'\n                  value={bank.username}\n                  onChange={this.onChange('username')}\n                  ref={r => requiredFields.add(r)}\n                  type='password'\n                  required\n                />\n\n                <div className='synchronization--margin-left'>\n                  <TextField\n                    label='Contraseña'\n                    value={bank.password}\n                    onChange={this.onChange('password')}\n                    ref={r => requiredFields.add(r)}\n                    type='password'\n                    required\n                  />\n                </div>\n\n                {bancomer && (\n                  <div className='synchronization--margin-left'>\n                    <TextField\n                      label='Token'\n                      value={bank.token}\n                      onChange={this.onChange('token')}\n                      ref={r => requiredFields.add(r)}\n                      type='password'\n                      required\n                    />\n                  </div>\n                )}\n              </div>\n\n              <Button\n                buttonStyle='primary'\n                type='submit'\n                loading={requestInProgress}\n                disabled={requestInProgress}\n                onClick={this.saveNewInstitution}\n                className='synchronization--margin-top'\n              >\n                Siguiente\n              </Button>\n\n              <div className='synchronization__link-open-modal synchronization--margin-top'>\n                <p\n                  className='synchronization__link-open-modal--text'\n                  onClick={() =>\n                    handleModals('isModalAccountExplainOpen', this)\n                  }\n                >\n                  ¿Cuál es mi usuario y contraseña?\n                </p>\n                <p\n                  className='synchronization__link-open-modal--text'\n                  onClick={() => handleModals('isModalKeysOpen', this)}\n                >\n                  ¿Por qué necesito ingresar mis claves de acceso?\n                </p>\n                {bancomer && (\n                  <p\n                    className='synchronization__link-open-modal--text'\n                    onClick={() => handleModals('isModalTokenOpen', this)}\n                  >\n                    ¿Por qué necesitan mi token?\n                  </p>\n                )}\n              </div>\n            </Fragment>\n          )}\n          {requestInProgress && institution && (\n            <div className='synchronization--margin-top'>\n              <WaitAdvertisment text={textInProgress} animationData={loading} />\n            </div>\n          )}\n          {failedToRegister && institution && (\n            <div className='synchronization--margin-top'>\n              <WaitAdvertisment\n                animationData={failed}\n                text={textFailed}\n                button\n                tryAgain={() => tryAgain(this)}\n              />\n            </div>\n          )}\n        </div>\n        {renderExplainCredentialsModal(institution, this)}\n        {renderKeysModal(this)}\n        {renderTokenExplain(this)}\n        {bancomer && this.openBelvoWidget()}\n      </Fragment>\n    )\n  }\n}\n\nexport default withRouter(NewBank)\n"]},"metadata":{},"sourceType":"module"}