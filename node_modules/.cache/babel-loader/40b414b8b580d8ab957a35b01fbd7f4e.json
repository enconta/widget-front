{"ast":null,"code":"var _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/shared/button/index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport _snakeCase from 'lodash/snakeCase';\n/*\n * Enconta house-style Button component\n *\n * There are several button styles defined in /public/css/src/components/button.scss\n * each one with a different use case, in general we will be using only these styles:\n *\n * primary: for the primary action of a screen e.g. Aceptar, Guardar, Ingresar, Completar, Enviar\n * this button has to be in the right side of the buttons section of each form,\n * it is encouraged to use type submit algside with this style\n *\n * info: for secondary actions but still important: Filtrar, Nuevo elemento (this with a plus icon)\n *\n * danger: for Borrar (alongside a close icon)\n * this button has to be in the left side of the buttons section of each form,\n *\n * dangerInv: for Cancelar\n * this button has to be in the left side of the buttons section of each form,\n *\n * default: for Atrás, Limpiar and other miscelaneous things\n *\n * To use a style, use the buttonStyle prop\n *\n * To use the loading style, please also use the loading prop and avoid the className assignation\n *\n * */\n\nvar Button = function Button(props) {\n  var children = props.children,\n      type = props.type,\n      disabled = props.disabled,\n      icon = props.icon,\n      buttonStyle = props.buttonStyle,\n      className = props.className,\n      style = props.style,\n      onClick = props.onClick,\n      onBlur = props.onBlur,\n      loading = props.loading,\n      testId = props.testId;\n\n  if (loading) {\n    if (className.includes('is-fullwidth')) children = '';\n    icon = 'loading mdi-spin';\n    className = className.concat(' loading');\n  }\n\n  return React.createElement(\"button\", {\n    className: \"encontaButton \".concat(buttonStyle, \" \").concat(className),\n    disabled: disabled,\n    onClick: onClick,\n    onBlur: onBlur,\n    style: style,\n    type: type,\n    \"data-testid\": testId || \"button_\".concat(_snakeCase(children)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, icon ? React.createElement(\"i\", {\n    className: \"mdi mdi-\".concat(icon),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }) : null, children));\n};\n\nexport default Button;\nButton.propTypes = {\n  children: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  disabled: PropTypes.bool,\n  icon: PropTypes.string,\n  buttonStyle: PropTypes.string,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  loading: PropTypes.bool,\n  onClick: PropTypes.func,\n  onBlur: PropTypes.func,\n  testId: PropTypes.string\n};\nButton.defaultProps = {\n  type: 'button',\n  disabled: false,\n  icon: '',\n  buttonStyle: '',\n  className: '',\n  style: {},\n  loading: false,\n  onClick: function onClick() {},\n  onBlur: function onBlur() {},\n  testId: null\n};","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/shared/button/index.js"],"names":["React","PropTypes","_snakeCase","Button","props","children","type","disabled","icon","buttonStyle","className","style","onClick","onBlur","loading","testId","includes","concat","propTypes","string","isRequired","bool","object","func","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport _snakeCase from 'lodash/snakeCase'\n\n/*\n * Enconta house-style Button component\n *\n * There are several button styles defined in /public/css/src/components/button.scss\n * each one with a different use case, in general we will be using only these styles:\n *\n * primary: for the primary action of a screen e.g. Aceptar, Guardar, Ingresar, Completar, Enviar\n * this button has to be in the right side of the buttons section of each form,\n * it is encouraged to use type submit algside with this style\n *\n * info: for secondary actions but still important: Filtrar, Nuevo elemento (this with a plus icon)\n *\n * danger: for Borrar (alongside a close icon)\n * this button has to be in the left side of the buttons section of each form,\n *\n * dangerInv: for Cancelar\n * this button has to be in the left side of the buttons section of each form,\n *\n * default: for Atrás, Limpiar and other miscelaneous things\n *\n * To use a style, use the buttonStyle prop\n *\n * To use the loading style, please also use the loading prop and avoid the className assignation\n *\n * */\n\nconst Button = props => {\n  let {\n    children,\n    type,\n    disabled,\n    icon,\n    buttonStyle,\n    className,\n    style,\n    onClick,\n    onBlur,\n    loading,\n    testId\n  } = props\n  if (loading) {\n    if (className.includes('is-fullwidth')) children = ''\n    icon = 'loading mdi-spin'\n    className = className.concat(' loading')\n  }\n  return (\n    <button\n      className={`encontaButton ${buttonStyle} ${className}`}\n      disabled={disabled}\n      onClick={onClick}\n      onBlur={onBlur}\n      style={style}\n      type={type}\n      data-testid={testId || `button_${_snakeCase(children)}`}\n    >\n      <span>\n        {icon ? <i className={`mdi mdi-${icon}`} /> : null}\n        {children}\n      </span>\n    </button>\n  )\n}\n\nexport default Button\n\nButton.propTypes = {\n  children: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  disabled: PropTypes.bool,\n  icon: PropTypes.string,\n  buttonStyle: PropTypes.string,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  loading: PropTypes.bool,\n  onClick: PropTypes.func,\n  onBlur: PropTypes.func,\n  testId: PropTypes.string\n}\n\nButton.defaultProps = {\n  type: 'button',\n  disabled: false,\n  icon: '',\n  buttonStyle: '',\n  className: '',\n  style: {},\n  loading: false,\n  onClick: () => {},\n  onBlur: () => {},\n  testId: null\n}\n"]},"metadata":{},"sourceType":"module"}