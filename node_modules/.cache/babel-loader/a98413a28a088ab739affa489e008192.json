{"ast":null,"code":"import _toConsumableArray from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/reports/rubros/index.js\";\n// Libraries\nimport React, { Component } from 'react';\nimport accounting from 'accounting';\nimport { scaleOrdinal } from 'd3';\nimport update from 'immutability-helper';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport AppSignal from 'appsignal'; // Chart\n\nimport Chart from './chart';\nimport SelectField from 'shared/selectField';\nimport { MONTHS, YEARS } from 'shared/catalogs';\nimport { prettyPeriod, DATE_FORMAT, PERIOD_FORMAT } from 'utils';\nimport API from 'api';\nimport { TYPE_KEY, PERIOD_KEY, MONTH_KEY, YEAR_KEY, PERIODS, TYPES, COLORS, LABEL_KEY, AMOUNT_KEY, PERCENTAGE_KEY, PERIOD_START_KEY, PERIOD_END_KEY, PERCENTAGE_THRESHOLD_AMOUNT, SMALL_ITEMS_SUMARIZED_LABEL } from '../constants';\nYEARS.reverse(); // Color palette\n\nvar getColor = scaleOrdinal().range(COLORS); // Assign a percentage for every amount in item from total\n\nvar parseData = function parseData(chartData, total) {\n  var chartDataPercents = chartData.map(function (item, i) {\n    return Object.assign({}, item, _defineProperty({}, PERCENTAGE_KEY, item[AMOUNT_KEY] * 100 / total));\n  });\n  return chartDataPercents;\n}; // Return all items that are big enough\n\n\nvar itemsAboveThreshold = function itemsAboveThreshold(items) {\n  return items.filter(function (i) {\n    return i[PERCENTAGE_KEY] >= PERCENTAGE_THRESHOLD_AMOUNT;\n  });\n}; // Return all items that aren't big enough\n\n\nvar itemsBelowThreshold = function itemsBelowThreshold(items) {\n  return items.filter(function (i) {\n    return i[PERCENTAGE_KEY] < PERCENTAGE_THRESHOLD_AMOUNT;\n  });\n}; // Sumarized items that aren't big enough into a single item\n\n\nvar itemsBelowThresholdSummarized = function itemsBelowThresholdSummarized(items) {\n  var _ref;\n\n  return _ref = {}, _defineProperty(_ref, AMOUNT_KEY, itemsBelowThreshold(items).reduce(function (acc, i) {\n    return acc + i[AMOUNT_KEY];\n  }, 0)), _defineProperty(_ref, LABEL_KEY, SMALL_ITEMS_SUMARIZED_LABEL), _defineProperty(_ref, PERCENTAGE_KEY, itemsBelowThreshold(items).reduce(function (acc, i) {\n    return acc + i[PERCENTAGE_KEY];\n  }, 0)), _ref;\n}; // Component\n\n\nvar Rubros =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Rubros, _Component);\n\n  function Rubros(props) {\n    var _filters;\n\n    var _this;\n\n    _classCallCheck(this, Rubros);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Rubros).call(this, props));\n    _this.data = {\n      chartData: [],\n      showOthers: false,\n      filters: (_filters = {}, _defineProperty(_filters, TYPE_KEY, TYPES[1].id), _defineProperty(_filters, PERIOD_KEY, PERIODS[0].id), _defineProperty(_filters, MONTH_KEY, moment().format('MM')), _defineProperty(_filters, YEAR_KEY, moment().format('YYYY')), _filters)\n    };\n    _this.state = Object.assign({}, _this.data);\n    return _this;\n  } // Load data on component's mount\n\n\n  _createClass(Rubros, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadData();\n    } // Get start and end period\n\n  }, {\n    key: \"getPeriod\",\n    value: function getPeriod() {\n      var _this2 = this,\n          _ref2;\n\n      return _ref2 = {}, _defineProperty(_ref2, PERIOD_START_KEY, moment(\"\".concat(this.state.filters[YEAR_KEY], \"-\").concat(this.state.filters[MONTH_KEY], \"-01\"), DATE_FORMAT).format(PERIOD_FORMAT)), _defineProperty(_ref2, PERIOD_END_KEY, moment(\"\".concat(this.state.filters[YEAR_KEY], \"-\").concat(this.state.filters[MONTH_KEY], \"-01\"), DATE_FORMAT).add(PERIODS.find(function (period) {\n        return _this2.state.filters[PERIOD_KEY] === period.id;\n      }).months - 1, 'month').format(PERIOD_FORMAT)), _ref2;\n    } // Load data from API\n\n  }, {\n    key: \"loadData\",\n    value: function loadData() {\n      var _this3 = this;\n\n      API.Reports.Categories(Object.assign(_defineProperty({}, TYPE_KEY, this.state.filters[TYPE_KEY]), this.getPeriod())).then(function (r) {\n        _this3.setState({\n          chartData: r.report\n        });\n      }).catch(function (error) {\n        AppSignal.sendError(error);\n      });\n    } // Toggle showOthers\n\n  }, {\n    key: \"toggleShowOthers\",\n    value: function toggleShowOthers() {\n      this.setState(function (prevState) {\n        return {\n          showOthers: !prevState.showOthers\n        };\n      });\n    } // Handle changes for filters\n\n  }, {\n    key: \"onChangeFilter\",\n    value: function onChangeFilter(field, e) {\n      var _this4 = this;\n\n      this.setState({\n        filters: update(this.state.filters, _defineProperty({}, field, {\n          $set: e.target.value\n        }))\n      }, function () {\n        _this4.loadData();\n      });\n    } // Return a list of items with label, amount and percentage from total\n\n  }, {\n    key: \"renderItems\",\n    value: function renderItems(items, status) {\n      var _this5 = this;\n\n      if (status === 'below' && !this.state.showOthers) return null;\n      return items.map(function (item, i) {\n        var icon = item[LABEL_KEY] === SMALL_ITEMS_SUMARIZED_LABEL ? React.createElement(\"i\", {\n          className: classNames('mdi mdi-triangle icon mdi-rotate-90', {\n            'mdi-rotate-180': _this5.state.showOthers\n          }),\n          onClick: _this5.toggleShowOthers.bind(_this5),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }) : null;\n        return React.createElement(\"tr\", {\n          key: i,\n          className: classNames({\n            below: status === 'below',\n            'cursor-pointer': item[LABEL_KEY] === SMALL_ITEMS_SUMARIZED_LABEL\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          className: \"colorIcon\",\n          style: {\n            backgroundColor: status === 'above' ? getColor(i) : 'transparent'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }, item[LABEL_KEY], icon), React.createElement(\"td\", {\n          className: \"amount\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        }, accounting.formatMoney(item[AMOUNT_KEY], '$ ', 2)), React.createElement(\"td\", {\n          className: \"percentage\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, accounting.formatNumber(item[PERCENTAGE_KEY], 2), \" %\"));\n      });\n    } // Render rubros component, get data from parent component, this only shows parent info\n\n  }, {\n    key: \"renderChart\",\n    value: function renderChart() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.state,\n          chartData = _ref3.chartData,\n          filters = _ref3.filters;\n\n      var total = chartData.reduce(function (acc, i) {\n        return acc + i[AMOUNT_KEY];\n      }, 0);\n      var items = parseData(chartData, total);\n\n      var _this$getPeriod = this.getPeriod(),\n          startPeriod = _this$getPeriod[PERIOD_START_KEY],\n          endPeriod = _this$getPeriod[PERIOD_END_KEY];\n\n      var start = \"\".concat(prettyPeriod(startPeriod, DATE_FORMAT, true, '/'));\n      var end = prettyPeriod(endPeriod, DATE_FORMAT, true, '/');\n      var period = startPeriod === endPeriod ? start : \"\".concat(start, \" a \").concat(end);\n      return React.createElement(\"div\", {\n        className: \"rubrosChart rubrosChart__columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"rubrosChart rubrosChart__columns-columnChart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(Chart, {\n        items: items,\n        total: total,\n        colors: COLORS,\n        itemsAboveThreshold: itemsAboveThreshold,\n        itemsBelowThreshold: itemsBelowThreshold,\n        itemsBelowThresholdSummarized: itemsBelowThresholdSummarized,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"rubrosChart rubrosChart__columns-columnTable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"rubrosChart rubrosChart__table-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, TYPES.find(function (t) {\n        return t.id === filters[TYPE_KEY];\n      }).label, \" de \", period), React.createElement(\"div\", {\n        className: \"rubrosChart rubrosChart__table-amount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, accounting.formatMoney(total, '$ ', 2)), React.createElement(\"table\", {\n        className: \"rubrosChart rubrosChart__table-table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, this.renderItems([].concat(_toConsumableArray(itemsAboveThreshold(items)), [itemsBelowThresholdSummarized(items)]).filter(function (i) {\n        return i[AMOUNT_KEY] !== 0;\n      }), 'above'), this.renderItems(itemsBelowThreshold(items), 'below')))));\n    } // Render filters for select\n\n  }, {\n    key: \"renderFilters\",\n    value: function renderFilters() {\n      return React.createElement(\"div\", {\n        className: \"rubrosChart__filters rubrosChart__filters-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"rubrosChart__filters rubrosChart__filters-filter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(SelectField, {\n        label: \"Tipo\",\n        options: TYPES,\n        value: this.state.filters[TYPE_KEY],\n        onChange: this.onChangeFilter.bind(this, TYPE_KEY),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"rubrosChart__filters rubrosChart__filters-filter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(SelectField, {\n        label: \"Periodo\",\n        options: PERIODS,\n        value: this.state.filters[PERIOD_KEY],\n        onChange: this.onChangeFilter.bind(this, PERIOD_KEY),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"rubrosChart__filters rubrosChart__filters-filter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(SelectField, {\n        label: \"Mes de inicio\",\n        options: MONTHS,\n        value: this.state.filters[MONTH_KEY],\n        onChange: this.onChangeFilter.bind(this, MONTH_KEY),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"rubrosChart__filters rubrosChart__filters-filter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, React.createElement(SelectField, {\n        label: \"A\\xF1o\",\n        options: YEARS,\n        value: this.state.filters[YEAR_KEY],\n        onChange: this.onChangeFilter.bind(this, YEAR_KEY),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      })));\n    } // Main render\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      return React.createElement(\"div\", {\n        className: \"rubrosChart rubrosChart__wrap\",\n        ref: function ref(node) {\n          return _this6.node = node;\n        } // eslint-disable-line\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, this.renderFilters(), this.renderChart());\n    }\n  }]);\n\n  return Rubros;\n}(Component);\n\nexport default Rubros;","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/reports/rubros/index.js"],"names":["React","Component","accounting","scaleOrdinal","update","classNames","moment","AppSignal","Chart","SelectField","MONTHS","YEARS","prettyPeriod","DATE_FORMAT","PERIOD_FORMAT","API","TYPE_KEY","PERIOD_KEY","MONTH_KEY","YEAR_KEY","PERIODS","TYPES","COLORS","LABEL_KEY","AMOUNT_KEY","PERCENTAGE_KEY","PERIOD_START_KEY","PERIOD_END_KEY","PERCENTAGE_THRESHOLD_AMOUNT","SMALL_ITEMS_SUMARIZED_LABEL","reverse","getColor","range","parseData","chartData","total","chartDataPercents","map","item","i","Object","assign","itemsAboveThreshold","items","filter","itemsBelowThreshold","itemsBelowThresholdSummarized","reduce","acc","Rubros","props","data","showOthers","filters","id","format","state","loadData","add","find","period","months","Reports","Categories","getPeriod","then","r","setState","report","catch","error","sendError","prevState","field","e","$set","target","value","status","icon","toggleShowOthers","bind","below","backgroundColor","formatMoney","formatNumber","startPeriod","endPeriod","start","end","t","label","renderItems","onChangeFilter","node","renderFilters","renderChart"],"mappings":"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","sourcesContent":["// Libraries\nimport React, { Component } from 'react'\nimport accounting from 'accounting'\nimport { scaleOrdinal } from 'd3'\nimport update from 'immutability-helper'\nimport classNames from 'classnames'\nimport moment from 'moment'\nimport AppSignal from 'appsignal'\n\n// Chart\nimport Chart from './chart'\nimport SelectField from 'shared/selectField'\nimport { MONTHS, YEARS } from 'shared/catalogs'\nimport { prettyPeriod, DATE_FORMAT, PERIOD_FORMAT } from 'utils'\nimport API from 'api'\nimport {\n  TYPE_KEY,\n  PERIOD_KEY,\n  MONTH_KEY,\n  YEAR_KEY,\n  PERIODS,\n  TYPES,\n  COLORS,\n  LABEL_KEY,\n  AMOUNT_KEY,\n  PERCENTAGE_KEY,\n  PERIOD_START_KEY,\n  PERIOD_END_KEY,\n  PERCENTAGE_THRESHOLD_AMOUNT,\n  SMALL_ITEMS_SUMARIZED_LABEL\n} from '../constants'\n\nYEARS.reverse()\n\n// Color palette\nconst getColor = scaleOrdinal().range(COLORS)\n\n// Assign a percentage for every amount in item from total\nconst parseData = (chartData, total) => {\n  let chartDataPercents = chartData.map((item, i) =>\n    Object.assign({}, item, {\n      [PERCENTAGE_KEY]: (item[AMOUNT_KEY] * 100) / total\n    })\n  )\n  return chartDataPercents\n}\n\n// Return all items that are big enough\nconst itemsAboveThreshold = items =>\n  items.filter(i => i[PERCENTAGE_KEY] >= PERCENTAGE_THRESHOLD_AMOUNT)\n\n// Return all items that aren't big enough\nconst itemsBelowThreshold = items =>\n  items.filter(i => i[PERCENTAGE_KEY] < PERCENTAGE_THRESHOLD_AMOUNT)\n\n// Sumarized items that aren't big enough into a single item\nconst itemsBelowThresholdSummarized = items => {\n  return {\n    [AMOUNT_KEY]: itemsBelowThreshold(items).reduce(\n      (acc, i) => acc + i[AMOUNT_KEY],\n      0\n    ),\n    [LABEL_KEY]: SMALL_ITEMS_SUMARIZED_LABEL,\n    [PERCENTAGE_KEY]: itemsBelowThreshold(items).reduce(\n      (acc, i) => acc + i[PERCENTAGE_KEY],\n      0\n    )\n  }\n}\n\n// Component\nclass Rubros extends Component {\n  constructor (props) {\n    super(props)\n    this.data = {\n      chartData: [],\n      showOthers: false,\n      filters: {\n        [TYPE_KEY]: TYPES[1].id,\n        [PERIOD_KEY]: PERIODS[0].id,\n        [MONTH_KEY]: moment().format('MM'),\n        [YEAR_KEY]: moment().format('YYYY')\n      }\n    }\n    this.state = Object.assign({}, this.data)\n  }\n\n  // Load data on component's mount\n  componentDidMount () {\n    this.loadData()\n  }\n\n  // Get start and end period\n  getPeriod () {\n    return {\n      [PERIOD_START_KEY]: moment(\n        `${this.state.filters[YEAR_KEY]}-${this.state.filters[MONTH_KEY]}-01`,\n        DATE_FORMAT\n      ).format(PERIOD_FORMAT),\n      [PERIOD_END_KEY]: moment(\n        `${this.state.filters[YEAR_KEY]}-${this.state.filters[MONTH_KEY]}-01`,\n        DATE_FORMAT\n      )\n        .add(\n          PERIODS.find(period => this.state.filters[PERIOD_KEY] === period.id)\n            .months - 1,\n          'month'\n        )\n        .format(PERIOD_FORMAT)\n    }\n  }\n\n  // Load data from API\n  loadData () {\n    API.Reports.Categories(\n      Object.assign(\n        {\n          [TYPE_KEY]: this.state.filters[TYPE_KEY]\n        },\n        this.getPeriod()\n      )\n    )\n      .then(r => {\n        this.setState({\n          chartData: r.report\n        })\n      })\n      .catch(error => {\n        AppSignal.sendError(error)\n      })\n  }\n\n  // Toggle showOthers\n  toggleShowOthers () {\n    this.setState(prevState => ({ showOthers: !prevState.showOthers }))\n  }\n\n  // Handle changes for filters\n  onChangeFilter (field, e) {\n    this.setState(\n      {\n        filters: update(this.state.filters, {\n          [field]: { $set: e.target.value }\n        })\n      },\n      () => {\n        this.loadData()\n      }\n    )\n  }\n\n  // Return a list of items with label, amount and percentage from total\n  renderItems (items, status) {\n    if (status === 'below' && !this.state.showOthers) return null\n    return items.map((item, i) => {\n      let icon =\n        item[LABEL_KEY] === SMALL_ITEMS_SUMARIZED_LABEL ? (\n          <i\n            className={classNames('mdi mdi-triangle icon mdi-rotate-90', {\n              'mdi-rotate-180': this.state.showOthers\n            })}\n            onClick={this.toggleShowOthers.bind(this)}\n          />\n        ) : null\n      return (\n        <tr\n          key={i}\n          className={classNames({\n            below: status === 'below',\n            'cursor-pointer': item[LABEL_KEY] === SMALL_ITEMS_SUMARIZED_LABEL\n          })}\n        >\n          <td\n            className='colorIcon'\n            style={{\n              backgroundColor: status === 'above' ? getColor(i) : 'transparent'\n            }}\n          />\n          <td>\n            {item[LABEL_KEY]}\n            {icon}\n          </td>\n          <td className='amount'>\n            {accounting.formatMoney(item[AMOUNT_KEY], '$ ', 2)}\n          </td>\n          <td className='percentage'>\n            {accounting.formatNumber(item[PERCENTAGE_KEY], 2)} %\n          </td>\n        </tr>\n      )\n    })\n  }\n\n  // Render rubros component, get data from parent component, this only shows parent info\n  renderChart ({ chartData, filters } = this.state) {\n    const total = chartData.reduce((acc, i) => acc + i[AMOUNT_KEY], 0)\n    const items = parseData(chartData, total)\n    const {\n      [PERIOD_START_KEY]: startPeriod,\n      [PERIOD_END_KEY]: endPeriod\n    } = this.getPeriod()\n    const start = `${prettyPeriod(startPeriod, DATE_FORMAT, true, '/')}`\n    const end = prettyPeriod(endPeriod, DATE_FORMAT, true, '/')\n    const period = startPeriod === endPeriod ? start : `${start} a ${end}`\n    return (\n      <div className='rubrosChart rubrosChart__columns'>\n        <div className='rubrosChart rubrosChart__columns-columnChart'>\n          <Chart\n            items={items}\n            total={total}\n            colors={COLORS}\n            itemsAboveThreshold={itemsAboveThreshold}\n            itemsBelowThreshold={itemsBelowThreshold}\n            itemsBelowThresholdSummarized={itemsBelowThresholdSummarized}\n          />\n        </div>\n        <div className='rubrosChart rubrosChart__columns-columnTable'>\n          <div className='rubrosChart rubrosChart__table-title'>\n            {TYPES.find(t => t.id === filters[TYPE_KEY]).label} de {period}\n          </div>\n          <div className='rubrosChart rubrosChart__table-amount'>\n            {accounting.formatMoney(total, '$ ', 2)}\n          </div>\n          <table className='rubrosChart rubrosChart__table-table'>\n            <tbody>\n              {this.renderItems(\n                [\n                  ...itemsAboveThreshold(items),\n                  itemsBelowThresholdSummarized(items)\n                ].filter(i => i[AMOUNT_KEY] !== 0),\n                'above'\n              )}\n              {this.renderItems(itemsBelowThreshold(items), 'below')}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    )\n  }\n\n  // Render filters for select\n  renderFilters () {\n    return (\n      <div className='rubrosChart__filters rubrosChart__filters-wrap'>\n        <div className='rubrosChart__filters rubrosChart__filters-filter'>\n          <SelectField\n            label='Tipo'\n            options={TYPES}\n            value={this.state.filters[TYPE_KEY]}\n            onChange={this.onChangeFilter.bind(this, TYPE_KEY)}\n          />\n        </div>\n        <div className='rubrosChart__filters rubrosChart__filters-filter'>\n          <SelectField\n            label='Periodo'\n            options={PERIODS}\n            value={this.state.filters[PERIOD_KEY]}\n            onChange={this.onChangeFilter.bind(this, PERIOD_KEY)}\n          />\n        </div>\n        <div className='rubrosChart__filters rubrosChart__filters-filter'>\n          <SelectField\n            label='Mes de inicio'\n            options={MONTHS}\n            value={this.state.filters[MONTH_KEY]}\n            onChange={this.onChangeFilter.bind(this, MONTH_KEY)}\n          />\n        </div>\n        <div className='rubrosChart__filters rubrosChart__filters-filter'>\n          <SelectField\n            label='Año'\n            options={YEARS}\n            value={this.state.filters[YEAR_KEY]}\n            onChange={this.onChangeFilter.bind(this, YEAR_KEY)}\n          />\n        </div>\n      </div>\n    )\n  }\n\n  // Main render\n  render () {\n    return (\n      <div\n        className='rubrosChart rubrosChart__wrap'\n        ref={node => (this.node = node)} // eslint-disable-line\n      >\n        {this.renderFilters()}\n        {this.renderChart()}\n      </div>\n    )\n  }\n}\n\nexport default Rubros\n"]},"metadata":{},"sourceType":"module"}