{"ast":null,"code":"!function (root, factory) {\n  \"object\" == typeof exports && \"object\" == typeof module ? module.exports = factory() : \"function\" == typeof define && define.amd ? define([], factory) : \"object\" == typeof exports ? exports.clipboard = factory() : root.clipboard = factory();\n}(\"undefined\" != typeof self ? self : this, function () {\n  return function (modules) {\n    var installedModules = {};\n\n    function __webpack_require__(moduleId) {\n      if (installedModules[moduleId]) return installedModules[moduleId].exports;\n      var module = installedModules[moduleId] = {\n        i: moduleId,\n        l: !1,\n        exports: {}\n      };\n      return modules[moduleId].call(module.exports, module, module.exports, __webpack_require__), module.l = !0, module.exports;\n    }\n\n    return __webpack_require__.m = modules, __webpack_require__.c = installedModules, __webpack_require__.d = function (exports, name, getter) {\n      __webpack_require__.o(exports, name) || Object.defineProperty(exports, name, {\n        enumerable: !0,\n        get: getter\n      });\n    }, __webpack_require__.r = function (exports) {\n      \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(exports, Symbol.toStringTag, {\n        value: \"Module\"\n      }), Object.defineProperty(exports, \"__esModule\", {\n        value: !0\n      });\n    }, __webpack_require__.t = function (value, mode) {\n      if (1 & mode && (value = __webpack_require__(value)), 8 & mode) return value;\n      if (4 & mode && \"object\" == typeof value && value && value.__esModule) return value;\n      var ns = Object.create(null);\n      if (__webpack_require__.r(ns), Object.defineProperty(ns, \"default\", {\n        enumerable: !0,\n        value: value\n      }), 2 & mode && \"string\" != typeof value) for (var key in value) {\n        __webpack_require__.d(ns, key, function (key) {\n          return value[key];\n        }.bind(null, key));\n      }\n      return ns;\n    }, __webpack_require__.n = function (module) {\n      var getter = module && module.__esModule ? function () {\n        return module.default;\n      } : function () {\n        return module;\n      };\n      return __webpack_require__.d(getter, \"a\", getter), getter;\n    }, __webpack_require__.o = function (object, property) {\n      return Object.prototype.hasOwnProperty.call(object, property);\n    }, __webpack_require__.p = \"\", __webpack_require__(__webpack_require__.s = 0);\n  }([function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n      return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) {\n          try {\n            step(generator.next(value));\n          } catch (e) {\n            reject(e);\n          }\n        }\n\n        function rejected(value) {\n          try {\n            step(generator.throw(value));\n          } catch (e) {\n            reject(e);\n          }\n        }\n\n        function step(result) {\n          result.done ? resolve(result.value) : new P(function (resolve) {\n            resolve(result.value);\n          }).then(fulfilled, rejected);\n        }\n\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n      });\n    },\n        __generator = this && this.__generator || function (thisArg, body) {\n      var f,\n          y,\n          t,\n          g,\n          _ = {\n        label: 0,\n        sent: function sent() {\n          if (1 & t[0]) throw t[1];\n          return t[1];\n        },\n        trys: [],\n        ops: []\n      };\n      return g = {\n        next: verb(0),\n        throw: verb(1),\n        return: verb(2)\n      }, \"function\" == typeof Symbol && (g[Symbol.iterator] = function () {\n        return this;\n      }), g;\n\n      function verb(n) {\n        return function (v) {\n          return function (op) {\n            if (f) throw new TypeError(\"Generator is already executing.\");\n\n            for (; _;) {\n              try {\n                if (f = 1, y && (t = 2 & op[0] ? y.return : op[0] ? y.throw || ((t = y.return) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n\n                switch (y = 0, t && (op = [2 & op[0], t.value]), op[0]) {\n                  case 0:\n                  case 1:\n                    t = op;\n                    break;\n\n                  case 4:\n                    return _.label++, {\n                      value: op[1],\n                      done: !1\n                    };\n\n                  case 5:\n                    _.label++, y = op[1], op = [0];\n                    continue;\n\n                  case 7:\n                    op = _.ops.pop(), _.trys.pop();\n                    continue;\n\n                  default:\n                    if (!(t = (t = _.trys).length > 0 && t[t.length - 1]) && (6 === op[0] || 2 === op[0])) {\n                      _ = 0;\n                      continue;\n                    }\n\n                    if (3 === op[0] && (!t || op[1] > t[0] && op[1] < t[3])) {\n                      _.label = op[1];\n                      break;\n                    }\n\n                    if (6 === op[0] && _.label < t[1]) {\n                      _.label = t[1], t = op;\n                      break;\n                    }\n\n                    if (t && _.label < t[2]) {\n                      _.label = t[2], _.ops.push(op);\n                      break;\n                    }\n\n                    t[2] && _.ops.pop(), _.trys.pop();\n                    continue;\n                }\n\n                op = body.call(thisArg, _);\n              } catch (e) {\n                op = [6, e], y = 0;\n              } finally {\n                f = t = 0;\n              }\n            }\n\n            if (5 & op[0]) throw op[1];\n            return {\n              value: op[0] ? op[1] : void 0,\n              done: !0\n            };\n          }([n, v]);\n        };\n      }\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    });\n\n    var DT_1 = __webpack_require__(1);\n\n    exports.DT = DT_1.DT;\n\n    var debugLog = function debugLog(s) {},\n        showWarnings = !0,\n        warn = function () {\n      (console.warn || console.log).apply(console, arguments);\n    }.bind(\"[clipboard-polyfill]\"),\n        TEXT_PLAIN = \"text/plain\";\n\n    function setDebugLog(f) {\n      debugLog = f;\n    }\n\n    function suppressWarnings() {\n      showWarnings = !1, DT_1.suppressDTWarnings();\n    }\n\n    function write(data) {\n      return __awaiter(this, void 0, void 0, function () {\n        var text;\n        return __generator(this, function (_a) {\n          if (showWarnings && !data.getData(TEXT_PLAIN) && warn(\"clipboard.write() was called without a `text/plain` data type. On some platforms, this may result in an empty clipboard. Call clipboard.suppressWarnings() to suppress this warning.\"), seemToBeInIE()) {\n            if (function (data) {\n              var text = data.getData(TEXT_PLAIN);\n              if (void 0 !== text) return window.clipboardData.setData(\"Text\", text);\n              throw \"No `text/plain` value was specified.\";\n            }(data)) return [2];\n            throw \"Copying failed, possibly because the user rejected it.\";\n          }\n\n          if (execCopy(data)) return debugLog(\"regular execCopy worked\"), [2];\n          if (navigator.userAgent.indexOf(\"Edge\") > -1) return debugLog('UA \"Edge\" => assuming success'), [2];\n          if (copyUsingTempSelection(document.body, data)) return debugLog(\"copyUsingTempSelection worked\"), [2];\n          if (function (data) {\n            var tempElem = document.createElement(\"div\");\n            tempElem.setAttribute(\"style\", \"-webkit-user-select: text !important\"), tempElem.textContent = \"temporary element\", document.body.appendChild(tempElem);\n            var success = copyUsingTempSelection(tempElem, data);\n            return document.body.removeChild(tempElem), success;\n          }(data)) return debugLog(\"copyUsingTempElem worked\"), [2];\n          if (void 0 !== (text = data.getData(TEXT_PLAIN)) && function (str) {\n            debugLog(\"copyTextUsingDOM\");\n            var tempElem = document.createElement(\"div\");\n            tempElem.setAttribute(\"style\", \"-webkit-user-select: text !important\");\n            var spanParent = tempElem;\n            tempElem.attachShadow && (debugLog(\"Using shadow DOM.\"), spanParent = tempElem.attachShadow({\n              mode: \"open\"\n            }));\n            var span = document.createElement(\"span\");\n            span.innerText = str, spanParent.appendChild(span), document.body.appendChild(tempElem), selectionSet(span);\n            var result = document.execCommand(\"copy\");\n            return selectionClear(), document.body.removeChild(tempElem), result;\n          }(text)) return debugLog(\"copyTextUsingDOM worked\"), [2];\n          throw \"Copy command failed.\";\n        });\n      });\n    }\n\n    function writeText(s) {\n      return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          return navigator.clipboard && navigator.clipboard.writeText ? (debugLog(\"Using `navigator.clipboard.writeText()`.\"), [2, navigator.clipboard.writeText(s)]) : [2, write(DTFromText(s))];\n        });\n      });\n    }\n\n    function read() {\n      return __awaiter(this, void 0, void 0, function () {\n        var _a;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              return _a = DTFromText, [4, readText()];\n\n            case 1:\n              return [2, _a.apply(void 0, [_b.sent()])];\n          }\n        });\n      });\n    }\n\n    function readText() {\n      return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          if (navigator.clipboard && navigator.clipboard.readText) return debugLog(\"Using `navigator.clipboard.readText()`.\"), [2, navigator.clipboard.readText()];\n          if (seemToBeInIE()) return debugLog(\"Reading text using IE strategy.\"), [2, function () {\n            return __awaiter(this, void 0, void 0, function () {\n              var text;\n              return __generator(this, function (_a) {\n                if (\"\" === (text = window.clipboardData.getData(\"Text\"))) throw \"Empty clipboard or could not read plain text from clipboard\";\n                return [2, text];\n              });\n            });\n          }()];\n          throw \"Read is not supported in your browser.\";\n        });\n      });\n    }\n\n    exports.setDebugLog = setDebugLog, exports.suppressWarnings = suppressWarnings, exports.write = write, exports.writeText = writeText, exports.read = read, exports.readText = readText;\n    var useStarShown = !1;\n\n    function useStar() {\n      useStarShown || (showWarnings && warn('You are using the deprecated default object of `clipboard-polyfill`. Please switch to `import * as clipboard from \"clipboard-polyfill\"` and see https://github.com/lgarron/clipboard-polyfill/issues/101 for more info.'), useStarShown = !0);\n    }\n\n    var ClipboardPolyfillDefault = function () {\n      function ClipboardPolyfillDefault() {}\n\n      return ClipboardPolyfillDefault.setDebugLog = function (f) {\n        return useStar(), setDebugLog(f);\n      }, ClipboardPolyfillDefault.suppressWarnings = function () {\n        return useStar(), suppressWarnings();\n      }, ClipboardPolyfillDefault.write = function (data) {\n        return __awaiter(this, void 0, void 0, function () {\n          return __generator(this, function (_a) {\n            return useStar(), [2, write(data)];\n          });\n        });\n      }, ClipboardPolyfillDefault.writeText = function (s) {\n        return __awaiter(this, void 0, void 0, function () {\n          return __generator(this, function (_a) {\n            return useStar(), [2, writeText(s)];\n          });\n        });\n      }, ClipboardPolyfillDefault.read = function () {\n        return __awaiter(this, void 0, void 0, function () {\n          return __generator(this, function (_a) {\n            return useStar(), [2, read()];\n          });\n        });\n      }, ClipboardPolyfillDefault.readText = function () {\n        return __awaiter(this, void 0, void 0, function () {\n          return __generator(this, function (_a) {\n            return useStar(), [2, readText()];\n          });\n        });\n      }, ClipboardPolyfillDefault.DT = DT_1.DT, ClipboardPolyfillDefault;\n    }();\n\n    exports.default = ClipboardPolyfillDefault;\n\n    var FallbackTracker = function () {\n      return function () {\n        this.success = !1;\n      };\n    }();\n\n    function execCopy(data) {\n      var tracker = new FallbackTracker(),\n          listener = function (tracker, data, e) {\n        debugLog(\"listener called\"), tracker.success = !0, data.forEach(function (value, key) {\n          e.clipboardData.setData(key, value), key === TEXT_PLAIN && e.clipboardData.getData(key) != value && (debugLog(\"setting text/plain failed\"), tracker.success = !1);\n        }), e.preventDefault();\n      }.bind(this, tracker, data);\n\n      document.addEventListener(\"copy\", listener);\n\n      try {\n        document.execCommand(\"copy\");\n      } finally {\n        document.removeEventListener(\"copy\", listener);\n      }\n\n      return tracker.success;\n    }\n\n    function copyUsingTempSelection(e, data) {\n      selectionSet(e);\n      var success = execCopy(data);\n      return selectionClear(), success;\n    }\n\n    function selectionSet(elem) {\n      var sel = document.getSelection();\n\n      if (sel) {\n        var range = document.createRange();\n        range.selectNodeContents(elem), sel.removeAllRanges(), sel.addRange(range);\n      }\n    }\n\n    function selectionClear() {\n      var sel = document.getSelection();\n      sel && sel.removeAllRanges();\n    }\n\n    function DTFromText(s) {\n      var dt = new DT_1.DT();\n      return dt.setData(TEXT_PLAIN, s), dt;\n    }\n\n    function seemToBeInIE() {\n      return \"undefined\" == typeof ClipboardEvent && void 0 !== window.clipboardData && void 0 !== window.clipboardData.setData;\n    }\n  }, function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    });\n\n    var dataTypes = [\"text/plain\", \"text/html\"],\n        warn = function () {\n      (console.warn || console.log).call(arguments);\n    }.bind(console, \"[clipboard-polyfill]\"),\n        showWarnings = !0;\n\n    exports.suppressDTWarnings = function () {\n      showWarnings = !1;\n    };\n\n    var DT = function () {\n      function DT() {\n        this.m = {};\n      }\n\n      return DT.prototype.setData = function (type, value) {\n        showWarnings && -1 === dataTypes.indexOf(type) && warn(\"Unknown data type: \" + type, \"Call clipboard.suppressWarnings() to suppress this warning.\"), this.m[type] = value;\n      }, DT.prototype.getData = function (type) {\n        return this.m[type];\n      }, DT.prototype.forEach = function (f) {\n        for (var k in this.m) {\n          f(this.m[k], k);\n        }\n      }, DT;\n    }();\n\n    exports.DT = DT;\n  }]);\n});","map":null,"metadata":{},"sourceType":"script"}