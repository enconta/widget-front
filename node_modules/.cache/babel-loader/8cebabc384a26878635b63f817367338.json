{"ast":null,"code":"var _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/shared/filter/rangeOption.js\";\n// Libraries\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types'; // Components\n\nimport TextField from 'shared/textField';\nimport Datepicker from 'shared/datepicker';\n/**\n * Range Option is a small pieze of filters\n *\n * It will be for amount range or date range using the propertie rangeType.\n * rangeType = 'numbers' startRange and endRange must be string.\n * rangeType = 'dates' startRange and endRange must be moment.\n * @param {*} props\n */\n\nvar RangeOption = function RangeOption(props) {\n  var mainLabel = props.mainLabel,\n      rangeType = props.rangeType,\n      handleRanges = props.handleRanges,\n      startRange = props.startRange,\n      endRange = props.endRange;\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"filter__caption\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, mainLabel), React.createElement(\"div\", {\n    className: \"flex-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, rangeType === 'numbers' ? React.createElement(TextField, {\n    value: startRange,\n    onChange: handleRanges('startRange'),\n    type: \"number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }) : React.createElement(Datepicker, {\n    placeholder: \"Fecha inicio\",\n    value: startRange,\n    onChange: handleRanges('startRange'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"filter__range-separator\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"-\"), rangeType === 'numbers' ? React.createElement(TextField, {\n    value: endRange,\n    onChange: handleRanges('endRange'),\n    type: \"number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }) : React.createElement(Datepicker, {\n    placeholder: \"Fecha inicio\",\n    value: endRange,\n    onChange: handleRanges('endRange'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })));\n};\n\nexport default RangeOption;\nRangeOption.propTypes = {\n  mainLabel: PropTypes.string.isRequired,\n  rangeType: PropTypes.string.isRequired,\n  handleRanges: PropTypes.func.isRequired,\n  startRange: PropTypes.any.isRequired,\n  endRange: PropTypes.any.isRequired,\n  clear: PropTypes.func.isRequired\n};\nRangeOption.defaultProps = {\n  mainLabel: 'Existencias',\n  rangeType: 'numbers',\n  handleRanges: function handleRanges() {},\n  startRange: '',\n  endRange: '',\n  clear: function clear() {}\n};","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/shared/filter/rangeOption.js"],"names":["React","Fragment","PropTypes","TextField","Datepicker","RangeOption","props","mainLabel","rangeType","handleRanges","startRange","endRange","propTypes","string","isRequired","func","any","clear","defaultProps"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AAEA;;;;;;;;;AAQA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK,EAAI;AAAA,MACnBC,SADmB,GAC0CD,KAD1C,CACnBC,SADmB;AAAA,MACRC,SADQ,GAC0CF,KAD1C,CACRE,SADQ;AAAA,MACGC,YADH,GAC0CH,KAD1C,CACGG,YADH;AAAA,MACiBC,UADjB,GAC0CJ,KAD1C,CACiBI,UADjB;AAAA,MAC6BC,QAD7B,GAC0CL,KAD1C,CAC6BK,QAD7B;AAG3B,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCJ,SAAhC,CADF,EAGE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,SAAS,KAAK,SAAd,GACC,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEE,UADT;AAEE,IAAA,QAAQ,EAAED,YAAY,CAAC,YAAD,CAFxB;AAGE,IAAA,IAAI,EAAC,QAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAOC,oBAAC,UAAD;AACE,IAAA,WAAW,EAAC,cADd;AAEE,IAAA,KAAK,EAAEC,UAFT;AAGE,IAAA,QAAQ,EAAED,YAAY,CAAC,YAAD,CAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,EAeE;AAAG,IAAA,SAAS,EAAC,yBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAfF,EAgBGD,SAAS,KAAK,SAAd,GACC,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEG,QADT;AAEE,IAAA,QAAQ,EAAEF,YAAY,CAAC,UAAD,CAFxB;AAGE,IAAA,IAAI,EAAC,QAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAOC,oBAAC,UAAD;AACE,IAAA,WAAW,EAAC,cADd;AAEE,IAAA,KAAK,EAAEE,QAFT;AAGE,IAAA,QAAQ,EAAEF,YAAY,CAAC,UAAD,CAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBJ,CAHF,CADF;AAoCD,CAvCD;;AAyCA,eAAeJ,WAAf;AAEAA,WAAW,CAACO,SAAZ,GAAwB;AACtBL,EAAAA,SAAS,EAAEL,SAAS,CAACW,MAAV,CAAiBC,UADN;AAEtBN,EAAAA,SAAS,EAAEN,SAAS,CAACW,MAAV,CAAiBC,UAFN;AAGtBL,EAAAA,YAAY,EAAEP,SAAS,CAACa,IAAV,CAAeD,UAHP;AAItBJ,EAAAA,UAAU,EAAER,SAAS,CAACc,GAAV,CAAcF,UAJJ;AAKtBH,EAAAA,QAAQ,EAAET,SAAS,CAACc,GAAV,CAAcF,UALF;AAMtBG,EAAAA,KAAK,EAAEf,SAAS,CAACa,IAAV,CAAeD;AANA,CAAxB;AASAT,WAAW,CAACa,YAAZ,GAA2B;AACzBX,EAAAA,SAAS,EAAE,aADc;AAEzBC,EAAAA,SAAS,EAAE,SAFc;AAGzBC,EAAAA,YAAY,EAAE,wBAAM,CAAE,CAHG;AAIzBC,EAAAA,UAAU,EAAE,EAJa;AAKzBC,EAAAA,QAAQ,EAAE,EALe;AAMzBM,EAAAA,KAAK,EAAE,iBAAM,CAAE;AANU,CAA3B","sourcesContent":["// Libraries\nimport React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\n\n// Components\nimport TextField from 'shared/textField'\nimport Datepicker from 'shared/datepicker'\n\n/**\n * Range Option is a small pieze of filters\n *\n * It will be for amount range or date range using the propertie rangeType.\n * rangeType = 'numbers' startRange and endRange must be string.\n * rangeType = 'dates' startRange and endRange must be moment.\n * @param {*} props\n */\nconst RangeOption = props => {\n  const { mainLabel, rangeType, handleRanges, startRange, endRange } = props\n\n  return (\n    <Fragment>\n      <p className='filter__caption'>{mainLabel}</p>\n\n      <div className='flex-center'>\n        {rangeType === 'numbers' ? (\n          <TextField\n            value={startRange}\n            onChange={handleRanges('startRange')}\n            type='number'\n          />\n        ) : (\n          <Datepicker\n            placeholder='Fecha inicio'\n            value={startRange}\n            onChange={handleRanges('startRange')}\n          />\n        )}\n\n        <p className='filter__range-separator'>-</p>\n        {rangeType === 'numbers' ? (\n          <TextField\n            value={endRange}\n            onChange={handleRanges('endRange')}\n            type='number'\n          />\n        ) : (\n          <Datepicker\n            placeholder='Fecha inicio'\n            value={endRange}\n            onChange={handleRanges('endRange')}\n          />\n        )}\n      </div>\n    </Fragment>\n  )\n}\n\nexport default RangeOption\n\nRangeOption.propTypes = {\n  mainLabel: PropTypes.string.isRequired,\n  rangeType: PropTypes.string.isRequired,\n  handleRanges: PropTypes.func.isRequired,\n  startRange: PropTypes.any.isRequired,\n  endRange: PropTypes.any.isRequired,\n  clear: PropTypes.func.isRequired\n}\n\nRangeOption.defaultProps = {\n  mainLabel: 'Existencias',\n  rangeType: 'numbers',\n  handleRanges: () => {},\n  startRange: '',\n  endRange: '',\n  clear: () => {}\n}\n"]},"metadata":{},"sourceType":"module"}