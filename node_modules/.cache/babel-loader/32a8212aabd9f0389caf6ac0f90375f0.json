{"ast":null,"code":"import _regeneratorRuntime from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _defaultInvoice,\n    _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/newInvoice/payroll/index.js\";\n\n// Imports\nimport React, { Component, Fragment } from 'react';\nimport _Nil from 'lodash/isNil';\nimport { browserHistory } from 'react-router';\nimport ReactGa from 'react-ga';\nimport AppSignal from 'appsignal'; // Components\n\nimport API from 'api';\nimport NotificationsActions from 'actions/notifications';\nimport { removeEmpty, createGaEvent, hasDifference } from 'utils'; // Stores - actions\n\nimport SatCredentialsStore from 'stores/satCredentials';\nimport SatCredentialsActions from 'actions/satCredentials';\nimport SessionStore from 'stores/session'; // Invoice sub-views\n\nimport CredentialsExpire from 'shared/credentials';\nimport Issuer from './../shared/issuer';\nimport Employee from './../shared/employee';\nimport PayrollCharges from './../shared/payrollCharges';\nimport Upload from './../shared/upload'; // Custom components\n\nimport Card from 'shared/card';\nimport MailerModal from '../../viewInvoice/mailerModal'; // Invoice keys\n\nvar VOUCHER_TYPE_KEY = 'voucher_type';\nvar VERSION_KEY = 'version';\nvar PAYMENT_METHOD_KEY = 'payment_method';\nvar PAYMENT_FORM_KEY = 'payment_form';\nvar LAST_DIGITS_KEY = 'last_digits';\nvar TYPE_KEY = 'type';\nvar SUBTYPE_KEY = 'subtype'; // Payroll invoice keys\n\nvar INVOICE_KEY = 'invoice_mg';\nvar PAYROLL_KEY = 'payroll_mg';\nvar ISSUER_KEY = 'issuer_mg';\nvar EMPLOYEE_KEY = 'employee_mg';\nvar PERCEPTION_KEY = 'perception_detail_mg';\nvar DEDUCTION_KEY = 'deduction_detail_mg';\nvar DISABILITIES_KEY = 'disability_mgs';\nvar OVERTIMES_KEY = 'overtime_mgs';\nvar OTHER_PERCEPTIONS_KEY = 'other_payment_mgs';\nvar defaultInvoice = (_defaultInvoice = {}, _defineProperty(_defaultInvoice, VERSION_KEY, '3.3'), _defineProperty(_defaultInvoice, VOUCHER_TYPE_KEY, 'N'), _defineProperty(_defaultInvoice, PAYMENT_METHOD_KEY, 'PUE'), _defineProperty(_defaultInvoice, LAST_DIGITS_KEY, ''), _defineProperty(_defaultInvoice, PAYMENT_FORM_KEY, '99'), _defineProperty(_defaultInvoice, TYPE_KEY, 1), _defineProperty(_defaultInvoice, SUBTYPE_KEY, 1), _defineProperty(_defaultInvoice, \"subtotal_cents\", 0), _defineProperty(_defaultInvoice, \"total_cents\", 0), _defineProperty(_defaultInvoice, \"discount_cents\", 0), _defaultInvoice);\n\nvar getCurrentState = function getCurrentState() {\n  return {\n    credentials: SatCredentialsStore.getCredentials(),\n    currentUser: SessionStore.getUser()\n  };\n};\n\nvar Payroll =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Payroll, _Component);\n\n  function Payroll() {\n    var _this;\n\n    _classCallCheck(this, Payroll);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Payroll).call(this));\n\n    _this._onChange = function () {\n      // When the store changes, the state goes to it and pulls the updated data\n      // then sets it so the component rerenders\n      var _getCurrentState = getCurrentState(),\n          credentials = _getCurrentState.credentials;\n\n      if (hasDifference(_this.state.credentials, credentials)) {\n        _this.setState({\n          credentials: credentials\n        });\n      }\n    };\n\n    _this.toggleMailModal = function () {\n      _this.setState(function (state) {\n        return {\n          openMailModal: !state.openMailModal\n        };\n      });\n    };\n\n    _this.changeVoucherType = function (t) {\n      _this.setState({\n        voucherType: t\n      });\n    };\n\n    _this.data = {\n      category: 'payroll',\n      invoice: defaultInvoice,\n      // Save last error in case form quit\n      lastError: '',\n      // Assume if you open this view you want to finish the form\n      formQuit: true,\n      openMailModal: false,\n      generatedInvoice: {},\n      voucherType: 'N'\n    };\n    _this.state = _objectSpread({}, _this.data, getCurrentState());\n    return _this;\n  }\n\n  _createClass(Payroll, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      SatCredentialsStore.addChangeListener(this._onChange);\n      this.loadData();\n    }\n  }, {\n    key: \"loadData\",\n    value: function loadData() {\n      SatCredentialsActions.getSatCredentials().catch(function (e) {\n        return NotificationsActions.error(e);\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      SatCredentialsStore.removeChangeListener(this._onChange);\n      var _this$state = this.state,\n          formQuit = _this$state.formQuit,\n          lastError = _this$state.lastError; // Notify form quit\n\n      if (formQuit) {\n        ReactGa.event(createGaEvent('facturación nómina', 'form quit', lastError));\n      }\n    } // Add the payroll complements only if the're not empty\n\n  }, {\n    key: \"addPayrollComplements\",\n    value: function addPayrollComplements(invoice) {\n      var invoicePayroll = invoice[PAYROLL_KEY];\n      var payroll = this.refs[PAYROLL_KEY]; // Add payroll objects\n\n      invoicePayroll = this.refs[EMPLOYEE_KEY].exportPayroll();\n      invoicePayroll[PERCEPTION_KEY] = payroll.exportPerceptions();\n      invoicePayroll[DEDUCTION_KEY] = payroll.exportDeductions(); // Add payroll arrays\n\n      invoicePayroll[OTHER_PERCEPTIONS_KEY] = payroll.exportOtherPerceptions();\n      invoicePayroll[OVERTIMES_KEY] = payroll.exportOvertimes();\n      invoicePayroll[DISABILITIES_KEY] = payroll.exportDisabilities(); // Save new data and return main invoice\n\n      invoice[PAYROLL_KEY] = invoicePayroll;\n      return invoice;\n    } // Remove unused properties for invoice\n\n  }, {\n    key: \"cleanInvoice\",\n    value: function cleanInvoice(invoice) {\n      delete invoice.exchange_rate;\n      delete invoice.last_digits;\n      return invoice;\n    } // Create and clean base invoice\n\n  }, {\n    key: \"createBaseInvoice\",\n    value: function createBaseInvoice() {\n      var invoice = Object.assign({}, this.state.invoice, this.refs[ISSUER_KEY].exportInvoice(), this.refs[PAYROLL_KEY].exportTotals());\n      invoice = this.cleanInvoice(invoice);\n      invoice = this.addPayrollComplements(invoice);\n      return invoice;\n    } // Generate hash for API\n    // Must follow API input format\n    // issuerInvoice and recipientInvoice are at the top level object\n    // issuer will become issuer_mg\n    // recipient will become recipient_mg\n\n  }, {\n    key: \"makeInvoice\",\n    value: function makeInvoice() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$send = _ref.send,\n          send = _ref$send === void 0 ? false : _ref$send,\n          _ref$preview = _ref.preview,\n          preview = _ref$preview === void 0 ? false : _ref$preview;\n\n      // Notify button click to GA\n      ReactGa.event(createGaEvent('facturación nómina', 'click on button', 'generar factura'));\n      var lastError = ''; // Validates if all the added required fields are filled\n\n      var employee = this.refs[EMPLOYEE_KEY].exportEmployee();\n\n      if (this.refs[PAYROLL_KEY].validateAll()) {\n        if (employee && !_Nil(employee.id)) {\n          var _invoice;\n\n          // Wrap invoice inside invoice_mg object\n          var invoice = (_invoice = {}, _defineProperty(_invoice, INVOICE_KEY, this.createBaseInvoice()), _defineProperty(_invoice, \"employee\", this.refs[EMPLOYEE_KEY].exportEmployee()), _invoice); // Remove all null properties from invoice\n          // Mongo might perform worse if null values are set\n          // So it's better to not send empty properties at all\n\n          var cleanInvoice = Object.assign({}, invoice);\n          cleanInvoice = removeEmpty(cleanInvoice);\n          this.uploadInvoice(cleanInvoice, send, preview);\n        } else {\n          lastError = 'Es necesario seleccionar un empleado.'; // Notify failure\n\n          ReactGa.event(createGaEvent('facturación nómina', 'result', lastError));\n          NotificationsActions.error(lastError);\n        }\n      } else {\n        lastError = 'Es necesario llenar todos los campos requeridos.'; // Notify failure\n\n        ReactGa.event(createGaEvent('facturación nómina', 'result', lastError));\n        NotificationsActions.error(lastError);\n      }\n\n      this.setState({\n        lastError: lastError,\n        formQuit: true\n      });\n    } // Make API call to upload invoice\n\n  }, {\n    key: \"uploadInvoice\",\n    value: function uploadInvoice(invoice, send, preview) {\n      var _this2 = this;\n\n      if (preview) {\n        invoice.preview = true;\n      }\n\n      this.setState({\n        requestInProgress: true\n      }, function () {\n        API.Invoice.CreatePayroll(invoice, preview).then(\n        /*#__PURE__*/\n        function () {\n          var _ref2 = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee(response) {\n            var data, url;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _this2.setState({\n                      requestInProgress: false,\n                      lastError: '',\n                      formQuit: false\n                    });\n\n                    if (!preview) {\n                      _context.next = 9;\n                      break;\n                    }\n\n                    ReactGa.event(createGaEvent('preview facturación nómina', 'result', 'factura generada'));\n                    _context.next = 5;\n                    return response.blob();\n\n                  case 5:\n                    data = _context.sent;\n                    url = window.URL.createObjectURL(data);\n                    window.open(url);\n                    return _context.abrupt(\"return\");\n\n                  case 9:\n                    if (!send) {\n                      _context.next = 13;\n                      break;\n                    }\n\n                    ReactGa.event(createGaEvent('Generar factura nomina y enviar', 'result', 'factura generada'));\n\n                    _this2.setState({\n                      generatedInvoice: response.invoice\n                    }, _this2.toggleMailModal);\n\n                    return _context.abrupt(\"return\");\n\n                  case 13:\n                    NotificationsActions.success('Factura emitida');\n                    ReactGa.event(createGaEvent('facturación nómina', 'result', 'factura generada'));\n                    browserHistory.push(\"/facturas/ver/\".concat(response.invoice.id));\n\n                  case 16:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n          return function (_x) {\n            return _ref2.apply(this, arguments);\n          };\n        }()).catch(function (error) {\n          // Notify failure to GA\n          ReactGa.event(createGaEvent('facturación nómina', 'result', 'error al generar factura'));\n          AppSignal.sendError(error);\n          NotificationsActions.error(error);\n\n          _this2.setState({\n            requestInProgress: false,\n            lastError: error\n          });\n        });\n      });\n    } // form validation listener\n\n  }, {\n    key: \"onValidationError\",\n    value: function onValidationError(error) {\n      ReactGa.event(createGaEvent('facturación nómina', 'validation error', error));\n    }\n  }, {\n    key: \"render\",\n    // Main render\n    value: function render() {\n      var _this$state2 = this.state,\n          credentials = _this$state2.credentials,\n          voucherType = _this$state2.voucherType,\n          currentUser = _this$state2.currentUser;\n      var hasCSD = Boolean(credentials.csd);\n      var role = currentUser.role;\n      var allowedUser = ['admin', 'account_holder', 'analyst'];\n      var disabled = !(hasCSD && allowedUser.includes(role));\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(CredentialsExpire, {\n        csd: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }), React.createElement(Card, {\n        title: \"Nueva Factura de N\\xF3mina\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, React.createElement(Issuer, {\n        ref: ISSUER_KEY,\n        location: this.props.location,\n        changeVoucherType: this.changeVoucherType,\n        voucherType: voucherType,\n        category: this.state.category,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }), React.createElement(Employee, {\n        ref: EMPLOYEE_KEY,\n        onValidationError: this.onValidationError.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }), React.createElement(PayrollCharges, {\n        ref: PAYROLL_KEY,\n        onValidationError: this.onValidationError.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }), React.createElement(Upload, {\n        loading: this.state.requestInProgress,\n        disabled: disabled,\n        makeInvoice: this.makeInvoice.bind(this),\n        makeInvoiceAndSend: this.makeInvoice.bind(this, {\n          send: true\n        }),\n        makePreviewInvoice: this.makeInvoice.bind(this, {\n          preview: true\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      })), React.createElement(MailerModal, {\n        isActive: this.state.openMailModal && this.state.generatedInvoice,\n        toggleModal: this.toggleMailModal,\n        invoice: this.state.generatedInvoice,\n        redirectOnSubmit: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Payroll;\n}(Component);\n\nexport default Payroll;","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/newInvoice/payroll/index.js"],"names":["React","Component","Fragment","_Nil","browserHistory","ReactGa","AppSignal","API","NotificationsActions","removeEmpty","createGaEvent","hasDifference","SatCredentialsStore","SatCredentialsActions","SessionStore","CredentialsExpire","Issuer","Employee","PayrollCharges","Upload","Card","MailerModal","VOUCHER_TYPE_KEY","VERSION_KEY","PAYMENT_METHOD_KEY","PAYMENT_FORM_KEY","LAST_DIGITS_KEY","TYPE_KEY","SUBTYPE_KEY","INVOICE_KEY","PAYROLL_KEY","ISSUER_KEY","EMPLOYEE_KEY","PERCEPTION_KEY","DEDUCTION_KEY","DISABILITIES_KEY","OVERTIMES_KEY","OTHER_PERCEPTIONS_KEY","defaultInvoice","getCurrentState","credentials","getCredentials","currentUser","getUser","Payroll","_onChange","state","setState","toggleMailModal","openMailModal","changeVoucherType","t","voucherType","data","category","invoice","lastError","formQuit","generatedInvoice","addChangeListener","loadData","getSatCredentials","catch","e","error","removeChangeListener","event","invoicePayroll","payroll","refs","exportPayroll","exportPerceptions","exportDeductions","exportOtherPerceptions","exportOvertimes","exportDisabilities","exchange_rate","last_digits","Object","assign","exportInvoice","exportTotals","cleanInvoice","addPayrollComplements","send","preview","employee","exportEmployee","validateAll","id","createBaseInvoice","uploadInvoice","requestInProgress","Invoice","CreatePayroll","then","response","blob","url","window","URL","createObjectURL","open","success","push","sendError","hasCSD","Boolean","csd","role","allowedUser","disabled","includes","props","location","onValidationError","bind","makeInvoice"],"mappings":"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","sourcesContent":["// Imports\nimport React, { Component, Fragment } from 'react'\nimport _Nil from 'lodash/isNil'\nimport { browserHistory } from 'react-router'\nimport ReactGa from 'react-ga'\nimport AppSignal from 'appsignal'\n\n// Components\nimport API from 'api'\nimport NotificationsActions from 'actions/notifications'\nimport { removeEmpty, createGaEvent, hasDifference } from 'utils'\n\n// Stores - actions\nimport SatCredentialsStore from 'stores/satCredentials'\nimport SatCredentialsActions from 'actions/satCredentials'\nimport SessionStore from 'stores/session'\n\n// Invoice sub-views\nimport CredentialsExpire from 'shared/credentials'\nimport Issuer from './../shared/issuer'\nimport Employee from './../shared/employee'\nimport PayrollCharges from './../shared/payrollCharges'\nimport Upload from './../shared/upload'\n\n// Custom components\nimport Card from 'shared/card'\nimport MailerModal from '../../viewInvoice/mailerModal'\n\n// Invoice keys\nconst VOUCHER_TYPE_KEY = 'voucher_type'\nconst VERSION_KEY = 'version'\nconst PAYMENT_METHOD_KEY = 'payment_method'\nconst PAYMENT_FORM_KEY = 'payment_form'\nconst LAST_DIGITS_KEY = 'last_digits'\nconst TYPE_KEY = 'type'\nconst SUBTYPE_KEY = 'subtype'\n\n// Payroll invoice keys\nconst INVOICE_KEY = 'invoice_mg'\nconst PAYROLL_KEY = 'payroll_mg'\nconst ISSUER_KEY = 'issuer_mg'\nconst EMPLOYEE_KEY = 'employee_mg'\nconst PERCEPTION_KEY = 'perception_detail_mg'\nconst DEDUCTION_KEY = 'deduction_detail_mg'\nconst DISABILITIES_KEY = 'disability_mgs'\nconst OVERTIMES_KEY = 'overtime_mgs'\nconst OTHER_PERCEPTIONS_KEY = 'other_payment_mgs'\n\nconst defaultInvoice = {\n  [VERSION_KEY]: '3.3',\n  [VOUCHER_TYPE_KEY]: 'N',\n  [PAYMENT_METHOD_KEY]: 'PUE',\n  [LAST_DIGITS_KEY]: '',\n  [PAYMENT_FORM_KEY]: '99',\n  [TYPE_KEY]: 1,\n  [SUBTYPE_KEY]: 1,\n  subtotal_cents: 0, // van iguales\n  total_cents: 0, // van iguales\n  discount_cents: 0\n}\n\nconst getCurrentState = () => ({\n  credentials: SatCredentialsStore.getCredentials(),\n  currentUser: SessionStore.getUser()\n})\n\nclass Payroll extends Component {\n  constructor () {\n    super()\n    this.data = {\n      category: 'payroll',\n      invoice: defaultInvoice,\n      // Save last error in case form quit\n      lastError: '',\n      // Assume if you open this view you want to finish the form\n      formQuit: true,\n      openMailModal: false,\n      generatedInvoice: {},\n      voucherType: 'N'\n    }\n    this.state = { ...this.data, ...getCurrentState() }\n  }\n\n  componentDidMount () {\n    SatCredentialsStore.addChangeListener(this._onChange)\n\n    this.loadData()\n  }\n\n  _onChange = () => {\n    // When the store changes, the state goes to it and pulls the updated data\n    // then sets it so the component rerenders\n    const { credentials } = getCurrentState()\n\n    if (hasDifference(this.state.credentials, credentials)) {\n      this.setState({ credentials })\n    }\n  }\n\n  loadData () {\n    SatCredentialsActions.getSatCredentials().catch(e =>\n      NotificationsActions.error(e)\n    )\n  }\n\n  componentWillUnmount () {\n    SatCredentialsStore.removeChangeListener(this._onChange)\n\n    const { formQuit, lastError } = this.state\n    // Notify form quit\n    if (formQuit) {\n      ReactGa.event(createGaEvent('facturación nómina', 'form quit', lastError))\n    }\n  }\n\n  // Add the payroll complements only if the're not empty\n  addPayrollComplements (invoice) {\n    let invoicePayroll = invoice[PAYROLL_KEY]\n    const payroll = this.refs[PAYROLL_KEY]\n\n    // Add payroll objects\n    invoicePayroll = this.refs[EMPLOYEE_KEY].exportPayroll()\n    invoicePayroll[PERCEPTION_KEY] = payroll.exportPerceptions()\n    invoicePayroll[DEDUCTION_KEY] = payroll.exportDeductions()\n\n    // Add payroll arrays\n    invoicePayroll[OTHER_PERCEPTIONS_KEY] = payroll.exportOtherPerceptions()\n    invoicePayroll[OVERTIMES_KEY] = payroll.exportOvertimes()\n    invoicePayroll[DISABILITIES_KEY] = payroll.exportDisabilities()\n\n    // Save new data and return main invoice\n    invoice[PAYROLL_KEY] = invoicePayroll\n    return invoice\n  }\n\n  // Remove unused properties for invoice\n  cleanInvoice (invoice) {\n    delete invoice.exchange_rate\n    delete invoice.last_digits\n    return invoice\n  }\n\n  // Create and clean base invoice\n  createBaseInvoice () {\n    let invoice = Object.assign(\n      {},\n      this.state.invoice,\n      this.refs[ISSUER_KEY].exportInvoice(),\n      this.refs[PAYROLL_KEY].exportTotals()\n    )\n    invoice = this.cleanInvoice(invoice)\n    invoice = this.addPayrollComplements(invoice)\n    return invoice\n  }\n\n  // Generate hash for API\n  // Must follow API input format\n  // issuerInvoice and recipientInvoice are at the top level object\n  // issuer will become issuer_mg\n  // recipient will become recipient_mg\n  makeInvoice ({ send = false, preview = false } = {}) {\n    // Notify button click to GA\n    ReactGa.event(\n      createGaEvent('facturación nómina', 'click on button', 'generar factura')\n    )\n    let lastError = ''\n    // Validates if all the added required fields are filled\n    let employee = this.refs[EMPLOYEE_KEY].exportEmployee()\n    if (this.refs[PAYROLL_KEY].validateAll()) {\n      if (employee && !_Nil(employee.id)) {\n        // Wrap invoice inside invoice_mg object\n        const invoice = {\n          [INVOICE_KEY]: this.createBaseInvoice(),\n          employee: this.refs[EMPLOYEE_KEY].exportEmployee()\n        }\n        // Remove all null properties from invoice\n        // Mongo might perform worse if null values are set\n        // So it's better to not send empty properties at all\n        let cleanInvoice = Object.assign({}, invoice)\n        cleanInvoice = removeEmpty(cleanInvoice)\n        this.uploadInvoice(cleanInvoice, send, preview)\n      } else {\n        lastError = 'Es necesario seleccionar un empleado.'\n        // Notify failure\n        ReactGa.event(createGaEvent('facturación nómina', 'result', lastError))\n        NotificationsActions.error(lastError)\n      }\n    } else {\n      lastError = 'Es necesario llenar todos los campos requeridos.'\n      // Notify failure\n      ReactGa.event(createGaEvent('facturación nómina', 'result', lastError))\n      NotificationsActions.error(lastError)\n    }\n    this.setState({ lastError, formQuit: true })\n  }\n\n  // Make API call to upload invoice\n  uploadInvoice (invoice, send, preview) {\n    if (preview) {\n      invoice.preview = true\n    }\n\n    this.setState({ requestInProgress: true }, () => {\n      API.Invoice.CreatePayroll(invoice, preview)\n        .then(async response => {\n          this.setState({\n            requestInProgress: false,\n            lastError: '',\n            formQuit: false\n          })\n\n          if (preview) {\n            ReactGa.event(\n              createGaEvent(\n                'preview facturación nómina',\n                'result',\n                'factura generada'\n              )\n            )\n\n            const data = await response.blob()\n            const url = window.URL.createObjectURL(data)\n            window.open(url)\n\n            return\n          }\n\n          // Notify succes to GA\n          if (send) {\n            ReactGa.event(\n              createGaEvent(\n                'Generar factura nomina y enviar',\n                'result',\n                'factura generada'\n              )\n            )\n            this.setState(\n              { generatedInvoice: response.invoice },\n              this.toggleMailModal\n            )\n            return\n          }\n\n          NotificationsActions.success('Factura emitida')\n          ReactGa.event(\n            createGaEvent('facturación nómina', 'result', 'factura generada')\n          )\n          browserHistory.push(`/facturas/ver/${response.invoice.id}`)\n        })\n        .catch(error => {\n          // Notify failure to GA\n          ReactGa.event(\n            createGaEvent(\n              'facturación nómina',\n              'result',\n              'error al generar factura'\n            )\n          )\n          AppSignal.sendError(error)\n          NotificationsActions.error(error)\n          this.setState({ requestInProgress: false, lastError: error })\n        })\n    })\n  }\n\n  // form validation listener\n  onValidationError (error) {\n    ReactGa.event(\n      createGaEvent('facturación nómina', 'validation error', error)\n    )\n  }\n\n  toggleMailModal = () => {\n    this.setState(state => ({ openMailModal: !state.openMailModal }))\n  }\n\n  changeVoucherType = t => {\n    this.setState({ voucherType: t })\n  }\n\n  // Main render\n  render () {\n    const { credentials, voucherType, currentUser } = this.state\n    const hasCSD = Boolean(credentials.csd)\n    const { role } = currentUser\n    const allowedUser = ['admin', 'account_holder', 'analyst']\n    const disabled = !(hasCSD && allowedUser.includes(role))\n\n    return (\n      <Fragment>\n        <CredentialsExpire csd />\n        <Card title='Nueva Factura de Nómina'>\n          <Issuer\n            ref={ISSUER_KEY}\n            location={this.props.location}\n            changeVoucherType={this.changeVoucherType}\n            voucherType={voucherType}\n            category={this.state.category}\n          />\n          <br />\n          <Employee\n            ref={EMPLOYEE_KEY}\n            onValidationError={this.onValidationError.bind(this)}\n          />\n          <br />\n          <PayrollCharges\n            ref={PAYROLL_KEY}\n            onValidationError={this.onValidationError.bind(this)}\n          />\n          <Upload\n            loading={this.state.requestInProgress}\n            disabled={disabled}\n            makeInvoice={this.makeInvoice.bind(this)}\n            makeInvoiceAndSend={this.makeInvoice.bind(this, { send: true })}\n            makePreviewInvoice={this.makeInvoice.bind(this, { preview: true })}\n          />\n        </Card>\n        <MailerModal\n          isActive={this.state.openMailModal && this.state.generatedInvoice}\n          toggleModal={this.toggleMailModal}\n          invoice={this.state.generatedInvoice}\n          redirectOnSubmit\n        />\n      </Fragment>\n    )\n  }\n}\n\nexport default Payroll\n"]},"metadata":{},"sourceType":"module"}