{"ast":null,"code":"import _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/accountants/new/index.js\";\n// Libraries\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router';\nimport classNames from 'classnames';\nimport validator from 'validator';\nimport update from 'immutability-helper';\nimport Button from 'shared/button';\n/*\n *\n */\n\nvar NewAccountant =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewAccountant, _Component);\n\n  function NewAccountant(props) {\n    var _this;\n\n    _classCallCheck(this, NewAccountant);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NewAccountant).call(this, props));\n    _this.data = {\n      title: 'New Accountant',\n      isUpdate: props.location.pathname !== '/admin/contadores/nuevo',\n      requestInProgress: false,\n      form: {\n        name: '',\n        lastname: '',\n        email: '',\n        role: 'leader'\n      },\n      // associateRFC: {\n      //   addNew: '',\n      //   removeNew: '',\n      //   add: [],\n      //   remove: []\n      // },\n      addList: [],\n      removeList: [],\n      addNewRFC: '',\n      removeNewRFC: '',\n      isValid: {\n        name: true,\n        lastname: true,\n        email: true\n      },\n      categories: []\n    };\n    _this.state = Object.assign({}, _this.data);\n    return _this;\n  } // Prevents the standard uploading of the form\n  // Validates the fields\n  // Sends the data to the server if validation is successful\n  // Cleans the form if the response is successful\n  // Calls the loadData function of it's parent if the response is successful\n\n\n  _createClass(NewAccountant, [{\n    key: \"sendData\",\n    value: function sendData(e) {\n      e.preventDefault();\n\n      if (this.isValidName() && this.isValidLastname() && this.isValidEmail() && !this.state.requestInProgress) {\n        // requestInProgress disables submit button, prevents duplicate requests\n        this.setState({\n          requestInProgress: true\n        }, function () {\n          this.setState({\n            requestInProgress: false\n          });\n        });\n      }\n    } // Sets the value of this.state.form.name with the target value\n\n  }, {\n    key: \"onChangeFormName\",\n    value: function onChangeFormName(e) {\n      this.setState({\n        form: update(this.state.form, {\n          name: {\n            $set: e.target.value\n          }\n        })\n      });\n      if (!this.state.isValid.name) this.isValidName();\n    } // Sets the value of this.state.form.name with the target value\n\n  }, {\n    key: \"onChangeFormLastname\",\n    value: function onChangeFormLastname(e) {\n      this.setState({\n        form: update(this.state.form, {\n          lastname: {\n            $set: e.target.value\n          }\n        })\n      });\n      if (!this.state.isValid.lastname) this.isValidLastname();\n    } // Sets the value of this.state.form.email with the target value\n\n  }, {\n    key: \"onChangeFormEmail\",\n    value: function onChangeFormEmail(e) {\n      this.setState({\n        form: update(this.state.form, {\n          email: {\n            $set: e.target.value\n          }\n        })\n      });\n      if (!this.state.isValid.email) this.isValidEmail();\n    }\n  }, {\n    key: \"onChangeAssociateAdd\",\n    value: function onChangeAssociateAdd(e) {\n      this.setState({\n        addNewRFC: e.target.value\n      });\n    }\n  }, {\n    key: \"onChangeAssociateRemove\",\n    value: function onChangeAssociateRemove(e) {\n      this.setState({\n        removeNewRFC: e.target.value\n      });\n    } // Sets the value of this.state.form.category with the target value\n    // This comes from a select\n\n  }, {\n    key: \"setFormCategory\",\n    value: function setFormCategory(e) {\n      e.preventDefault();\n      this.setState({\n        form: update(this.state.form, {\n          category: {\n            $set: Number(e.target.value)\n          }\n        })\n      });\n    } // Sets the value of this.state.form.role with the target value\n    // This comes from a select\n\n  }, {\n    key: \"setFormRole\",\n    value: function setFormRole(e) {\n      e.preventDefault();\n      this.setState({\n        form: update(this.state.form, {\n          role: {\n            $set: e.target.value\n          }\n        })\n      });\n    }\n  }, {\n    key: \"associateAdd\",\n    value: function associateAdd() {\n      if (this.state.addNewRFC.length > 0) {\n        var addList = this.state.addList;\n        addList.push(this.state.addNewRFC);\n        this.setState({\n          addNewRFC: '',\n          addList: addList\n        });\n      }\n    }\n  }, {\n    key: \"associateRemove\",\n    value: function associateRemove() {\n      if (this.state.removeNewRFC.length > 0) {\n        var removeList = this.state.removeList;\n        removeList.push(this.state.removeNewRFC);\n        this.setState({\n          removeNewRFC: '',\n          removeList: removeList\n        });\n      }\n    } // Validate form name\n    // Sets the state isValid object to the validity of isValid.name\n    // Returns the validity\n    // Validation rules:\n    // Minimum length is 2 characters\n\n  }, {\n    key: \"isValidName\",\n    value: function isValidName() {\n      var isValid = validator.isLength(this.state.form.name, 2);\n      this.setState({\n        isValid: update(this.state.isValid, {\n          name: {\n            $set: isValid\n          }\n        })\n      });\n      return isValid;\n    } // Validate form lastname\n    // Sets the state isValid object to the validity of isValid.lastname\n    // Returns the validity\n    // Validation rules:\n    // Minimum length is 2 characters\n\n  }, {\n    key: \"isValidLastname\",\n    value: function isValidLastname() {\n      var isValid = validator.isLength(this.state.form.lastname, 2);\n      this.setState({\n        isValid: update(this.state.isValid, {\n          lastname: {\n            $set: isValid\n          }\n        })\n      });\n      return isValid;\n    } // Validate form email\n    // Sets the state isValid object to the validity of isValid.email\n    // Returns the validity\n    // Validation rules:\n    // Must be an email\n\n  }, {\n    key: \"isValidEmail\",\n    value: function isValidEmail() {\n      var isValid = validator.isEmail(this.state.form.email);\n      this.setState({\n        isValid: update(this.state.isValid, {\n          email: {\n            $set: isValid\n          }\n        })\n      });\n      return isValid;\n    } // Renders the role select field\n\n  }, {\n    key: \"renderRole\",\n    value: function renderRole() {\n      return React.createElement(\"label\", {\n        className: \"caption\",\n        htmlFor: \"rol\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"Rol\", React.createElement(\"select\", {\n        id: \"rol\",\n        value: this.state.form.role,\n        onBlur: this.setFormRole.bind(this),\n        onChange: this.setFormRole.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"leader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \"L\\xEDder de equipo\"), React.createElement(\"option\", {\n        value: \"accountant\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"Contador\")));\n    }\n  }, {\n    key: \"renderRFCList\",\n    value: function renderRFCList() {\n      var renderRFCList = null;\n\n      if (this.state.isUpdate) {\n        var associateRFCAddList = null;\n        var associateRFCRemoveList = null;\n\n        if (this.state.addList.length > 0) {\n          associateRFCAddList = this.state.addList.map(function (rfc, index) {\n            return React.createElement(\"li\", {\n              key: rfc,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 212\n              },\n              __self: this\n            }, rfc);\n          });\n        }\n\n        if (this.state.removeList.length > 0) {\n          associateRFCRemoveList = this.state.removeList.map(function (rfc, index) {\n            return React.createElement(\"li\", {\n              key: rfc,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 220\n              },\n              __self: this\n            }, rfc);\n          });\n        }\n\n        renderRFCList = React.createElement(\"div\", {\n          className: \"columns\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"column\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"control\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          className: \"caption\",\n          htmlFor: \"rfc\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228\n          },\n          __self: this\n        }, \"Asociar RFC\", React.createElement(\"input\", {\n          id: \"rfc\",\n          type: \"text\",\n          className: \"input\",\n          placeholder: \"Escribe un RFC\",\n          value: this.state.addNewRFC,\n          onChange: this.onChangeAssociateAdd.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"control\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          },\n          __self: this\n        }, React.createElement(Button, {\n          buttonStyle: \"info\",\n          onClick: this.associateAdd.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241\n          },\n          __self: this\n        }, \"Asociar\")), associateRFCAddList), React.createElement(\"div\", {\n          className: \"column\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"control\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          className: \"caption\",\n          htmlFor: \"disassociateRFC\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249\n          },\n          __self: this\n        }, \"Desasociar RFC\", React.createElement(\"input\", {\n          id: \"disassociateRFC\",\n          type: \"text\",\n          className: \"input\",\n          placeholder: \"Escribe un RFC\",\n          value: this.state.removeNewRFC,\n          onChange: this.onChangeAssociateRemove.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"control\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261\n          },\n          __self: this\n        }, React.createElement(Button, {\n          buttonStyle: \"info\",\n          onClick: this.associateRemove.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262\n          },\n          __self: this\n        }, \"Desasociar\")), associateRFCRemoveList));\n      }\n\n      return renderRFCList;\n    } // Main render\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var title = this.state.isUpdate ? 'Update ' + this.state.title : this.state.title;\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"title is-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, title), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        className: \"login-content\",\n        onSubmit: this.sendData.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"caption\",\n        htmlFor: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, \"Nombre\", React.createElement(\"input\", {\n        id: \"name\",\n        className: classNames('input', {\n          'is-danger': !this.state.isValid.name\n        }),\n        type: \"text\",\n        placeholder: \"Nombre\",\n        value: this.state.form.name,\n        onChange: this.onChangeFormName.bind(this),\n        onBlur: this.isValidName.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: classNames('help', 'is-danger', {\n          'is-hidden': this.state.isValid.name\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, \"M\\xEDnimo 2 caracteres\")), React.createElement(\"div\", {\n        className: \"control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"caption\",\n        htmlFor: \"lastname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, \"Apellido\", React.createElement(\"input\", {\n        id: \"lastname\",\n        className: classNames('input', {\n          'is-danger': !this.state.isValid.lastname\n        }),\n        type: \"text\",\n        placeholder: \"Apellido\",\n        value: this.state.form.lastname,\n        onChange: this.onChangeFormLastname.bind(this),\n        onBlur: this.isValidLastname.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: classNames('help', 'is-danger', {\n          'is-hidden': this.state.isValid.lastname\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, \"M\\xEDnimo 2 caracteres\")), React.createElement(\"div\", {\n        className: \"control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"caption\",\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, \"Correo electr\\xF3nico\", React.createElement(\"input\", {\n        id: \"email\",\n        className: classNames('input', {\n          'is-danger': !this.state.isValid.email\n        }),\n        type: \"text\",\n        placeholder: \"Correo electr\\xF3nico\",\n        value: this.state.form.email,\n        onChange: this.onChangeFormEmail.bind(this),\n        onBlur: this.isValidEmail.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: classNames('help', 'is-danger', {\n          'is-hidden': this.state.isValid.email\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }, \"Correo inv\\xE1lido\")), React.createElement(\"div\", {\n        className: \"control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"select is-fullwidth\",\n        style: {\n          height: '3.25em'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      }, this.renderRole())), this.renderRFCList(), React.createElement(\"div\", {\n        className: \"control is-grouped\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }, React.createElement(Button, {\n        buttonStyle: \"primary\",\n        onClick: this.sendData.bind(this),\n        disabled: !this.state.isValid.name || !this.state.isValid.lastname || !this.state.isValid.email,\n        loading: this.state.requestInProgress,\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }, \"Guardar\")), React.createElement(\"div\", {\n        className: \"control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/admin/contadores\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, \"Cancelar\"))))))));\n    }\n  }]);\n\n  return NewAccountant;\n}(Component);\n\nNewAccountant.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string\n  })\n};\nexport default NewAccountant;","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/accountants/new/index.js"],"names":["React","Component","PropTypes","Link","classNames","validator","update","Button","NewAccountant","props","data","title","isUpdate","location","pathname","requestInProgress","form","name","lastname","email","role","addList","removeList","addNewRFC","removeNewRFC","isValid","categories","state","Object","assign","e","preventDefault","isValidName","isValidLastname","isValidEmail","setState","$set","target","value","category","Number","length","push","isLength","isEmail","setFormRole","bind","renderRFCList","associateRFCAddList","associateRFCRemoveList","map","rfc","index","onChangeAssociateAdd","associateAdd","onChangeAssociateRemove","associateRemove","sendData","onChangeFormName","onChangeFormLastname","onChangeFormEmail","height","renderRole","propTypes","shape","string"],"mappings":"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","sourcesContent":["// Libraries\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router'\nimport classNames from 'classnames'\nimport validator from 'validator'\nimport update from 'immutability-helper'\n\nimport Button from 'shared/button'\n\n/*\n *\n */\n\nclass NewAccountant extends Component {\n  constructor (props) {\n    super(props)\n    this.data = {\n      title: 'New Accountant',\n      isUpdate: props.location.pathname !== '/admin/contadores/nuevo',\n      requestInProgress: false,\n      form: {\n        name: '',\n        lastname: '',\n        email: '',\n        role: 'leader'\n      },\n      // associateRFC: {\n      //   addNew: '',\n      //   removeNew: '',\n      //   add: [],\n      //   remove: []\n      // },\n      addList: [],\n      removeList: [],\n      addNewRFC: '',\n      removeNewRFC: '',\n      isValid: {\n        name: true,\n        lastname: true,\n        email: true\n      },\n      categories: []\n    }\n    this.state = Object.assign({}, this.data)\n  }\n\n  // Prevents the standard uploading of the form\n  // Validates the fields\n  // Sends the data to the server if validation is successful\n  // Cleans the form if the response is successful\n  // Calls the loadData function of it's parent if the response is successful\n  sendData (e) {\n    e.preventDefault()\n    if (\n      this.isValidName() &&\n      this.isValidLastname() &&\n      this.isValidEmail() &&\n      !this.state.requestInProgress\n    ) {\n      // requestInProgress disables submit button, prevents duplicate requests\n      this.setState(\n        {\n          requestInProgress: true\n        },\n        function () {\n          this.setState({ requestInProgress: false })\n        }\n      )\n    }\n  }\n\n  // Sets the value of this.state.form.name with the target value\n  onChangeFormName (e) {\n    this.setState({\n      form: update(this.state.form, { name: { $set: e.target.value } })\n    })\n    if (!this.state.isValid.name) this.isValidName()\n  }\n\n  // Sets the value of this.state.form.name with the target value\n  onChangeFormLastname (e) {\n    this.setState({\n      form: update(this.state.form, { lastname: { $set: e.target.value } })\n    })\n    if (!this.state.isValid.lastname) this.isValidLastname()\n  }\n\n  // Sets the value of this.state.form.email with the target value\n  onChangeFormEmail (e) {\n    this.setState({\n      form: update(this.state.form, { email: { $set: e.target.value } })\n    })\n    if (!this.state.isValid.email) this.isValidEmail()\n  }\n\n  onChangeAssociateAdd (e) {\n    this.setState({ addNewRFC: e.target.value })\n  }\n\n  onChangeAssociateRemove (e) {\n    this.setState({ removeNewRFC: e.target.value })\n  }\n\n  // Sets the value of this.state.form.category with the target value\n  // This comes from a select\n  setFormCategory (e) {\n    e.preventDefault()\n    this.setState({\n      form: update(this.state.form, {\n        category: { $set: Number(e.target.value) }\n      })\n    })\n  }\n\n  // Sets the value of this.state.form.role with the target value\n  // This comes from a select\n  setFormRole (e) {\n    e.preventDefault()\n    this.setState({\n      form: update(this.state.form, { role: { $set: e.target.value } })\n    })\n  }\n\n  associateAdd () {\n    if (this.state.addNewRFC.length > 0) {\n      let addList = this.state.addList\n      addList.push(this.state.addNewRFC)\n      this.setState({\n        addNewRFC: '',\n        addList: addList\n      })\n    }\n  }\n\n  associateRemove () {\n    if (this.state.removeNewRFC.length > 0) {\n      let removeList = this.state.removeList\n      removeList.push(this.state.removeNewRFC)\n      this.setState({\n        removeNewRFC: '',\n        removeList: removeList\n      })\n    }\n  }\n\n  // Validate form name\n  // Sets the state isValid object to the validity of isValid.name\n  // Returns the validity\n  // Validation rules:\n  // Minimum length is 2 characters\n  isValidName () {\n    let isValid = validator.isLength(this.state.form.name, 2)\n    this.setState({\n      isValid: update(this.state.isValid, { name: { $set: isValid } })\n    })\n    return isValid\n  }\n\n  // Validate form lastname\n  // Sets the state isValid object to the validity of isValid.lastname\n  // Returns the validity\n  // Validation rules:\n  // Minimum length is 2 characters\n  isValidLastname () {\n    let isValid = validator.isLength(this.state.form.lastname, 2)\n    this.setState({\n      isValid: update(this.state.isValid, { lastname: { $set: isValid } })\n    })\n    return isValid\n  }\n\n  // Validate form email\n  // Sets the state isValid object to the validity of isValid.email\n  // Returns the validity\n  // Validation rules:\n  // Must be an email\n  isValidEmail () {\n    let isValid = validator.isEmail(this.state.form.email)\n    this.setState({\n      isValid: update(this.state.isValid, { email: { $set: isValid } })\n    })\n    return isValid\n  }\n\n  // Renders the role select field\n  renderRole () {\n    return (\n      <label className='caption' htmlFor='rol'>\n        Rol\n        <select\n          id='rol'\n          value={this.state.form.role}\n          onBlur={this.setFormRole.bind(this)}\n          onChange={this.setFormRole.bind(this)}\n        >\n          <option value='leader'>Líder de equipo</option>\n          <option value='accountant'>Contador</option>\n        </select>\n      </label>\n    )\n  }\n\n  renderRFCList () {\n    let renderRFCList = null\n    if (this.state.isUpdate) {\n      let associateRFCAddList = null\n      let associateRFCRemoveList = null\n\n      if (this.state.addList.length > 0) {\n        associateRFCAddList = this.state.addList.map(function (rfc, index) {\n          return <li key={rfc}>{rfc}</li>\n        })\n      }\n      if (this.state.removeList.length > 0) {\n        associateRFCRemoveList = this.state.removeList.map(function (\n          rfc,\n          index\n        ) {\n          return <li key={rfc}>{rfc}</li>\n        })\n      }\n\n      renderRFCList = (\n        <div className='columns'>\n          <div className='column'>\n            <div className='control'>\n              <label className='caption' htmlFor='rfc'>\n                Asociar RFC\n                <input\n                  id='rfc'\n                  type='text'\n                  className='input'\n                  placeholder='Escribe un RFC'\n                  value={this.state.addNewRFC}\n                  onChange={this.onChangeAssociateAdd.bind(this)}\n                />\n              </label>\n            </div>\n            <div className='control'>\n              <Button buttonStyle='info' onClick={this.associateAdd.bind(this)}>\n                Asociar\n              </Button>\n            </div>\n            {associateRFCAddList}\n          </div>\n          <div className='column'>\n            <div className='control'>\n              <label className='caption' htmlFor='disassociateRFC'>\n                Desasociar RFC\n                <input\n                  id='disassociateRFC'\n                  type='text'\n                  className='input'\n                  placeholder='Escribe un RFC'\n                  value={this.state.removeNewRFC}\n                  onChange={this.onChangeAssociateRemove.bind(this)}\n                />\n              </label>\n            </div>\n            <div className='control'>\n              <Button\n                buttonStyle='info'\n                onClick={this.associateRemove.bind(this)}\n              >\n                Desasociar\n              </Button>\n            </div>\n            {associateRFCRemoveList}\n          </div>\n        </div>\n      )\n    }\n    return renderRFCList\n  }\n\n  // Main render\n  render () {\n    let title = this.state.isUpdate\n      ? 'Update ' + this.state.title\n      : this.state.title\n\n    return (\n      <div className='container'>\n        <div className='columns'>\n          <div className='column'>\n            <h2 className='title is-5'>{title}</h2>\n            <hr />\n            <form className='login-content' onSubmit={this.sendData.bind(this)}>\n              <div className='control'>\n                <label className='caption' htmlFor='name'>\n                  Nombre\n                  <input\n                    id='name'\n                    className={classNames('input', {\n                      'is-danger': !this.state.isValid.name\n                    })}\n                    type='text'\n                    placeholder='Nombre'\n                    value={this.state.form.name}\n                    onChange={this.onChangeFormName.bind(this)}\n                    onBlur={this.isValidName.bind(this)}\n                  />\n                </label>\n                <span\n                  className={classNames('help', 'is-danger', {\n                    'is-hidden': this.state.isValid.name\n                  })}\n                >\n                  Mínimo 2 caracteres\n                </span>\n              </div>\n              <div className='control'>\n                <label className='caption' htmlFor='lastname'>\n                  Apellido\n                  <input\n                    id='lastname'\n                    className={classNames('input', {\n                      'is-danger': !this.state.isValid.lastname\n                    })}\n                    type='text'\n                    placeholder='Apellido'\n                    value={this.state.form.lastname}\n                    onChange={this.onChangeFormLastname.bind(this)}\n                    onBlur={this.isValidLastname.bind(this)}\n                  />\n                </label>\n                <span\n                  className={classNames('help', 'is-danger', {\n                    'is-hidden': this.state.isValid.lastname\n                  })}\n                >\n                  Mínimo 2 caracteres\n                </span>\n              </div>\n              <div className='control'>\n                <label className='caption' htmlFor='email'>\n                  Correo electrónico\n                  <input\n                    id='email'\n                    className={classNames('input', {\n                      'is-danger': !this.state.isValid.email\n                    })}\n                    type='text'\n                    placeholder='Correo electrónico'\n                    value={this.state.form.email}\n                    onChange={this.onChangeFormEmail.bind(this)}\n                    onBlur={this.isValidEmail.bind(this)}\n                  />\n                </label>\n                <span\n                  className={classNames('help', 'is-danger', {\n                    'is-hidden': this.state.isValid.email\n                  })}\n                >\n                  Correo inválido\n                </span>\n              </div>\n              <div className='control'>\n                <span\n                  className='select is-fullwidth'\n                  style={{ height: '3.25em' }}\n                >\n                  {this.renderRole()}\n                </span>\n              </div>\n              {this.renderRFCList()}\n              <div className='control is-grouped'>\n                <div className='control'>\n                  <Button\n                    buttonStyle='primary'\n                    onClick={this.sendData.bind(this)}\n                    disabled={\n                      !this.state.isValid.name ||\n                      !this.state.isValid.lastname ||\n                      !this.state.isValid.email\n                    }\n                    loading={this.state.requestInProgress}\n                    type='submit'\n                  >\n                    Guardar\n                  </Button>\n                </div>\n                <div className='control'>\n                  <Link to='/admin/contadores'>\n                    <Button>Cancelar</Button>\n                  </Link>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nNewAccountant.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string\n  })\n}\n\nexport default NewAccountant\n"]},"metadata":{},"sourceType":"module"}