{"ast":null,"code":"import _toConsumableArray from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/newInvoice/shared/charges/charge/index.js\";\n// Libraries\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport accounting from 'accounting';\nimport { Async } from 'react-select';\nimport classNames from 'classnames';\nimport AppSignal from 'appsignal'; // Components\n\nimport API from 'api';\nimport { taxRateFormat, absolutify } from 'utils';\nimport { TAXES, TAX_KIND, TAX_AMOUNTS } from 'shared/catalogs';\nimport SelectField from 'shared/selectField';\nimport Button from 'shared/button';\nimport TextField from 'shared/textField';\nimport _isEmpty from 'lodash/isEmpty';\nimport TaxRecipes from './../taxRecipes';\nimport { calculateTotal } from '../../../utils';\nimport { CHARGE_KEY, AMOUNT_KEY, DESCRIPTION_KEY, UNITY_KEY, PRICE_KEY, DISCOUNT_KEY, TOTAL_KEY, IDENTIFY_NUM_KEY, PRODUCT_SERVICE_CODE_KEY, TAX_DETAIL_KEY, BEFORE_TAX_TOTAL_KEY, CUSTOM_IVA_TRANSLATED, TAX_AMOUNT_CENTS_KEY, TAX_RETAINED_KEY, TAX_TRANSFERRED_KEY, TAX_TAX_NAME_KEY, TAX_RATE_KEY, TAX_FACTORY_TYPE_KEY, TAX_BASE_KEY, REQUIRED_DECIMALS } from '../../../constants'; // Labels\n\nvar LABELS = {\n  charge: {\n    quantity: 'Cantidad',\n    description: 'Descripción',\n    units: 'Unidades',\n    pricePerUnit: 'Precio unitario',\n    total: 'Importe',\n    identifyNum: 'Número identificador',\n    productServiceCode: 'Código de producto'\n  },\n  tax: {\n    retained: 'Impuesto Retenido',\n    transferred: 'Impuesto Trasladado',\n    name: 'Impuesto',\n    amount: 'Monto',\n    rate: 'Tasa (%)',\n    factoryType: 'Tipo de impuesto',\n    base: 'Monto base'\n  }\n};\nvar requiredFields = new Set();\n\nvar SatCatalogs =\n/*#__PURE__*/\nfunction () {\n  function SatCatalogs() {\n    _classCallCheck(this, SatCatalogs);\n  }\n\n  _createClass(SatCatalogs, null, [{\n    key: \"ParseUnits\",\n    // Convert an array of units in a format that react-select will understand\n    value: function ParseUnits(list) {\n      return list.map(function (elem) {\n        return {\n          value: elem.unit_code,\n          label: elem.name\n        };\n      }).filter(function (elem) {\n        return elem.label;\n      });\n    } // Convert an array of products in a format that react-select will understand\n\n  }, {\n    key: \"ParseProducts\",\n    value: function ParseProducts(list) {\n      return list.map(function (elem) {\n        return {\n          value: elem.clave_prod_serv,\n          label: elem.description\n        };\n      }).filter(function (elem) {\n        return elem.label;\n      });\n    }\n  }]);\n\n  return SatCatalogs;\n}(); // Get proportional amount that will be paid on tax considering base, tax rate and recipe\n\n\nvar calculateTaxAmount = function calculateTaxAmount(base, tax, recipe) {\n  base = absolutify(base);\n  tax = absolutify(tax);\n  if (recipe === 'sale_with_tax') return base - base / (tax / 100 + 1);\n  return base * tax / 100;\n};\n\nvar Charge =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Charge, _PureComponent);\n\n  _createClass(Charge, null, [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      if (!_isEmpty(props.data) && !state.loaded) {\n        return _objectSpread({}, props.data, {\n          loaded: true\n        });\n      }\n\n      return null;\n    }\n  }]);\n\n  function Charge(props) {\n    var _CHARGE_KEY, _isValid, _this$data;\n\n    var _this;\n\n    _classCallCheck(this, Charge);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Charge).call(this, props));\n\n    _this.onChangeRecipe = function () {\n      _this.setState(_defineProperty({}, TAX_DETAIL_KEY, _this.newTax(_this.props.recipe, _this.state[CHARGE_KEY][TOTAL_KEY])), _this.updateChargeTotal);\n    };\n\n    _this.data = (_this$data = {\n      loaded: false\n    }, _defineProperty(_this$data, CHARGE_KEY, (_CHARGE_KEY = {}, _defineProperty(_CHARGE_KEY, AMOUNT_KEY, 1), _defineProperty(_CHARGE_KEY, UNITY_KEY, ''), _defineProperty(_CHARGE_KEY, DESCRIPTION_KEY, ''), _defineProperty(_CHARGE_KEY, PRICE_KEY, 0), _defineProperty(_CHARGE_KEY, TOTAL_KEY, 0), _defineProperty(_CHARGE_KEY, DISCOUNT_KEY, 0), _defineProperty(_CHARGE_KEY, IDENTIFY_NUM_KEY, ''), _defineProperty(_CHARGE_KEY, PRODUCT_SERVICE_CODE_KEY, ''), _CHARGE_KEY)), _defineProperty(_this$data, TAX_DETAIL_KEY, _this.newTax(props.recipe, 0)), _defineProperty(_this$data, BEFORE_TAX_TOTAL_KEY, 0), _defineProperty(_this$data, \"isValid\", (_isValid = {}, _defineProperty(_isValid, UNITY_KEY, true), _defineProperty(_isValid, PRODUCT_SERVICE_CODE_KEY, true), _defineProperty(_isValid, CUSTOM_IVA_TRANSLATED, true), _isValid)), _this$data);\n    _this.state = Object.assign({}, _this.data);\n    return _this;\n  }\n\n  _createClass(Charge, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Update totals when a new charge is added\n      if (_isEmpty(this.props.data)) {\n        this.updateChargeTotal();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.props.recipe !== prevProps.recipe) {\n        this.onChangeRecipe();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // Clears the stored requiredFields\n      requiredFields.clear();\n    }\n  }, {\n    key: \"getProducts\",\n    // Return the frequently used products or the searched products results\n    value: function getProducts(input) {\n      if (typeof input !== 'undefined' && input.length === 0) {\n        return Promise.resolve(this.props.getFrequentlyUsedProducts()).then(function (products) {\n          return {\n            options: SatCatalogs.ParseProducts(products)\n          };\n        });\n      }\n\n      return API.Invoice.GetProducts({\n        full_text: input\n      }).then(function (r) {\n        return {\n          options: SatCatalogs.ParseProducts(r.products)\n        };\n      }).catch(function (error) {\n        AppSignal.sendError(error);\n        throw error;\n      });\n    } // Return the frequently used units or the searched units results\n\n  }, {\n    key: \"getUnits\",\n    value: function getUnits(input) {\n      if (typeof input !== 'undefined' && input.length === 0) {\n        return Promise.resolve(this.props.getFrequentlyUsedUnits()).then(function (units) {\n          return {\n            options: SatCatalogs.ParseUnits(units)\n          };\n        });\n      }\n\n      return API.Invoice.GetUnits({\n        full_text: input\n      }).then(function (r) {\n        return {\n          options: SatCatalogs.ParseUnits(r.units)\n        };\n      }).catch(function (error) {\n        AppSignal.sendError(error);\n        throw error;\n      });\n    } // Iterates over required fields and validates every one of them\n    // Then it returns true if all validations succeedeed, else false.\n\n  }, {\n    key: \"validateRequiredFields\",\n    value: function validateRequiredFields() {\n      return this.isValidProductType() && this.isValidUnitType() && this.isValidCustomIva() && _toConsumableArray(requiredFields) // Converts the Set() into an array\n      .filter(Boolean) // Filters the array from any falsy value\n      .map(function (form) {\n        return form.validate();\n      }) // Calls the validate() method on each form\n      .every(function (e) {\n        return e;\n      }) // Checks if all validations suceeded\n      ;\n    } // Return new tax, this is the format for every new tax\n\n  }, {\n    key: \"newTax\",\n    value: function newTax() {\n      var recipe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'other';\n      var taxBase = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var taxRecipe = {\n        singleTax: TaxRecipes.SingleTax(typeof this.state !== 'undefined' && this.state[CHARGE_KEY] !== 'undefined' && this.state[CHARGE_KEY][TOTAL_KEY] !== 'undefined' ? this.state[CHARGE_KEY][TOTAL_KEY] : 0),\n        sale: TaxRecipes.SaleTax(taxBase),\n        sale_with_tax: TaxRecipes.SaleWithTaxTax(taxBase),\n        fees: TaxRecipes.FeesTax(taxBase),\n        lease: TaxRecipes.LeaseTax(taxBase),\n        affiliates: TaxRecipes.AffiliatesTax(taxBase),\n        other: TaxRecipes.OtherTax(taxBase)\n      };\n      return taxRecipe[recipe];\n    } // Add one tax to selected tax kind\n\n  }, {\n    key: \"addTax\",\n    value: function addTax(kind) {\n      this.setState(_defineProperty({}, TAX_DETAIL_KEY, update(this.state[TAX_DETAIL_KEY], _defineProperty({}, kind, _defineProperty({}, this.state[TAX_DETAIL_KEY][kind].length, {\n        $set: this.newTax('singleTax', this.state[CHARGE_KEY][TOTAL_KEY])\n      })))), this.updateChargeTotal);\n    } // Remove tax @ pos from selected tax kind\n\n  }, {\n    key: \"deleteTax\",\n    value: function deleteTax(kind, pos) {\n      var taxes = this.state[TAX_DETAIL_KEY][kind];\n      taxes.splice(pos, 1);\n      this.setState(_defineProperty({}, TAX_DETAIL_KEY, update(this.state[TAX_DETAIL_KEY], _defineProperty({}, kind, {\n        $set: taxes\n      }))), this.updateChargeTotal);\n    } // When recipe is sale_with_tax, update tax base\n\n  }, {\n    key: \"formatTaxWithTax\",\n    value: function formatTaxWithTax(tax, kind) {\n      var taxBase = kind === 'retained' ? tax[TAX_BASE_KEY] + tax[TAX_AMOUNT_CENTS_KEY] : tax[TAX_BASE_KEY] - tax[TAX_AMOUNT_CENTS_KEY];\n      return update(tax, _defineProperty({}, TAX_BASE_KEY, {\n        $set: Number(accounting.toFixed(taxBase, 6))\n      }));\n    } // Format taxes for exporting\n\n  }, {\n    key: \"formatTax\",\n    value: function formatTax(tax, kind) {\n      if (this.props.recipe === 'sale_with_tax') {\n        tax = this.formatTaxWithTax(tax, kind);\n      }\n\n      return update(tax, _defineProperty({}, TAX_RATE_KEY, {\n        $set: taxRateFormat(tax[TAX_RATE_KEY])\n      }));\n    } // Format taxes when exporting current charge\n\n  }, {\n    key: \"formatTaxes\",\n    value: function formatTaxes(taxes, kind) {\n      var _this2 = this;\n\n      return taxes.length > 0 ? taxes.map(function (tax) {\n        return _this2.formatTax(tax, kind);\n      }) : taxes;\n    } // Export current charge\n\n  }, {\n    key: \"exportCharge\",\n    value: function exportCharge() {\n      var _objectSpread2;\n\n      var codeKey = this.state[CHARGE_KEY][PRODUCT_SERVICE_CODE_KEY].value;\n\n      var charge = _objectSpread({}, this.state[CHARGE_KEY], (_objectSpread2 = {}, _defineProperty(_objectSpread2, PRODUCT_SERVICE_CODE_KEY, codeKey), _defineProperty(_objectSpread2, UNITY_KEY, this.state[CHARGE_KEY][UNITY_KEY].value), _defineProperty(_objectSpread2, TAX_DETAIL_KEY, Object.assign({}, this.state[TAX_DETAIL_KEY])), _objectSpread2)); // Format tax as our API requires\n\n\n      var retainedTaxes = this.formatTaxes(charge[TAX_DETAIL_KEY][TAX_RETAINED_KEY], 'retained');\n      var transferredTaxes = this.formatTaxes(charge[TAX_DETAIL_KEY][TAX_TRANSFERRED_KEY], 'transferred');\n      charge[TAX_DETAIL_KEY][TAX_RETAINED_KEY] = retainedTaxes;\n      charge[TAX_DETAIL_KEY][TAX_TRANSFERRED_KEY] = transferredTaxes; // Format unit price as number\n\n      charge[PRICE_KEY] = absolutify(charge[PRICE_KEY]); // If recipe has tax included, add and deduct tax from price\n\n      if (this.props.recipe === 'sale_with_tax') {\n        charge[PRICE_KEY] = charge[PRICE_KEY] - transferredTaxes[0][TAX_AMOUNT_CENTS_KEY] / charge[AMOUNT_KEY];\n        charge[TOTAL_KEY] = charge[AMOUNT_KEY] * charge[PRICE_KEY];\n      }\n\n      return charge;\n    } // Format as price when blurring an input\n\n  }, {\n    key: \"formatPrice\",\n    value: function formatPrice(field) {\n      var formatted = accounting.formatMoney(absolutify(this.state[CHARGE_KEY][field]), '$ ');\n      this.setState(_defineProperty({}, CHARGE_KEY, update(this.state[CHARGE_KEY], _defineProperty({}, field, {\n        $set: formatted\n      }))));\n    } // Format as number when focusing an input\n\n  }, {\n    key: \"unformatPrice\",\n    value: function unformatPrice(field) {\n      this.setState(_defineProperty({}, CHARGE_KEY, update(this.state[CHARGE_KEY], _defineProperty({}, field, {\n        $set: absolutify(this.state[CHARGE_KEY][field])\n      }))));\n    } // Persist changes to tax input fields to charge state\n\n  }, {\n    key: \"onChangeTax\",\n    value: function onChangeTax(taxKey, pos, field, e) {\n      var _this3 = this;\n\n      this.setState(_defineProperty({}, TAX_DETAIL_KEY, update(this.state[TAX_DETAIL_KEY], _defineProperty({}, taxKey, _defineProperty({}, pos, _defineProperty({}, field, {\n        $set: e.target.value\n      }))))), function () {\n        // Update tax total if the field that changed was TAX_RATE_KEY\n        if (field === TAX_RATE_KEY) _this3.updateChargeTaxTotal(taxKey, pos);\n      });\n    } // Persist changes to charge fields\n\n  }, {\n    key: \"onChangeCharge\",\n    value: function onChangeCharge(field, e) {\n      var _this4 = this;\n\n      this.setState(_defineProperty({}, CHARGE_KEY, update(this.state[CHARGE_KEY], _defineProperty({}, field, {\n        $set: e.target.value\n      }))), function () {\n        if (field === AMOUNT_KEY || field === PRICE_KEY) {\n          _this4.updateChargeTotal();\n        }\n      });\n    }\n  }, {\n    key: \"onChangeUnitType\",\n    value: function onChangeUnitType(unit) {\n      this.setState(_defineProperty({}, CHARGE_KEY, update(this.state[CHARGE_KEY], _defineProperty({}, UNITY_KEY, {\n        $set: unit\n      }))), this.isValidUnitType);\n    }\n  }, {\n    key: \"onChangeProductType\",\n    value: function onChangeProductType(product) {\n      this.setState(_defineProperty({}, CHARGE_KEY, update(this.state[CHARGE_KEY], _defineProperty({}, PRODUCT_SERVICE_CODE_KEY, {\n        $set: product\n      }))), this.isValidProductType);\n    } // Validate UNITY_KEY, is required\n\n  }, {\n    key: \"isValidUnitType\",\n    value: function isValidUnitType() {\n      this.setState({\n        isValid: update(this.state.isValid, _defineProperty({}, UNITY_KEY, {\n          $set: !!this.state[CHARGE_KEY][UNITY_KEY]\n        }))\n      });\n      var isValidUnitType = !!this.state[CHARGE_KEY][UNITY_KEY];\n\n      if (!isValidUnitType) {\n        this.props.onValidationError('unidades - Este campo es requerido');\n      }\n\n      return isValidUnitType;\n    } // Validate PRODUCT_SERVICE_CODE_KEY, is required\n\n  }, {\n    key: \"isValidProductType\",\n    value: function isValidProductType() {\n      var producKey = this.state[CHARGE_KEY][PRODUCT_SERVICE_CODE_KEY];\n      this.setState({\n        isValid: update(this.state.isValid, _defineProperty({}, PRODUCT_SERVICE_CODE_KEY, {\n          $set: !!producKey\n        }))\n      });\n      var productType = this.state[CHARGE_KEY][PRODUCT_SERVICE_CODE_KEY];\n      var isValidProductType = !!productType;\n\n      if (!isValidProductType) {\n        this.props.onValidationError('Código de producto - Este campo es requerido');\n      }\n\n      return !!this.state[CHARGE_KEY][PRODUCT_SERVICE_CODE_KEY];\n    } // For custom tax invoices, tf there's a retained IVA, require a translated IVA\n\n  }, {\n    key: \"isValidCustomIva\",\n    value: function isValidCustomIva() {\n      if (this.props.recipe !== 'other') return true;\n      var isValid = true;\n      return isValid;\n    } // For this tax, update base and amount using subtotal and TAX_RATE_KEY\n\n  }, {\n    key: \"updateTaxValue\",\n    value: function updateTaxValue(tax, subtotal) {\n      var _update13;\n\n      return update(tax, (_update13 = {}, _defineProperty(_update13, TAX_BASE_KEY, {\n        $set: subtotal\n      }), _defineProperty(_update13, TAX_AMOUNT_CENTS_KEY, {\n        $set: calculateTaxAmount(subtotal, tax[TAX_RATE_KEY], this.props.recipe)\n      }), _update13));\n    } // Update tax base and total amout for every tax in taxes\n\n  }, {\n    key: \"updateTaxValues\",\n    value: function updateTaxValues(taxes, subtotal) {\n      var _this5 = this;\n\n      return taxes.length > 0 ? taxes.map(function (tax) {\n        return _this5.updateTaxValue(tax, subtotal);\n      }) : taxes;\n    } // Update base taxes for every tax\n\n  }, {\n    key: \"updateAllTaxes\",\n    value: function updateAllTaxes(subtotal) {\n      var _update14;\n\n      var taxes = this.state[TAX_DETAIL_KEY];\n      var retainedTaxes = this.updateTaxValues(taxes[TAX_RETAINED_KEY], subtotal);\n      var transferredTaxes = this.updateTaxValues(taxes[TAX_TRANSFERRED_KEY], subtotal);\n      this.setState(_defineProperty({}, TAX_DETAIL_KEY, update(taxes, (_update14 = {}, _defineProperty(_update14, TAX_RETAINED_KEY, {\n        $set: retainedTaxes\n      }), _defineProperty(_update14, TAX_TRANSFERRED_KEY, {\n        $set: transferredTaxes\n      }), _update14))), this.updateChargeSubtotal);\n    } // Update total if amount or unit price was changed\n\n  }, {\n    key: \"updateChargeTotal\",\n    value: function updateChargeTotal() {\n      var charge = this.state[CHARGE_KEY];\n      var subtotal = absolutify(charge[AMOUNT_KEY]) * absolutify(charge[PRICE_KEY]);\n      this.setState(_defineProperty({}, CHARGE_KEY, update(charge, _defineProperty({}, TOTAL_KEY, {\n        $set: subtotal\n      }))), this.updateAllTaxes(subtotal));\n    } // Update charge tax total, base and total are fixed values, only tax rate can be changed\n    // This will be the last updated field before exporting totals\n\n  }, {\n    key: \"updateChargeTaxTotal\",\n    value: function updateChargeTaxTotal(taxKey, pos) {\n      var _pos2;\n\n      var tax = this.state[TAX_DETAIL_KEY][taxKey];\n      var taxRate = tax[pos][TAX_RATE_KEY];\n      this.setState(_defineProperty({}, TAX_DETAIL_KEY, update(this.state[TAX_DETAIL_KEY], _defineProperty({}, taxKey, _defineProperty({}, pos, (_pos2 = {}, _defineProperty(_pos2, TAX_RATE_KEY, {\n        $set: taxRate\n      }), _defineProperty(_pos2, TAX_AMOUNT_CENTS_KEY, {\n        $set: calculateTaxAmount(tax[pos][TAX_BASE_KEY], taxRate, this.props.recipe)\n      }), _pos2))))), this.updateChargeSubtotal);\n    } // Updated subtotal, read all taxes and return a total\n\n  }, {\n    key: \"updateChargeSubtotal\",\n    value: function updateChargeSubtotal() {\n      var _this6 = this;\n\n      var total = calculateTotal({\n        recipe: this.props.recipe,\n        total: this.state[CHARGE_KEY][TOTAL_KEY],\n        taxes: this.state[TAX_DETAIL_KEY][TAX_TRANSFERRED_KEY],\n        retentions: this.state[TAX_DETAIL_KEY][TAX_RETAINED_KEY]\n      });\n      this.setState(_defineProperty({}, BEFORE_TAX_TOTAL_KEY, total), function () {\n        // Arrow is needed to update totals on the same state update, don't remove\n        _this6.props.totalUpdated();\n      });\n    } // Export total, taxes and\n\n  }, {\n    key: \"exportTotal\",\n    value: function exportTotal() {\n      var _ref;\n\n      return _ref = {}, _defineProperty(_ref, TOTAL_KEY, this.state[BEFORE_TAX_TOTAL_KEY]), _defineProperty(_ref, DISCOUNT_KEY, this.state[CHARGE_KEY][DISCOUNT_KEY]), _defineProperty(_ref, TAX_DETAIL_KEY, this.state[TAX_DETAIL_KEY]), _ref;\n    } // Set absolute value for number\n\n  }, {\n    key: \"absolute\",\n    value: function absolute(mainKey, secondaryKey) {\n      this.setState(_defineProperty({}, mainKey, update(this.state[mainKey], _defineProperty({}, secondaryKey, {\n        $set: absolutify(this.state[mainKey][secondaryKey])\n      }))));\n    } // Campos principales\n\n  }, {\n    key: \"renderMainInfo\",\n    value: function renderMainInfo() {\n      var charge = this.state[CHARGE_KEY];\n      return React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column is-7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"caption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574\n        },\n        __self: this\n      }, LABELS.charge.productServiceCode, \" *\"), React.createElement(\"div\", {\n        className: classNames('control has-info', {\n          'select-required': !charge[PRODUCT_SERVICE_CODE_KEY]\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577\n        },\n        __self: this\n      }, React.createElement(Async, {\n        value: charge[PRODUCT_SERVICE_CODE_KEY],\n        placeholder: LABELS.charge.productServiceCode,\n        loadingPlaceholder: \"Buscando\",\n        searchPromptText: \"Teclear el nombre del producto\",\n        noResultsText: \"No encontrado\",\n        loadOptions: this.getProducts.bind(this),\n        onChange: this.onChangeProductType.bind(this),\n        onBlur: this.isValidProductType.bind(this),\n        ignoreAccents: false,\n        clearable: true,\n        filterOptions: function filterOptions(options, filter, currentValues) {\n          return options;\n        },\n        autoload: true,\n        cache: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"icon info-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"tooltip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598\n        },\n        __self: this\n      }, \"Ingresa una palabra que ayude a identificar tu producto o servicio\"), React.createElement(\"i\", {\n        className: \"mdi mdi-information-outline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: classNames('help is-danger', {\n          'is-hidden': this.state.isValid[PRODUCT_SERVICE_CODE_KEY]\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604\n        },\n        __self: this\n      }, \"Este campo es requerido\"))), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 613\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: LABELS.charge.identifyNum,\n        value: charge[IDENTIFY_NUM_KEY],\n        placeholder: LABELS.charge.identifyNum,\n        onChange: this.onChangeCharge.bind(this, IDENTIFY_NUM_KEY),\n        selectAllOnFocus: true,\n        info: \"C\\xF3digo asignado por el emisor (Opcional)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 614\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 624\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column is-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 625\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: LABELS.charge.quantity,\n        className: \"is-money\",\n        placeholder: LABELS.charge.quantity,\n        value: charge[AMOUNT_KEY],\n        onBlur: this.absolute.bind(this, CHARGE_KEY, AMOUNT_KEY),\n        onFocus: this.absolute.bind(this, CHARGE_KEY, AMOUNT_KEY),\n        onChange: this.onChangeCharge.bind(this, AMOUNT_KEY),\n        selectAllOnFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 626\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"column is-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 637\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 638\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"caption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 639\n        },\n        __self: this\n      }, LABELS.charge.units, \" *\"), React.createElement(\"div\", {\n        className: classNames('control has-info', {\n          'select-required': !charge[UNITY_KEY]\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 640\n        },\n        __self: this\n      }, React.createElement(Async, {\n        placeholder: LABELS.charge.units,\n        loadingPlaceholder: \"Buscando\",\n        searchPromptText: \"Teclear el nombre de la unidad\",\n        noResultsText: \"No encontrado\",\n        loadOptions: this.getUnits.bind(this),\n        value: charge[UNITY_KEY],\n        onChange: this.onChangeUnitType.bind(this),\n        onBlur: this.isValidUnitType.bind(this),\n        ignoreAccents: false,\n        clearable: true,\n        filterOptions: function filterOptions(options, filter, currentValues) {\n          return options;\n        },\n        autoload: true,\n        cache: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 645\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"icon info-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 662\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"tooltip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 663\n        },\n        __self: this\n      }, \"Unidad de medida del producto o servicio\"), React.createElement(\"i\", {\n        className: \"mdi mdi-information-outline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 666\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: classNames('help is-danger', {\n          'is-hidden': this.state.isValid[UNITY_KEY]\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 668\n        },\n        __self: this\n      }, \"Este campo es requerido\")))), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 678\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: LABELS.charge.description,\n        name: LABELS.charge.description,\n        placeholder: LABELS.charge.description,\n        value: charge[DESCRIPTION_KEY],\n        onChange: this.onChangeCharge.bind(this, DESCRIPTION_KEY),\n        onValidationError: this.props.onValidationError,\n        selectAllOnFocus: true,\n        required: true,\n        ref: function ref(r) {\n          return requiredFields.add(r);\n        },\n        info: \"Concepto de la factura\",\n        maxLength: \"1000\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 679\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"column is-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 693\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: LABELS.charge.pricePerUnit,\n        className: \"is-money\",\n        placeholder: LABELS.charge.pricePerUnit,\n        value: charge[PRICE_KEY],\n        onBlur: this.formatPrice.bind(this, PRICE_KEY),\n        onFocus: this.unformatPrice.bind(this, PRICE_KEY),\n        onChange: this.onChangeCharge.bind(this, PRICE_KEY),\n        selectAllOnFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 694\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"column is-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 705\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: LABELS.charge.total,\n        className: \"is-money\",\n        placeholder: LABELS.charge.total,\n        value: accounting.formatMoney(charge[TOTAL_KEY], '$ ', 2),\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 706\n        },\n        __self: this\n      }))))));\n    } // Impuestos\n\n  }, {\n    key: \"renderTax\",\n    value: function renderTax(chargeTax, taxKey, pos) {\n      var isQuote = chargeTax[TAX_TAX_NAME_KEY] === '003' && chargeTax[TAX_FACTORY_TYPE_KEY] !== 'Cuota';\n      return React.createElement(\"div\", {\n        key: \"\".concat(taxKey).concat(pos),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 728\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 729\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 730\n        },\n        __self: this\n      }, React.createElement(SelectField, {\n        label: LABELS.tax.name,\n        placeholder: LABELS.tax.name,\n        value: chargeTax[TAX_TAX_NAME_KEY],\n        onChange: this.onChangeTax.bind(this, taxKey, pos, TAX_TAX_NAME_KEY),\n        options: TAXES,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 731\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 744\n        },\n        __self: this\n      }, React.createElement(SelectField, {\n        placeholder: LABELS.tax.factoryType,\n        options: TAX_KIND,\n        label: LABELS.tax.factoryType,\n        value: chargeTax[TAX_FACTORY_TYPE_KEY],\n        onChange: this.onChangeTax.bind(this, taxKey, pos, TAX_FACTORY_TYPE_KEY),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 745\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 758\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"caption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 759\n        },\n        __self: this\n      }, LABELS.tax.rate), isQuote ? React.createElement(\"span\", {\n        className: \"select is-fullwidth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 761\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        className: \"select\",\n        placeholder: TAX_RATE_KEY,\n        value: chargeTax[TAX_RATE_KEY],\n        onChange: this.onChangeTax.bind(this, taxKey, pos, TAX_RATE_KEY),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 762\n        },\n        __self: this\n      }, TAX_AMOUNTS['IEPS'].map(function (tax, index) {\n        if (tax.isRange) return;\n        return React.createElement(\"option\", {\n          key: index,\n          value: (Number(tax.amount) * 100).toFixed(REQUIRED_DECIMALS),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 776\n          },\n          __self: this\n        }, (Number(tax.amount) * 100).toFixed(REQUIRED_DECIMALS), ' ', \"%\");\n      }))) : React.createElement(TextField, {\n        className: \"is-money\",\n        placeholder: TAX_RATE_KEY,\n        value: chargeTax[TAX_RATE_KEY],\n        onChange: this.onChangeTax.bind(this, taxKey, pos, TAX_RATE_KEY),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 790\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 803\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: LABELS.tax.amount,\n        className: \"is-money\",\n        placeholder: TAX_AMOUNT_CENTS_KEY,\n        value: accounting.formatMoney(chargeTax[TAX_AMOUNT_CENTS_KEY], '$ ', 2),\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 804\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        buttonStyle: \"dangerLink\",\n        icon: \"delete\",\n        onClick: this.deleteTax.bind(this, taxKey, pos),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 817\n        },\n        __self: this\n      }, \"Eliminar impuesto\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 824\n        },\n        __self: this\n      }));\n    } // Render retained and transferred taxes\n    // Only render custom taxes if recipe is custom\n    // custom comes from catalog ENCONTA_INVOICE_CATEGORIES\n\n  }, {\n    key: \"renderAllTaxes\",\n    value: function renderAllTaxes() {\n      var _this7 = this;\n\n      if (this.props.recipe !== 'other') return;\n      var renderRetainedTaxes = this.state[TAX_DETAIL_KEY][TAX_RETAINED_KEY].length > 0 ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 836\n        },\n        __self: this\n      }, this.state[TAX_DETAIL_KEY][TAX_RETAINED_KEY].map(function (tax, i) {\n        return _this7.renderTax(tax, TAX_RETAINED_KEY, i);\n      })) : null;\n      var renderTransferredTaxes = this.state[TAX_DETAIL_KEY][TAX_TRANSFERRED_KEY].length > 0 ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 844\n        },\n        __self: this\n      }, this.state[TAX_DETAIL_KEY][TAX_TRANSFERRED_KEY].map(function (tax, i) {\n        return _this7.renderTax(tax, TAX_TRANSFERRED_KEY, i);\n      })) : null;\n      return React.createElement(\"div\", {\n        style: {\n          padding: '0 3rem 0 0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 851\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 852\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 853\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column is-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 854\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"deleteIconButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 855\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 856\n        },\n        __self: this\n      }, \"Impuestos Retenidos\"))), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 859\n        },\n        __self: this\n      }, renderRetainedTaxes, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 861\n        },\n        __self: this\n      }, React.createElement(Button, {\n        buttonStyle: \"primaryLink\",\n        icon: \"plus\",\n        onClick: this.addTax.bind(this, TAX_RETAINED_KEY),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 862\n        },\n        __self: this\n      }, \"Agregar Impuesto Retenido\"))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 871\n        },\n        __self: this\n      })), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 873\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 874\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column is-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 875\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"deleteIconButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 876\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 877\n        },\n        __self: this\n      }, \"Impuestos Trasladados\"))), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 880\n        },\n        __self: this\n      }, renderTransferredTaxes, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 882\n        },\n        __self: this\n      }, React.createElement(Button, {\n        buttonStyle: \"primaryLink\",\n        icon: \"plus\",\n        onClick: this.addTax.bind(this, TAX_TRANSFERRED_KEY),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 883\n        },\n        __self: this\n      }, \"Agregar Impuesto Trasladado\")))), React.createElement(\"hr\", {\n        className: classNames({\n          'is-hidden': !this.props.deletable\n        }),\n        style: {\n          backgroundColor: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 893\n        },\n        __self: this\n      }));\n    } // Concepto\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this8 = this;\n\n      return React.createElement(\"div\", {\n        className: \"new-invoice__concept\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 904\n        },\n        __self: this\n      }, this.renderMainInfo(), this.renderAllTaxes(), React.createElement(\"div\", {\n        className: classNames({\n          'is-hidden': !this.props.deletable\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 907\n        },\n        __self: this\n      }, React.createElement(Button, {\n        buttonStyle: \"dangerLink\",\n        icon: \"delete\",\n        onClick: function onClick() {\n          requiredFields.clear();\n\n          _this8.props.deleteConcept(_this8.props.uuid);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 908\n        },\n        __self: this\n      }, \"Eliminar concepto\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 919\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"caption required\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 920\n        },\n        __self: this\n      }, \"* Campos obligatorios\"));\n    }\n  }]);\n\n  return Charge;\n}(PureComponent);\n\nCharge.propTypes = {\n  onValidationError: PropTypes.func,\n  recipe: PropTypes.string,\n  getFrequentlyUsedProducts: PropTypes.func,\n  getFrequentlyUsedUnits: PropTypes.func,\n  deletable: PropTypes.bool,\n  uuid: PropTypes.string,\n  deleteConcept: PropTypes.func,\n  totalUpdated: PropTypes.func\n};\nCharge.defaultProps = {\n  onValidationError: function onValidationError() {}\n};\nexport default Charge;","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/newInvoice/shared/charges/charge/index.js"],"names":["React","PureComponent","PropTypes","update","accounting","Async","classNames","AppSignal","API","taxRateFormat","absolutify","TAXES","TAX_KIND","TAX_AMOUNTS","SelectField","Button","TextField","_isEmpty","TaxRecipes","calculateTotal","CHARGE_KEY","AMOUNT_KEY","DESCRIPTION_KEY","UNITY_KEY","PRICE_KEY","DISCOUNT_KEY","TOTAL_KEY","IDENTIFY_NUM_KEY","PRODUCT_SERVICE_CODE_KEY","TAX_DETAIL_KEY","BEFORE_TAX_TOTAL_KEY","CUSTOM_IVA_TRANSLATED","TAX_AMOUNT_CENTS_KEY","TAX_RETAINED_KEY","TAX_TRANSFERRED_KEY","TAX_TAX_NAME_KEY","TAX_RATE_KEY","TAX_FACTORY_TYPE_KEY","TAX_BASE_KEY","REQUIRED_DECIMALS","LABELS","charge","quantity","description","units","pricePerUnit","total","identifyNum","productServiceCode","tax","retained","transferred","name","amount","rate","factoryType","base","requiredFields","Set","SatCatalogs","list","map","elem","value","unit_code","label","filter","clave_prod_serv","calculateTaxAmount","recipe","Charge","props","state","data","loaded","onChangeRecipe","setState","newTax","updateChargeTotal","Object","assign","prevProps","prevState","clear","input","length","Promise","resolve","getFrequentlyUsedProducts","then","products","options","ParseProducts","Invoice","GetProducts","full_text","r","catch","error","sendError","getFrequentlyUsedUnits","ParseUnits","GetUnits","isValidProductType","isValidUnitType","isValidCustomIva","Boolean","form","validate","every","e","taxBase","taxRecipe","singleTax","SingleTax","sale","SaleTax","sale_with_tax","SaleWithTaxTax","fees","FeesTax","lease","LeaseTax","affiliates","AffiliatesTax","other","OtherTax","kind","$set","pos","taxes","splice","Number","toFixed","formatTaxWithTax","formatTax","codeKey","retainedTaxes","formatTaxes","transferredTaxes","field","formatted","formatMoney","taxKey","target","updateChargeTaxTotal","unit","product","isValid","onValidationError","producKey","productType","subtotal","updateTaxValue","updateTaxValues","updateChargeSubtotal","updateAllTaxes","taxRate","retentions","totalUpdated","mainKey","secondaryKey","getProducts","bind","onChangeProductType","currentValues","onChangeCharge","absolute","getUnits","onChangeUnitType","add","formatPrice","unformatPrice","chargeTax","isQuote","onChangeTax","index","isRange","deleteTax","renderRetainedTaxes","i","renderTax","renderTransferredTaxes","padding","addTax","deletable","backgroundColor","renderMainInfo","renderAllTaxes","deleteConcept","uuid","propTypes","func","string","bool","defaultProps"],"mappings":"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","sourcesContent":["// Libraries\nimport React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport update from 'immutability-helper'\nimport accounting from 'accounting'\nimport { Async } from 'react-select'\nimport classNames from 'classnames'\nimport AppSignal from 'appsignal'\n\n// Components\nimport API from 'api'\nimport { taxRateFormat, absolutify } from 'utils'\nimport { TAXES, TAX_KIND, TAX_AMOUNTS } from 'shared/catalogs'\nimport SelectField from 'shared/selectField'\nimport Button from 'shared/button'\nimport TextField from 'shared/textField'\n\nimport _isEmpty from 'lodash/isEmpty'\n\nimport TaxRecipes from './../taxRecipes'\n\nimport { calculateTotal } from '../../../utils'\n\nimport {\n  CHARGE_KEY,\n  AMOUNT_KEY,\n  DESCRIPTION_KEY,\n  UNITY_KEY,\n  PRICE_KEY,\n  DISCOUNT_KEY,\n  TOTAL_KEY,\n  IDENTIFY_NUM_KEY,\n  PRODUCT_SERVICE_CODE_KEY,\n  TAX_DETAIL_KEY,\n  BEFORE_TAX_TOTAL_KEY,\n  CUSTOM_IVA_TRANSLATED,\n  TAX_AMOUNT_CENTS_KEY,\n  TAX_RETAINED_KEY,\n  TAX_TRANSFERRED_KEY,\n  TAX_TAX_NAME_KEY,\n  TAX_RATE_KEY,\n  TAX_FACTORY_TYPE_KEY,\n  TAX_BASE_KEY,\n  REQUIRED_DECIMALS\n} from '../../../constants'\n\n// Labels\nconst LABELS = {\n  charge: {\n    quantity: 'Cantidad',\n    description: 'Descripción',\n    units: 'Unidades',\n    pricePerUnit: 'Precio unitario',\n    total: 'Importe',\n    identifyNum: 'Número identificador',\n    productServiceCode: 'Código de producto'\n  },\n  tax: {\n    retained: 'Impuesto Retenido',\n    transferred: 'Impuesto Trasladado',\n    name: 'Impuesto',\n    amount: 'Monto',\n    rate: 'Tasa (%)',\n    factoryType: 'Tipo de impuesto',\n    base: 'Monto base'\n  }\n}\n\nconst requiredFields = new Set()\n\nclass SatCatalogs {\n  // Convert an array of units in a format that react-select will understand\n  static ParseUnits (list) {\n    return list\n      .map(elem => ({\n        value: elem.unit_code,\n        label: elem.name\n      }))\n      .filter(elem => elem.label)\n  }\n  // Convert an array of products in a format that react-select will understand\n  static ParseProducts (list) {\n    return list\n      .map(elem => ({\n        value: elem.clave_prod_serv,\n        label: elem.description\n      }))\n      .filter(elem => elem.label)\n  }\n}\n\n// Get proportional amount that will be paid on tax considering base, tax rate and recipe\nconst calculateTaxAmount = (base, tax, recipe) => {\n  base = absolutify(base)\n  tax = absolutify(tax)\n  if (recipe === 'sale_with_tax') return base - base / (tax / 100 + 1)\n  return (base * tax) / 100\n}\n\nclass Charge extends PureComponent {\n  static getDerivedStateFromProps (props, state) {\n    if (!_isEmpty(props.data) && !state.loaded) {\n      return { ...props.data, loaded: true }\n    }\n\n    return null\n  }\n\n  constructor (props) {\n    super(props)\n    this.data = {\n      loaded: false,\n      [CHARGE_KEY]: {\n        [AMOUNT_KEY]: 1,\n        [UNITY_KEY]: '',\n        [DESCRIPTION_KEY]: '',\n        [PRICE_KEY]: 0,\n        [TOTAL_KEY]: 0,\n        [DISCOUNT_KEY]: 0,\n        [IDENTIFY_NUM_KEY]: '',\n        [PRODUCT_SERVICE_CODE_KEY]: ''\n      },\n      [TAX_DETAIL_KEY]: this.newTax(props.recipe, 0),\n      [BEFORE_TAX_TOTAL_KEY]: 0,\n      isValid: {\n        [UNITY_KEY]: true,\n        [PRODUCT_SERVICE_CODE_KEY]: true,\n        [CUSTOM_IVA_TRANSLATED]: true\n      }\n    }\n    this.state = Object.assign({}, this.data)\n  }\n\n  componentDidMount () {\n    // Update totals when a new charge is added\n    if (_isEmpty(this.props.data)) {\n      this.updateChargeTotal()\n    }\n  }\n\n  componentDidUpdate (prevProps, prevState) {\n    if (this.props.recipe !== prevProps.recipe) {\n      this.onChangeRecipe()\n    }\n  }\n\n  componentWillUnmount () {\n    // Clears the stored requiredFields\n    requiredFields.clear()\n  }\n\n  onChangeRecipe = () => {\n    this.setState(\n      {\n        [TAX_DETAIL_KEY]: this.newTax(\n          this.props.recipe,\n          this.state[CHARGE_KEY][TOTAL_KEY]\n        )\n      },\n      this.updateChargeTotal\n    )\n  }\n\n  // Return the frequently used products or the searched products results\n  getProducts (input) {\n    if (typeof input !== 'undefined' && input.length === 0) {\n      return Promise.resolve(this.props.getFrequentlyUsedProducts()).then(\n        products => ({\n          options: SatCatalogs.ParseProducts(products)\n        })\n      )\n    }\n    return API.Invoice.GetProducts({ full_text: input })\n      .then(r => ({ options: SatCatalogs.ParseProducts(r.products) }))\n      .catch(error => {\n        AppSignal.sendError(error)\n        throw error\n      })\n  }\n\n  // Return the frequently used units or the searched units results\n  getUnits (input) {\n    if (typeof input !== 'undefined' && input.length === 0) {\n      return Promise.resolve(this.props.getFrequentlyUsedUnits()).then(\n        units => ({\n          options: SatCatalogs.ParseUnits(units)\n        })\n      )\n    }\n    return API.Invoice.GetUnits({ full_text: input })\n      .then(r => ({ options: SatCatalogs.ParseUnits(r.units) }))\n      .catch(error => {\n        AppSignal.sendError(error)\n        throw error\n      })\n  }\n\n  // Iterates over required fields and validates every one of them\n  // Then it returns true if all validations succeedeed, else false.\n  validateRequiredFields () {\n    return (\n      this.isValidProductType() &&\n      this.isValidUnitType() &&\n      this.isValidCustomIva() &&\n      [...requiredFields] // Converts the Set() into an array\n        .filter(Boolean) // Filters the array from any falsy value\n        .map(form => form.validate()) // Calls the validate() method on each form\n        .every(e => e) // Checks if all validations suceeded\n    )\n  }\n\n  // Return new tax, this is the format for every new tax\n  newTax (recipe = 'other', taxBase = 0) {\n    const taxRecipe = {\n      singleTax: TaxRecipes.SingleTax(\n        typeof this.state !== 'undefined' &&\n          this.state[CHARGE_KEY] !== 'undefined' &&\n          this.state[CHARGE_KEY][TOTAL_KEY] !== 'undefined'\n          ? this.state[CHARGE_KEY][TOTAL_KEY]\n          : 0\n      ),\n      sale: TaxRecipes.SaleTax(taxBase),\n      sale_with_tax: TaxRecipes.SaleWithTaxTax(taxBase),\n      fees: TaxRecipes.FeesTax(taxBase),\n      lease: TaxRecipes.LeaseTax(taxBase),\n      affiliates: TaxRecipes.AffiliatesTax(taxBase),\n      other: TaxRecipes.OtherTax(taxBase)\n    }\n\n    return taxRecipe[recipe]\n  }\n\n  // Add one tax to selected tax kind\n  addTax (kind) {\n    this.setState(\n      {\n        [TAX_DETAIL_KEY]: update(this.state[TAX_DETAIL_KEY], {\n          [kind]: {\n            [this.state[TAX_DETAIL_KEY][kind].length]: {\n              $set: this.newTax('singleTax', this.state[CHARGE_KEY][TOTAL_KEY])\n            }\n          }\n        })\n      },\n      this.updateChargeTotal\n    )\n  }\n\n  // Remove tax @ pos from selected tax kind\n  deleteTax (kind, pos) {\n    let taxes = this.state[TAX_DETAIL_KEY][kind]\n    taxes.splice(pos, 1)\n    this.setState(\n      {\n        [TAX_DETAIL_KEY]: update(this.state[TAX_DETAIL_KEY], {\n          [kind]: { $set: taxes }\n        })\n      },\n      this.updateChargeTotal\n    )\n  }\n\n  // When recipe is sale_with_tax, update tax base\n  formatTaxWithTax (tax, kind) {\n    const taxBase =\n      kind === 'retained'\n        ? tax[TAX_BASE_KEY] + tax[TAX_AMOUNT_CENTS_KEY]\n        : tax[TAX_BASE_KEY] - tax[TAX_AMOUNT_CENTS_KEY]\n    return update(tax, {\n      [TAX_BASE_KEY]: { $set: Number(accounting.toFixed(taxBase, 6)) }\n    })\n  }\n\n  // Format taxes for exporting\n  formatTax (tax, kind) {\n    if (this.props.recipe === 'sale_with_tax') {\n      tax = this.formatTaxWithTax(tax, kind)\n    }\n    return update(tax, {\n      [TAX_RATE_KEY]: { $set: taxRateFormat(tax[TAX_RATE_KEY]) }\n    })\n  }\n\n  // Format taxes when exporting current charge\n  formatTaxes (taxes, kind) {\n    return taxes.length > 0\n      ? taxes.map(tax => this.formatTax(tax, kind))\n      : taxes\n  }\n\n  // Export current charge\n  exportCharge () {\n    const codeKey = this.state[CHARGE_KEY][PRODUCT_SERVICE_CODE_KEY].value\n\n    let charge = {\n      ...this.state[CHARGE_KEY],\n      [PRODUCT_SERVICE_CODE_KEY]: codeKey,\n      [UNITY_KEY]: this.state[CHARGE_KEY][UNITY_KEY].value,\n      [TAX_DETAIL_KEY]: Object.assign({}, this.state[TAX_DETAIL_KEY]) // Don't remove Object assign\n    }\n\n    // Format tax as our API requires\n    const retainedTaxes = this.formatTaxes(\n      charge[TAX_DETAIL_KEY][TAX_RETAINED_KEY],\n      'retained'\n    )\n    const transferredTaxes = this.formatTaxes(\n      charge[TAX_DETAIL_KEY][TAX_TRANSFERRED_KEY],\n      'transferred'\n    )\n\n    charge[TAX_DETAIL_KEY][TAX_RETAINED_KEY] = retainedTaxes\n    charge[TAX_DETAIL_KEY][TAX_TRANSFERRED_KEY] = transferredTaxes\n\n    // Format unit price as number\n    charge[PRICE_KEY] = absolutify(charge[PRICE_KEY])\n    // If recipe has tax included, add and deduct tax from price\n    if (this.props.recipe === 'sale_with_tax') {\n      charge[PRICE_KEY] =\n        charge[PRICE_KEY] -\n        transferredTaxes[0][TAX_AMOUNT_CENTS_KEY] / charge[AMOUNT_KEY]\n      charge[TOTAL_KEY] = charge[AMOUNT_KEY] * charge[PRICE_KEY]\n    }\n\n    return charge\n  }\n\n  // Format as price when blurring an input\n  formatPrice (field) {\n    const formatted = accounting.formatMoney(\n      absolutify(this.state[CHARGE_KEY][field]),\n      '$ '\n    )\n    this.setState({\n      [CHARGE_KEY]: update(this.state[CHARGE_KEY], {\n        [field]: { $set: formatted }\n      })\n    })\n  }\n\n  // Format as number when focusing an input\n  unformatPrice (field) {\n    this.setState({\n      [CHARGE_KEY]: update(this.state[CHARGE_KEY], {\n        [field]: { $set: absolutify(this.state[CHARGE_KEY][field]) }\n      })\n    })\n  }\n\n  // Persist changes to tax input fields to charge state\n  onChangeTax (taxKey, pos, field, e) {\n    this.setState(\n      {\n        [TAX_DETAIL_KEY]: update(this.state[TAX_DETAIL_KEY], {\n          [taxKey]: { [pos]: { [field]: { $set: e.target.value } } }\n        })\n      },\n      () => {\n        // Update tax total if the field that changed was TAX_RATE_KEY\n        if (field === TAX_RATE_KEY) this.updateChargeTaxTotal(taxKey, pos)\n      }\n    )\n  }\n\n  // Persist changes to charge fields\n  onChangeCharge (field, e) {\n    this.setState(\n      {\n        [CHARGE_KEY]: update(this.state[CHARGE_KEY], {\n          [field]: { $set: e.target.value }\n        })\n      },\n      () => {\n        if (field === AMOUNT_KEY || field === PRICE_KEY) {\n          this.updateChargeTotal()\n        }\n      }\n    )\n  }\n\n  onChangeUnitType (unit) {\n    this.setState(\n      {\n        [CHARGE_KEY]: update(this.state[CHARGE_KEY], {\n          [UNITY_KEY]: { $set: unit }\n        })\n      },\n      this.isValidUnitType\n    )\n  }\n\n  onChangeProductType (product) {\n    this.setState(\n      {\n        [CHARGE_KEY]: update(this.state[CHARGE_KEY], {\n          [PRODUCT_SERVICE_CODE_KEY]: { $set: product }\n        })\n      },\n      this.isValidProductType\n    )\n  }\n\n  // Validate UNITY_KEY, is required\n  isValidUnitType () {\n    this.setState({\n      isValid: update(this.state.isValid, {\n        [UNITY_KEY]: { $set: !!this.state[CHARGE_KEY][UNITY_KEY] }\n      })\n    })\n    const isValidUnitType = !!this.state[CHARGE_KEY][UNITY_KEY]\n    if (!isValidUnitType) {\n      this.props.onValidationError('unidades - Este campo es requerido')\n    }\n    return isValidUnitType\n  }\n\n  // Validate PRODUCT_SERVICE_CODE_KEY, is required\n  isValidProductType () {\n    const producKey = this.state[CHARGE_KEY][PRODUCT_SERVICE_CODE_KEY]\n\n    this.setState({\n      isValid: update(this.state.isValid, {\n        [PRODUCT_SERVICE_CODE_KEY]: {\n          $set: !!producKey\n        }\n      })\n    })\n\n    const productType = this.state[CHARGE_KEY][PRODUCT_SERVICE_CODE_KEY]\n    const isValidProductType = !!productType\n\n    if (!isValidProductType) {\n      this.props.onValidationError(\n        'Código de producto - Este campo es requerido'\n      )\n    }\n    return !!this.state[CHARGE_KEY][PRODUCT_SERVICE_CODE_KEY]\n  }\n\n  // For custom tax invoices, tf there's a retained IVA, require a translated IVA\n  isValidCustomIva () {\n    if (this.props.recipe !== 'other') return true\n    let isValid = true\n    return isValid\n  }\n\n  // For this tax, update base and amount using subtotal and TAX_RATE_KEY\n  updateTaxValue (tax, subtotal) {\n    return update(tax, {\n      [TAX_BASE_KEY]: { $set: subtotal },\n      [TAX_AMOUNT_CENTS_KEY]: {\n        $set: calculateTaxAmount(subtotal, tax[TAX_RATE_KEY], this.props.recipe)\n      }\n    })\n  }\n\n  // Update tax base and total amout for every tax in taxes\n  updateTaxValues (taxes, subtotal) {\n    return taxes.length > 0\n      ? taxes.map(tax => this.updateTaxValue(tax, subtotal))\n      : taxes\n  }\n\n  // Update base taxes for every tax\n  updateAllTaxes (subtotal) {\n    const { [TAX_DETAIL_KEY]: taxes } = this.state\n    const retainedTaxes = this.updateTaxValues(\n      taxes[TAX_RETAINED_KEY],\n      subtotal\n    )\n    const transferredTaxes = this.updateTaxValues(\n      taxes[TAX_TRANSFERRED_KEY],\n      subtotal\n    )\n\n    this.setState(\n      {\n        [TAX_DETAIL_KEY]: update(taxes, {\n          [TAX_RETAINED_KEY]: { $set: retainedTaxes },\n          [TAX_TRANSFERRED_KEY]: { $set: transferredTaxes }\n        })\n      },\n      this.updateChargeSubtotal\n    )\n  }\n\n  // Update total if amount or unit price was changed\n  updateChargeTotal () {\n    const { [CHARGE_KEY]: charge } = this.state\n    const subtotal =\n      absolutify(charge[AMOUNT_KEY]) * absolutify(charge[PRICE_KEY])\n\n    this.setState(\n      {\n        [CHARGE_KEY]: update(charge, { [TOTAL_KEY]: { $set: subtotal } })\n      },\n      this.updateAllTaxes(subtotal)\n    )\n  }\n\n  // Update charge tax total, base and total are fixed values, only tax rate can be changed\n  // This will be the last updated field before exporting totals\n  updateChargeTaxTotal (taxKey, pos) {\n    let tax = this.state[TAX_DETAIL_KEY][taxKey]\n    let taxRate = tax[pos][TAX_RATE_KEY]\n    this.setState(\n      {\n        [TAX_DETAIL_KEY]: update(this.state[TAX_DETAIL_KEY], {\n          [taxKey]: {\n            [pos]: {\n              [TAX_RATE_KEY]: { $set: taxRate },\n              [TAX_AMOUNT_CENTS_KEY]: {\n                $set: calculateTaxAmount(\n                  tax[pos][TAX_BASE_KEY],\n                  taxRate,\n                  this.props.recipe\n                )\n              }\n            }\n          }\n        })\n      },\n      this.updateChargeSubtotal\n    )\n  }\n\n  // Updated subtotal, read all taxes and return a total\n  updateChargeSubtotal () {\n    const total = calculateTotal({\n      recipe: this.props.recipe,\n      total: this.state[CHARGE_KEY][TOTAL_KEY],\n      taxes: this.state[TAX_DETAIL_KEY][TAX_TRANSFERRED_KEY],\n      retentions: this.state[TAX_DETAIL_KEY][TAX_RETAINED_KEY]\n    })\n\n    this.setState(\n      {\n        [BEFORE_TAX_TOTAL_KEY]: total\n      },\n      () => {\n        // Arrow is needed to update totals on the same state update, don't remove\n        this.props.totalUpdated()\n      }\n    )\n  }\n\n  // Export total, taxes and\n  exportTotal () {\n    return {\n      [TOTAL_KEY]: this.state[BEFORE_TAX_TOTAL_KEY],\n      [DISCOUNT_KEY]: this.state[CHARGE_KEY][DISCOUNT_KEY],\n      [TAX_DETAIL_KEY]: this.state[TAX_DETAIL_KEY]\n    }\n  }\n\n  // Set absolute value for number\n  absolute (mainKey, secondaryKey) {\n    this.setState({\n      [mainKey]: update(this.state[mainKey], {\n        [secondaryKey]: { $set: absolutify(this.state[mainKey][secondaryKey]) }\n      })\n    })\n  }\n\n  // Campos principales\n  renderMainInfo () {\n    const { [CHARGE_KEY]: charge } = this.state\n    return (\n      <div className='columns'>\n        <div className='column'>\n          <div>\n            <div className='columns'>\n              <div className='column is-7'>\n                <label className='caption'>\n                  {LABELS.charge.productServiceCode} *\n                </label>\n                <div\n                  className={classNames('control has-info', {\n                    'select-required': !charge[PRODUCT_SERVICE_CODE_KEY]\n                  })}\n                >\n                  <Async\n                    value={charge[PRODUCT_SERVICE_CODE_KEY]}\n                    placeholder={LABELS.charge.productServiceCode}\n                    loadingPlaceholder='Buscando'\n                    searchPromptText='Teclear el nombre del producto'\n                    noResultsText='No encontrado'\n                    loadOptions={this.getProducts.bind(this)}\n                    onChange={this.onChangeProductType.bind(this)}\n                    onBlur={this.isValidProductType.bind(this)}\n                    ignoreAccents={false}\n                    clearable\n                    filterOptions={(options, filter, currentValues) => options}\n                    autoload\n                    cache={false}\n                  />\n                  <span className='icon info-icon'>\n                    <span className='tooltip'>\n                      Ingresa una palabra que ayude a identificar tu producto o\n                      servicio\n                    </span>\n                    <i className='mdi mdi-information-outline' />\n                  </span>\n                  <span\n                    className={classNames('help is-danger', {\n                      'is-hidden': this.state.isValid[PRODUCT_SERVICE_CODE_KEY]\n                    })}\n                  >\n                    Este campo es requerido\n                  </span>\n                </div>\n              </div>\n              <div className='column'>\n                <TextField\n                  label={LABELS.charge.identifyNum}\n                  value={charge[IDENTIFY_NUM_KEY]}\n                  placeholder={LABELS.charge.identifyNum}\n                  onChange={this.onChangeCharge.bind(this, IDENTIFY_NUM_KEY)}\n                  selectAllOnFocus\n                  info='Código asignado por el emisor (Opcional)'\n                />\n              </div>\n            </div>\n            <div className='columns'>\n              <div className='column is-2'>\n                <TextField\n                  label={LABELS.charge.quantity}\n                  className='is-money'\n                  placeholder={LABELS.charge.quantity}\n                  value={charge[AMOUNT_KEY]}\n                  onBlur={this.absolute.bind(this, CHARGE_KEY, AMOUNT_KEY)}\n                  onFocus={this.absolute.bind(this, CHARGE_KEY, AMOUNT_KEY)}\n                  onChange={this.onChangeCharge.bind(this, AMOUNT_KEY)}\n                  selectAllOnFocus\n                />\n              </div>\n              <div className='column is-3'>\n                <div className='control'>\n                  <label className='caption'>{LABELS.charge.units} *</label>\n                  <div\n                    className={classNames('control has-info', {\n                      'select-required': !charge[UNITY_KEY]\n                    })}\n                  >\n                    <Async\n                      placeholder={LABELS.charge.units}\n                      loadingPlaceholder='Buscando'\n                      searchPromptText='Teclear el nombre de la unidad'\n                      noResultsText='No encontrado'\n                      loadOptions={this.getUnits.bind(this)}\n                      value={charge[UNITY_KEY]}\n                      onChange={this.onChangeUnitType.bind(this)}\n                      onBlur={this.isValidUnitType.bind(this)}\n                      ignoreAccents={false}\n                      clearable\n                      filterOptions={(options, filter, currentValues) =>\n                        options\n                      }\n                      autoload\n                      cache={false}\n                    />\n                    <span className='icon info-icon'>\n                      <span className='tooltip'>\n                        Unidad de medida del producto o servicio\n                      </span>\n                      <i className='mdi mdi-information-outline' />\n                    </span>\n                    <span\n                      className={classNames('help is-danger', {\n                        'is-hidden': this.state.isValid[UNITY_KEY]\n                      })}\n                    >\n                      Este campo es requerido\n                    </span>\n                  </div>\n                </div>\n              </div>\n              <div className='column'>\n                <TextField\n                  label={LABELS.charge.description}\n                  name={LABELS.charge.description}\n                  placeholder={LABELS.charge.description}\n                  value={charge[DESCRIPTION_KEY]}\n                  onChange={this.onChangeCharge.bind(this, DESCRIPTION_KEY)}\n                  onValidationError={this.props.onValidationError}\n                  selectAllOnFocus\n                  required\n                  ref={r => requiredFields.add(r)}\n                  info='Concepto de la factura'\n                  maxLength='1000'\n                />\n              </div>\n              <div className='column is-2'>\n                <TextField\n                  label={LABELS.charge.pricePerUnit}\n                  className='is-money'\n                  placeholder={LABELS.charge.pricePerUnit}\n                  value={charge[PRICE_KEY]}\n                  onBlur={this.formatPrice.bind(this, PRICE_KEY)}\n                  onFocus={this.unformatPrice.bind(this, PRICE_KEY)}\n                  onChange={this.onChangeCharge.bind(this, PRICE_KEY)}\n                  selectAllOnFocus\n                />\n              </div>\n              <div className='column is-2'>\n                <TextField\n                  label={LABELS.charge.total}\n                  className='is-money'\n                  placeholder={LABELS.charge.total}\n                  value={accounting.formatMoney(charge[TOTAL_KEY], '$ ', 2)}\n                  disabled\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  // Impuestos\n  renderTax (chargeTax, taxKey, pos) {\n    const isQuote =\n      chargeTax[TAX_TAX_NAME_KEY] === '003' &&\n      chargeTax[TAX_FACTORY_TYPE_KEY] !== 'Cuota'\n\n    return (\n      <div key={`${taxKey}${pos}`}>\n        <div className='columns'>\n          <div className='column'>\n            <SelectField\n              label={LABELS.tax.name}\n              placeholder={LABELS.tax.name}\n              value={chargeTax[TAX_TAX_NAME_KEY]}\n              onChange={this.onChangeTax.bind(\n                this,\n                taxKey,\n                pos,\n                TAX_TAX_NAME_KEY\n              )}\n              options={TAXES}\n            />\n          </div>\n          <div className='column'>\n            <SelectField\n              placeholder={LABELS.tax.factoryType}\n              options={TAX_KIND}\n              label={LABELS.tax.factoryType}\n              value={chargeTax[TAX_FACTORY_TYPE_KEY]}\n              onChange={this.onChangeTax.bind(\n                this,\n                taxKey,\n                pos,\n                TAX_FACTORY_TYPE_KEY\n              )}\n            />\n          </div>\n          <div className='column'>\n            <label className='caption'>{LABELS.tax.rate}</label>\n            {isQuote ? (\n              <span className='select is-fullwidth'>\n                <select\n                  className='select'\n                  placeholder={TAX_RATE_KEY}\n                  value={chargeTax[TAX_RATE_KEY]}\n                  onChange={this.onChangeTax.bind(\n                    this,\n                    taxKey,\n                    pos,\n                    TAX_RATE_KEY\n                  )}\n                >\n                  {TAX_AMOUNTS['IEPS'].map((tax, index) => {\n                    if (tax.isRange) return\n                    return (\n                      <option\n                        key={index}\n                        value={(Number(tax.amount) * 100).toFixed(\n                          REQUIRED_DECIMALS\n                        )}\n                      >\n                        {(Number(tax.amount) * 100).toFixed(REQUIRED_DECIMALS)}{' '}\n                        %\n                      </option>\n                    )\n                  })}\n                </select>\n              </span>\n            ) : (\n              <TextField\n                className='is-money'\n                placeholder={TAX_RATE_KEY}\n                value={chargeTax[TAX_RATE_KEY]}\n                onChange={this.onChangeTax.bind(\n                  this,\n                  taxKey,\n                  pos,\n                  TAX_RATE_KEY\n                )}\n              />\n            )}\n          </div>\n          <div className='column'>\n            <TextField\n              label={LABELS.tax.amount}\n              className='is-money'\n              placeholder={TAX_AMOUNT_CENTS_KEY}\n              value={accounting.formatMoney(\n                chargeTax[TAX_AMOUNT_CENTS_KEY],\n                '$ ',\n                2\n              )}\n              disabled\n            />\n          </div>\n        </div>\n        <Button\n          buttonStyle='dangerLink'\n          icon='delete'\n          onClick={this.deleteTax.bind(this, taxKey, pos)}\n        >\n          Eliminar impuesto\n        </Button>\n        <hr />\n      </div>\n    )\n  }\n\n  // Render retained and transferred taxes\n  // Only render custom taxes if recipe is custom\n  // custom comes from catalog ENCONTA_INVOICE_CATEGORIES\n  renderAllTaxes () {\n    if (this.props.recipe !== 'other') return\n    const renderRetainedTaxes =\n      this.state[TAX_DETAIL_KEY][TAX_RETAINED_KEY].length > 0 ? (\n        <div>\n          {this.state[TAX_DETAIL_KEY][TAX_RETAINED_KEY].map((tax, i) =>\n            this.renderTax(tax, TAX_RETAINED_KEY, i)\n          )}\n        </div>\n      ) : null\n    const renderTransferredTaxes =\n      this.state[TAX_DETAIL_KEY][TAX_TRANSFERRED_KEY].length > 0 ? (\n        <div>\n          {this.state[TAX_DETAIL_KEY][TAX_TRANSFERRED_KEY].map((tax, i) =>\n            this.renderTax(tax, TAX_TRANSFERRED_KEY, i)\n          )}\n        </div>\n      ) : null\n    return (\n      <div style={{ padding: '0 3rem 0 0' }}>\n        <hr />\n        <div className='columns'>\n          <div className='column is-2'>\n            <div className='deleteIconButton'>\n              <span className='title'>Impuestos Retenidos</span>\n            </div>\n          </div>\n          <div className='column'>\n            {renderRetainedTaxes}\n            <div>\n              <Button\n                buttonStyle='primaryLink'\n                icon='plus'\n                onClick={this.addTax.bind(this, TAX_RETAINED_KEY)}\n              >\n                Agregar Impuesto Retenido\n              </Button>\n            </div>\n          </div>\n          <hr />\n        </div>\n        <hr />\n        <div className='columns'>\n          <div className='column is-2'>\n            <div className='deleteIconButton'>\n              <span className='title'>Impuestos Trasladados</span>\n            </div>\n          </div>\n          <div className='column'>\n            {renderTransferredTaxes}\n            <div>\n              <Button\n                buttonStyle='primaryLink'\n                icon='plus'\n                onClick={this.addTax.bind(this, TAX_TRANSFERRED_KEY)}\n              >\n                Agregar Impuesto Trasladado\n              </Button>\n            </div>\n          </div>\n        </div>\n        <hr\n          className={classNames({ 'is-hidden': !this.props.deletable })}\n          style={{ backgroundColor: 'white' }}\n        />\n      </div>\n    )\n  }\n\n  // Concepto\n  render () {\n    return (\n      <div className='new-invoice__concept'>\n        {this.renderMainInfo()}\n        {this.renderAllTaxes()}\n        <div className={classNames({ 'is-hidden': !this.props.deletable })}>\n          <Button\n            buttonStyle='dangerLink'\n            icon='delete'\n            onClick={() => {\n              requiredFields.clear()\n              this.props.deleteConcept(this.props.uuid)\n            }}\n          >\n            Eliminar concepto\n          </Button>\n        </div>\n        <br />\n        <div className='caption required'>* Campos obligatorios</div>\n      </div>\n    )\n  }\n}\n\nCharge.propTypes = {\n  onValidationError: PropTypes.func,\n  recipe: PropTypes.string,\n  getFrequentlyUsedProducts: PropTypes.func,\n  getFrequentlyUsedUnits: PropTypes.func,\n  deletable: PropTypes.bool,\n  uuid: PropTypes.string,\n  deleteConcept: PropTypes.func,\n  totalUpdated: PropTypes.func\n}\n\nCharge.defaultProps = {\n  onValidationError: () => {}\n}\n\nexport default Charge\n"]},"metadata":{},"sourceType":"module"}