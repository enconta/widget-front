{"ast":null,"code":"import _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport uuid from 'uuid';\nimport BaseStore from './baseStore';\n\nvar NotificationsStore =\n/*#__PURE__*/\nfunction (_BaseStore) {\n  _inherits(NotificationsStore, _BaseStore);\n\n  function NotificationsStore() {\n    var _this;\n\n    _classCallCheck(this, NotificationsStore);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NotificationsStore).call(this));\n    _this.notificationsQueue = [];\n    _this.actions = {\n      SEND_NOTIFICATION: function SEND_NOTIFICATION(action) {\n        _this.createNew(action);\n      },\n      HIDE_NOTIFICATION: function HIDE_NOTIFICATION(action) {\n        _this.removeNotification(action.data);\n      },\n      CLEAR_ALL_NOTIFICATIONS: function CLEAR_ALL_NOTIFICATIONS() {\n        _this.clearAll();\n      }\n    };\n    return _this;\n  } // Creates new notification depending on the type passed and pushes it into the queue\n  // Takes default values and overwrites them if params have been passed\n  // then emmits a change so the NofificationsContainer can listen and render the queue\n\n\n  _createClass(NotificationsStore, [{\n    key: \"createNew\",\n    value: function createNew(notification) {\n      var defaultNotification = {\n        id: uuid(),\n        type: 'info',\n        message: null,\n        timeOut: 5000\n      };\n      this.notificationsQueue.push(Object.assign({}, defaultNotification, notification.data));\n    } // Looks in the queue and returns a new array without the notification passed in the props\n    // then emmits a change so the NofificationsContainer can listen and render the queue\n\n  }, {\n    key: \"removeNotification\",\n    value: function removeNotification(notificationId) {\n      this.notificationsQueue = this.notificationsQueue.filter(function (n) {\n        return notificationId !== n.id;\n      });\n    }\n  }, {\n    key: \"getNotificationsQueue\",\n    value: function getNotificationsQueue() {\n      return this.notificationsQueue;\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this.notificationsQueue = [];\n    }\n  }]);\n\n  return NotificationsStore;\n}(BaseStore);\n\nexport default NotificationsStore.getInstance();","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/stores/notifications.js"],"names":["uuid","BaseStore","NotificationsStore","notificationsQueue","actions","SEND_NOTIFICATION","action","createNew","HIDE_NOTIFICATION","removeNotification","data","CLEAR_ALL_NOTIFICATIONS","clearAll","notification","defaultNotification","id","type","message","timeOut","push","Object","assign","notificationId","filter","n","getInstance"],"mappings":";;;;;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;;IAEMC,kB;;;;;AACJ,gCAAe;AAAA;;AAAA;;AACb;AACA,UAAKC,kBAAL,GAA0B,EAA1B;AAEA,UAAKC,OAAL,GAAe;AACbC,MAAAA,iBAAiB,EAAE,2BAAAC,MAAM,EAAI;AAC3B,cAAKC,SAAL,CAAeD,MAAf;AACD,OAHY;AAIbE,MAAAA,iBAAiB,EAAE,2BAAAF,MAAM,EAAI;AAC3B,cAAKG,kBAAL,CAAwBH,MAAM,CAACI,IAA/B;AACD,OANY;AAObC,MAAAA,uBAAuB,EAAE,mCAAM;AAC7B,cAAKC,QAAL;AACD;AATY,KAAf;AAJa;AAed,G,CAED;AACA;AACA;;;;;8BACWC,Y,EAAc;AACvB,UAAMC,mBAAmB,GAAG;AAC1BC,QAAAA,EAAE,EAAEf,IAAI,EADkB;AAE1BgB,QAAAA,IAAI,EAAE,MAFoB;AAG1BC,QAAAA,OAAO,EAAE,IAHiB;AAI1BC,QAAAA,OAAO,EAAE;AAJiB,OAA5B;AAMA,WAAKf,kBAAL,CAAwBgB,IAAxB,CACEC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,mBAAlB,EAAuCD,YAAY,CAACH,IAApD,CADF;AAGD,K,CAED;AACA;;;;uCACoBY,c,EAAgB;AAClC,WAAKnB,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBoB,MAAxB,CACxB,UAAAC,CAAC;AAAA,eAAIF,cAAc,KAAKE,CAAC,CAACT,EAAzB;AAAA,OADuB,CAA1B;AAGD;;;4CAEwB;AACvB,aAAO,KAAKZ,kBAAZ;AACD;;;+BAEW;AACV,WAAKA,kBAAL,GAA0B,EAA1B;AACD;;;;EA/C8BF,S;;AAkDjC,eAAeC,kBAAkB,CAACuB,WAAnB,EAAf","sourcesContent":["import uuid from 'uuid'\n\nimport BaseStore from './baseStore'\n\nclass NotificationsStore extends BaseStore {\n  constructor () {\n    super()\n    this.notificationsQueue = []\n\n    this.actions = {\n      SEND_NOTIFICATION: action => {\n        this.createNew(action)\n      },\n      HIDE_NOTIFICATION: action => {\n        this.removeNotification(action.data)\n      },\n      CLEAR_ALL_NOTIFICATIONS: () => {\n        this.clearAll()\n      }\n    }\n  }\n\n  // Creates new notification depending on the type passed and pushes it into the queue\n  // Takes default values and overwrites them if params have been passed\n  // then emmits a change so the NofificationsContainer can listen and render the queue\n  createNew (notification) {\n    const defaultNotification = {\n      id: uuid(),\n      type: 'info',\n      message: null,\n      timeOut: 5000\n    }\n    this.notificationsQueue.push(\n      Object.assign({}, defaultNotification, notification.data)\n    )\n  }\n\n  // Looks in the queue and returns a new array without the notification passed in the props\n  // then emmits a change so the NofificationsContainer can listen and render the queue\n  removeNotification (notificationId) {\n    this.notificationsQueue = this.notificationsQueue.filter(\n      n => notificationId !== n.id\n    )\n  }\n\n  getNotificationsQueue () {\n    return this.notificationsQueue\n  }\n\n  clearAll () {\n    this.notificationsQueue = []\n  }\n}\n\nexport default NotificationsStore.getInstance()\n"]},"metadata":{},"sourceType":"module"}