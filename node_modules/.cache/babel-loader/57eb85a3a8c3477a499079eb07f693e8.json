{"ast":null,"code":"import _defineProperty from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/facturas-enviadas/index.js\";\n// Libraries\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport accounting from 'accounting';\nimport { Link } from 'react-router';\nimport Paginator from 'shared/paginator';\nimport Datepicker from 'shared/datepicker';\nimport TextField from 'shared/textField';\nimport TableFilter from 'shared/tableFilter';\nimport Card from 'shared/card';\nimport { DATE_FORMAT, formatDateInvoice, prettyDate, resetScroll } from 'utils';\nimport SentEmailsActions from 'actions/facturasEnviadas';\nimport SentEmailsStore from 'stores/facturasEnviadas'; // Filter keys\n\nvar EMAIL_TO_KEY = 'to';\nvar START_DATE_KEY = 'start_date';\nvar END_DATE_KEY = 'end_date';\n\nfunction getCurrentState() {\n  var emailList = SentEmailsStore.getEmailList();\n  var totalPages = SentEmailsStore.getTotalPages();\n  var totalItems = SentEmailsStore.getTotalItems();\n  return {\n    emailList: emailList,\n    totalItems: totalItems,\n    totalPages: totalPages\n  };\n}\n\nvar FacturasEnviadas =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FacturasEnviadas, _Component);\n\n  function FacturasEnviadas(props) {\n    var _filters;\n\n    var _this;\n\n    _classCallCheck(this, FacturasEnviadas);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FacturasEnviadas).call(this, props));\n    _this.data = {\n      filters: (_filters = {}, _defineProperty(_filters, EMAIL_TO_KEY, ''), _defineProperty(_filters, START_DATE_KEY, moment('2014-01-01', DATE_FORMAT)), _defineProperty(_filters, END_DATE_KEY, moment()), _filters)\n    };\n    _this.state = Object.assign({}, _this.data, getCurrentState());\n    _this._onChange = _this._onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(FacturasEnviadas, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Adds listener, when the Store changes, trigger the _onChange callback func\n      SentEmailsStore.addChangeListener(this._onChange);\n      this.loadData();\n      resetScroll();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.location.search !== prevProps.location.search) {\n        this.loadData(this.props);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // Removes the listener to avoid memory leaks\n      SentEmailsStore.removeChangeListener(this._onChange);\n    }\n  }, {\n    key: \"_onChange\",\n    value: function _onChange() {\n      // When the store changes, the state goes to it and pulls the updated data\n      // then sets it so the component rerenders\n      var state = getCurrentState();\n      this.setState(state);\n    }\n  }, {\n    key: \"loadData\",\n    value: function loadData() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var params = Object.assign({}, props.location.query);\n      SentEmailsActions.getEmailList(params);\n      this.setState(function (prevState) {\n        return {\n          filters: Object.assign({}, prevState.filters, params)\n        };\n      });\n    } // Change filter values\n\n  }, {\n    key: \"onChangeFilter\",\n    value: function onChangeFilter(field, e) {\n      var filter = _defineProperty({}, field, e._isAMomentObject ? e : e.target.value);\n\n      this.setState(function (prevState) {\n        return {\n          filters: Object.assign({}, prevState.filters, filter)\n        };\n      });\n    }\n  }, {\n    key: \"prepareFilters\",\n    value: function prepareFilters(filters) {\n      var _Object$assign;\n\n      return Object.assign({}, filters, (_Object$assign = {}, _defineProperty(_Object$assign, START_DATE_KEY, formatDateInvoice(filters[START_DATE_KEY])), _defineProperty(_Object$assign, END_DATE_KEY, formatDateInvoice(filters[END_DATE_KEY])), _Object$assign));\n    }\n  }, {\n    key: \"clearFilters\",\n    value: function clearFilters() {\n      this.setState({\n        filters: this.data.filters\n      });\n    } // Render single email in list\n\n  }, {\n    key: \"renderEmail\",\n    value: function renderEmail(email) {\n      var id = email.id,\n          to = email.to,\n          message = email.message,\n          createdAt = email.created_at;\n      return React.createElement(\"tr\", {\n        key: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        className: \"align-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/emails/ver/\".concat(id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, to)), React.createElement(\"td\", {\n        className: \"flexCell align-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, message), React.createElement(\"td\", {\n        className: \"align-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, prettyDate(createdAt, DATE_FORMAT, true, true, '/')));\n    } // Render table with sent emails\n\n  }, {\n    key: \"renderEmails\",\n    value: function renderEmails() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          emailList = _this$state.emailList,\n          totalPages = _this$state.totalPages;\n      var location = this.props.location;\n      return emailList.length > 0 ? React.createElement(\"div\", {\n        className: \"is-fullwidth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        className: \"align-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Para\"), React.createElement(\"th\", {\n        className: \"align-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Mensaje\"), React.createElement(\"th\", {\n        className: \"align-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Fecha de env\\xEDo\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, emailList.map(function (email) {\n        return _this2.renderEmail(email);\n      }))), React.createElement(Paginator, {\n        totalPages: totalPages,\n        location: location,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      })) : React.createElement(\"div\", {\n        className: \"block unselectable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"No hay correos\"));\n    } // Render a wrapper for the filters element\n\n  }, {\n    key: \"renderFilters\",\n    value: function renderFilters() {\n      var filters = this.state.filters;\n      return React.createElement(TableFilter, {\n        baseUrl: \"/emails\",\n        filters: filters,\n        prepareFilters: this.prepareFilters.bind(this),\n        onClearFilters: this.clearFilters.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        value: this.state.filters[EMAIL_TO_KEY],\n        label: \"Enviado a\",\n        placeholder: \"correo@ejemplo.com\",\n        onChange: this.onChangeFilter.bind(this, EMAIL_TO_KEY),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), React.createElement(Datepicker, {\n        value: this.state.filters[START_DATE_KEY],\n        label: \"Fecha inicial\",\n        placeholder: \"Fecha inicial\",\n        onChange: this.onChangeFilter.bind(this, START_DATE_KEY),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(Datepicker, {\n        value: this.state.filters[END_DATE_KEY],\n        label: \"Fecha final\",\n        placeholder: \"Fecha final\",\n        onChange: this.onChangeFilter.bind(this, END_DATE_KEY),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }));\n    } // Main render\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"headline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"Facturas Enviadas\"), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, this.renderFilters(), React.createElement(\"div\", {\n        className: \"caption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, accounting.formatNumber(this.state.totalItems), \" correos visibles\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), this.renderEmails()));\n    }\n  }]);\n\n  return FacturasEnviadas;\n}(Component);\n\nFacturasEnviadas.propTypes = {\n  location: PropTypes.object\n};\nexport default FacturasEnviadas;","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/facturas-enviadas/index.js"],"names":["React","Component","PropTypes","moment","accounting","Link","Paginator","Datepicker","TextField","TableFilter","Card","DATE_FORMAT","formatDateInvoice","prettyDate","resetScroll","SentEmailsActions","SentEmailsStore","EMAIL_TO_KEY","START_DATE_KEY","END_DATE_KEY","getCurrentState","emailList","getEmailList","totalPages","getTotalPages","totalItems","getTotalItems","FacturasEnviadas","props","data","filters","state","Object","assign","_onChange","bind","addChangeListener","loadData","prevProps","location","search","removeChangeListener","setState","params","query","prevState","field","e","filter","_isAMomentObject","target","value","email","id","to","message","createdAt","created_at","length","map","renderEmail","prepareFilters","clearFilters","onChangeFilter","renderFilters","formatNumber","renderEmails","propTypes","object"],"mappings":"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","sourcesContent":["// Libraries\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport moment from 'moment'\nimport accounting from 'accounting'\nimport { Link } from 'react-router'\n\nimport Paginator from 'shared/paginator'\nimport Datepicker from 'shared/datepicker'\nimport TextField from 'shared/textField'\nimport TableFilter from 'shared/tableFilter'\nimport Card from 'shared/card'\nimport { DATE_FORMAT, formatDateInvoice, prettyDate, resetScroll } from 'utils'\n\nimport SentEmailsActions from 'actions/facturasEnviadas'\n\nimport SentEmailsStore from 'stores/facturasEnviadas'\n\n// Filter keys\nconst EMAIL_TO_KEY = 'to'\nconst START_DATE_KEY = 'start_date'\nconst END_DATE_KEY = 'end_date'\n\nfunction getCurrentState () {\n  let emailList = SentEmailsStore.getEmailList()\n  let totalPages = SentEmailsStore.getTotalPages()\n  let totalItems = SentEmailsStore.getTotalItems()\n  return {\n    emailList,\n    totalItems,\n    totalPages\n  }\n}\n\nclass FacturasEnviadas extends Component {\n  constructor (props) {\n    super(props)\n    this.data = {\n      filters: {\n        [EMAIL_TO_KEY]: '',\n        [START_DATE_KEY]: moment('2014-01-01', DATE_FORMAT),\n        [END_DATE_KEY]: moment()\n      }\n    }\n    this.state = Object.assign({}, this.data, getCurrentState())\n    this._onChange = this._onChange.bind(this)\n  }\n\n  componentDidMount () {\n    // Adds listener, when the Store changes, trigger the _onChange callback func\n    SentEmailsStore.addChangeListener(this._onChange)\n    this.loadData()\n    resetScroll()\n  }\n\n  componentDidUpdate (prevProps) {\n    if (this.props.location.search !== prevProps.location.search) {\n      this.loadData(this.props)\n    }\n  }\n\n  componentWillUnmount () {\n    // Removes the listener to avoid memory leaks\n    SentEmailsStore.removeChangeListener(this._onChange)\n  }\n\n  _onChange () {\n    // When the store changes, the state goes to it and pulls the updated data\n    // then sets it so the component rerenders\n    let state = getCurrentState()\n    this.setState(state)\n  }\n\n  loadData (props = this.props) {\n    const params = Object.assign({}, props.location.query)\n    SentEmailsActions.getEmailList(params)\n    this.setState(prevState => ({\n      filters: Object.assign({}, prevState.filters, params)\n    }))\n  }\n\n  // Change filter values\n  onChangeFilter (field, e) {\n    const filter = { [field]: e._isAMomentObject ? e : e.target.value }\n    this.setState(prevState => ({\n      filters: Object.assign({}, prevState.filters, filter)\n    }))\n  }\n\n  prepareFilters (filters) {\n    return Object.assign({}, filters, {\n      [START_DATE_KEY]: formatDateInvoice(filters[START_DATE_KEY]),\n      [END_DATE_KEY]: formatDateInvoice(filters[END_DATE_KEY])\n    })\n  }\n\n  clearFilters () {\n    this.setState({ filters: this.data.filters })\n  }\n\n  // Render single email in list\n  renderEmail (email) {\n    const { id, to, message, created_at: createdAt } = email\n    return (\n      <tr key={id}>\n        <td className='align-left'>\n          <Link to={`/emails/ver/${id}`}>{to}</Link>\n        </td>\n        <td className='flexCell align-left'>{message}</td>\n        <td className='align-right'>\n          {prettyDate(createdAt, DATE_FORMAT, true, true, '/')}\n        </td>\n      </tr>\n    )\n  }\n\n  // Render table with sent emails\n  renderEmails () {\n    const { emailList, totalPages } = this.state\n    const { location } = this.props\n    return emailList.length > 0 ? (\n      <div className='is-fullwidth'>\n        <table className='table'>\n          <thead>\n            <tr>\n              <th className='align-left'>Para</th>\n              <th className='align-left'>Mensaje</th>\n              <th className='align-right'>Fecha de envío</th>\n            </tr>\n          </thead>\n          <tbody>{emailList.map(email => this.renderEmail(email))}</tbody>\n        </table>\n        <Paginator totalPages={totalPages} location={location} />\n      </div>\n    ) : (\n      <div className='block unselectable'>\n        <p>No hay correos</p>\n      </div>\n    )\n  }\n\n  // Render a wrapper for the filters element\n  renderFilters () {\n    const { filters } = this.state\n    return (\n      <TableFilter\n        baseUrl='/emails'\n        filters={filters}\n        prepareFilters={this.prepareFilters.bind(this)}\n        onClearFilters={this.clearFilters.bind(this)}\n      >\n        <TextField\n          value={this.state.filters[EMAIL_TO_KEY]}\n          label='Enviado a'\n          placeholder='correo@ejemplo.com'\n          onChange={this.onChangeFilter.bind(this, EMAIL_TO_KEY)}\n        />\n        <Datepicker\n          value={this.state.filters[START_DATE_KEY]}\n          label='Fecha inicial'\n          placeholder='Fecha inicial'\n          onChange={this.onChangeFilter.bind(this, START_DATE_KEY)}\n        />\n        <Datepicker\n          value={this.state.filters[END_DATE_KEY]}\n          label='Fecha final'\n          placeholder='Fecha final'\n          onChange={this.onChangeFilter.bind(this, END_DATE_KEY)}\n        />\n      </TableFilter>\n    )\n  }\n\n  // Main render\n  render () {\n    return (\n      <div>\n        <h1 className='headline'>Facturas Enviadas</h1>\n        <Card>\n          {this.renderFilters()}\n          <div className='caption'>\n            {accounting.formatNumber(this.state.totalItems)} correos visibles\n          </div>\n          <br />\n          {this.renderEmails()}\n        </Card>\n      </div>\n    )\n  }\n}\n\nFacturasEnviadas.propTypes = {\n  location: PropTypes.object\n}\n\nexport default FacturasEnviadas\n"]},"metadata":{},"sourceType":"module"}