{"ast":null,"code":"var _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/shared/checkbox/index.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport _kebabCase from 'lodash/kebabCase';\n\nvar Checkbox = function Checkbox(props) {\n  var name = props.name,\n      onChange = props.onChange,\n      selected = props.selected,\n      disabled = props.disabled;\n  var randomNumber = Math.floor(Math.random() * 100).toString();\n\n  var kebabName = _kebabCase(name);\n\n  var id = \"\".concat(kebabName).concat(randomNumber);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    value: name,\n    id: id,\n    onChange: onChange,\n    checked: selected,\n    className: \"checkbox-button__styled-checkbox\",\n    disabled: disabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"checkbox-button__checkmark\",\n    htmlFor: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, ' '));\n};\n\nexport default Checkbox;\nCheckbox.propTypes = {\n  name: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  onChange: PropTypes.func.isRequired,\n  disabled: PropTypes.bool\n};\nCheckbox.defaultProps = {\n  name: '',\n  selected: false,\n  onChange: function onChange() {},\n  disabled: false\n};","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/shared/checkbox/index.js"],"names":["React","Fragment","PropTypes","_kebabCase","Checkbox","props","name","onChange","selected","disabled","randomNumber","Math","floor","random","toString","kebabName","id","propTypes","string","isRequired","bool","func","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AAAA,MAChBC,IADgB,GACuBD,KADvB,CAChBC,IADgB;AAAA,MACVC,QADU,GACuBF,KADvB,CACVE,QADU;AAAA,MACAC,QADA,GACuBH,KADvB,CACAG,QADA;AAAA,MACUC,QADV,GACuBJ,KADvB,CACUI,QADV;AAExB,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,EAAgCC,QAAhC,EAArB;;AACA,MAAMC,SAAS,GAAGZ,UAAU,CAACG,IAAD,CAA5B;;AACA,MAAMU,EAAE,aAAMD,SAAN,SAAkBL,YAAlB,CAAR;AAEA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,KAAK,EAAEJ,IAFT;AAGE,IAAA,EAAE,EAAEU,EAHN;AAIE,IAAA,QAAQ,EAAET,QAJZ;AAKE,IAAA,OAAO,EAAEC,QALX;AAME,IAAA,SAAS,EAAC,kCANZ;AAOE,IAAA,QAAQ,EAAEC,QAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAUE;AAAO,IAAA,SAAS,EAAC,4BAAjB;AAA8C,IAAA,OAAO,EAAEO,EAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,CAVF,CADF;AAgBD,CAtBD;;AAwBA,eAAeZ,QAAf;AAEAA,QAAQ,CAACa,SAAT,GAAqB;AACnBX,EAAAA,IAAI,EAAEJ,SAAS,CAACgB,MAAV,CAAiBC,UADJ;AAEnBX,EAAAA,QAAQ,EAAEN,SAAS,CAACkB,IAAV,CAAeD,UAFN;AAGnBZ,EAAAA,QAAQ,EAAEL,SAAS,CAACmB,IAAV,CAAeF,UAHN;AAInBV,EAAAA,QAAQ,EAAEP,SAAS,CAACkB;AAJD,CAArB;AAOAhB,QAAQ,CAACkB,YAAT,GAAwB;AACtBhB,EAAAA,IAAI,EAAE,EADgB;AAEtBE,EAAAA,QAAQ,EAAE,KAFY;AAGtBD,EAAAA,QAAQ,EAAE,oBAAM,CAAE,CAHI;AAItBE,EAAAA,QAAQ,EAAE;AAJY,CAAxB","sourcesContent":["import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport _kebabCase from 'lodash/kebabCase'\n\nconst Checkbox = props => {\n  const { name, onChange, selected, disabled } = props\n  const randomNumber = Math.floor(Math.random() * 100).toString()\n  const kebabName = _kebabCase(name)\n  const id = `${kebabName}${randomNumber}`\n\n  return (\n    <Fragment>\n      <input\n        type='checkbox'\n        value={name}\n        id={id}\n        onChange={onChange}\n        checked={selected}\n        className='checkbox-button__styled-checkbox'\n        disabled={disabled}\n      />\n      <label className='checkbox-button__checkmark' htmlFor={id}>\n        {' '}\n      </label>\n    </Fragment>\n  )\n}\n\nexport default Checkbox\n\nCheckbox.propTypes = {\n  name: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  onChange: PropTypes.func.isRequired,\n  disabled: PropTypes.bool\n}\n\nCheckbox.defaultProps = {\n  name: '',\n  selected: false,\n  onChange: () => {},\n  disabled: false\n}\n"]},"metadata":{},"sourceType":"module"}