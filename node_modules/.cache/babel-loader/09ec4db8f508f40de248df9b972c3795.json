{"ast":null,"code":"import _defineProperty from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/facturacion-masiva/detalle/index.js\";\n// Libraries\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport accounting from 'accounting';\nimport { browserHistory, Link } from 'react-router';\nimport AppSignal from 'appsignal'; // Components\n\nimport Button from 'shared/button';\nimport API from 'api';\nimport Card from 'shared/card';\nimport NotificationsActions from 'actions/notifications';\nimport { INVOICING_STATUS } from 'shared/catalogs'; // Children\n\nimport Sales from './../regular';\nimport SalesThirdParty from './../a-terceros'; // Keys\n\nvar INVOICES_COUNT_KEY = 'invoicesCount';\nvar INVOICES_KEY = 'invoice_import';\nvar INVOICES_STAMPING_FUNCTIONS = [{\n  id: 'regular',\n  function: API.MultipleInvoicing.StampRegular\n}, {\n  id: 'a_terceros',\n  function: API.MultipleInvoicing.StampThirdParty\n}]; // Count invalid invoices, an invoice is invalid if it has the top-level property invalid set to true\n\nvar countValidInvoices = function countValidInvoices(invoices) {\n  var invalidInvoices = invoices.filter(function (i) {\n    return i.invalid;\n  }).length;\n  return {\n    valid: invoices.length - invalidInvoices,\n    invalid: invalidInvoices\n  };\n};\n\nvar MultipleInvoicingProcess =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MultipleInvoicingProcess, _Component);\n\n  function MultipleInvoicingProcess(props) {\n    var _this$data;\n\n    var _this;\n\n    _classCallCheck(this, MultipleInvoicingProcess);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultipleInvoicingProcess).call(this, props));\n    _this.data = (_this$data = {}, _defineProperty(_this$data, INVOICES_COUNT_KEY, 0), _defineProperty(_this$data, INVOICES_KEY, []), _defineProperty(_this$data, \"invoicingStatus\", 'processing'), _this$data);\n    _this.state = Object.assign({}, _this.data);\n    return _this;\n  } // Load data on component mount\n\n\n  _createClass(MultipleInvoicingProcess, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadData();\n    } // Download process info\n\n  }, {\n    key: \"loadData\",\n    value: function loadData() {\n      var _this2 = this;\n\n      API.MultipleInvoicing.Show(this.props.params.id).then(function (r) {\n        var _this2$setState;\n\n        var invoices = typeof r[INVOICES_KEY] === 'string' ? JSON.parse(r[INVOICES_KEY]) : r[INVOICES_KEY];\n\n        _this2.setState((_this2$setState = {}, _defineProperty(_this2$setState, INVOICES_KEY, invoices || []), _defineProperty(_this2$setState, \"invoicingStatus\", r.status), _this2$setState));\n      }).catch(function (error) {\n        AppSignal.sendError(error);\n        NotificationsActions.error(error);\n      });\n    } // Call the stamping endpoint for this batch of invoices\n\n  }, {\n    key: \"stampInvoices\",\n    value: function stampInvoices() {\n      var _this3 = this;\n\n      INVOICES_STAMPING_FUNCTIONS.find(function (request) {\n        return request.id === _this3.props.params['tab'];\n      }).function(this.props.params.id).then(function (r) {\n        NotificationsActions.success('Las facturas se estÃ¡n emitiendo');\n        browserHistory.push('/facturacion_masiva');\n      }).catch(function (error) {\n        AppSignal.sendError(error);\n        NotificationsActions.error(error);\n      });\n    } // Render every invoice\n\n  }, {\n    key: \"renderTable\",\n    value: function renderTable(validInvoiceCount, tab) {\n      var tableContent = null;\n\n      switch (tab) {\n        case 'regular':\n          tableContent = React.createElement(Sales, {\n            invoices: this.state[INVOICES_KEY],\n            validInvoiceCount: validInvoiceCount,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          });\n          break;\n\n        case 'a_terceros':\n          tableContent = React.createElement(SalesThirdParty, {\n            invoices: this.state[INVOICES_KEY],\n            validInvoiceCount: validInvoiceCount,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101\n            },\n            __self: this\n          });\n          break;\n      }\n\n      return this.state[INVOICES_KEY].length > 0 ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Button, {\n        icon: \"file-send\",\n        buttonStyle: \"primary\",\n        onClick: this.stampInvoices.bind(this),\n        disabled: this.state.invoicingStatus !== 'ready_to_stamp' || validInvoiceCount === 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Facturar\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), tableContent) : null;\n    } // Main render\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _countValidInvoices = countValidInvoices(this.state[INVOICES_KEY]),\n          valid = _countValidInvoices.valid,\n          invalid = _countValidInvoices.invalid;\n\n      var tab = this.props.params.tab;\n      var validPlural = valid !== 1 ? 's' : null;\n      var invalidPlural = invalid !== 1 ? 's' : null;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"flex-between\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"headline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Detalle del proceso\"), React.createElement(\"div\", {\n        className: \"flex-column flex-end\",\n        style: {\n          display: 'inline-block'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/facturacion_masiva/\".concat(tab),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(Button, {\n        icon: \"arrow-left\",\n        buttonStyle: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Regresar\")))), React.createElement(Card, {\n        className: \"is-fullheight flex-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"block unselectable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Estado de la facturaci\\xF3n:\", ' ', INVOICING_STATUS[this.state.invoicingStatus]))), this.renderTable(valid, tab), React.createElement(\"div\", {\n        className: \"caption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, accounting.formatNumber(valid), \" factura\", validPlural, \" v\\xE1lida\", validPlural), React.createElement(\"div\", {\n        className: \"caption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, accounting.formatNumber(invalid), \" factura\", invalidPlural, \" inv\\xE1lida\", invalidPlural)));\n    }\n  }]);\n\n  return MultipleInvoicingProcess;\n}(Component);\n\nMultipleInvoicingProcess.propTypes = {\n  params: PropTypes.shape({\n    id: PropTypes.string,\n    tab: PropTypes.number\n  })\n};\nexport default MultipleInvoicingProcess;","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/facturacion-masiva/detalle/index.js"],"names":["React","Component","PropTypes","accounting","browserHistory","Link","AppSignal","Button","API","Card","NotificationsActions","INVOICING_STATUS","Sales","SalesThirdParty","INVOICES_COUNT_KEY","INVOICES_KEY","INVOICES_STAMPING_FUNCTIONS","id","function","MultipleInvoicing","StampRegular","StampThirdParty","countValidInvoices","invoices","invalidInvoices","filter","i","invalid","length","valid","MultipleInvoicingProcess","props","data","state","Object","assign","loadData","Show","params","then","r","JSON","parse","setState","status","catch","error","sendError","find","request","success","push","validInvoiceCount","tab","tableContent","stampInvoices","bind","invoicingStatus","validPlural","invalidPlural","display","renderTable","formatNumber","propTypes","shape","string","number"],"mappings":"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","sourcesContent":["// Libraries\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport accounting from 'accounting'\nimport { browserHistory, Link } from 'react-router'\nimport AppSignal from 'appsignal'\n\n// Components\nimport Button from 'shared/button'\nimport API from 'api'\nimport Card from 'shared/card'\nimport NotificationsActions from 'actions/notifications'\nimport { INVOICING_STATUS } from 'shared/catalogs'\n\n// Children\nimport Sales from './../regular'\nimport SalesThirdParty from './../a-terceros'\n\n// Keys\nconst INVOICES_COUNT_KEY = 'invoicesCount'\nconst INVOICES_KEY = 'invoice_import'\nconst INVOICES_STAMPING_FUNCTIONS = [\n  { id: 'regular', function: API.MultipleInvoicing.StampRegular },\n  { id: 'a_terceros', function: API.MultipleInvoicing.StampThirdParty }\n]\n\n// Count invalid invoices, an invoice is invalid if it has the top-level property invalid set to true\nconst countValidInvoices = invoices => {\n  let invalidInvoices = invoices.filter(i => i.invalid).length\n  return {\n    valid: invoices.length - invalidInvoices,\n    invalid: invalidInvoices\n  }\n}\n\nclass MultipleInvoicingProcess extends Component {\n  constructor (props) {\n    super(props)\n    this.data = {\n      [INVOICES_COUNT_KEY]: 0,\n      [INVOICES_KEY]: [],\n      invoicingStatus: 'processing'\n    }\n    this.state = Object.assign({}, this.data)\n  }\n\n  // Load data on component mount\n  componentDidMount () {\n    this.loadData()\n  }\n\n  // Download process info\n  loadData () {\n    API.MultipleInvoicing.Show(this.props.params.id)\n      .then(r => {\n        const invoices =\n          typeof r[INVOICES_KEY] === 'string'\n            ? JSON.parse(r[INVOICES_KEY])\n            : r[INVOICES_KEY]\n        this.setState({\n          [INVOICES_KEY]: invoices || [],\n          invoicingStatus: r.status\n        })\n      })\n      .catch(error => {\n        AppSignal.sendError(error)\n        NotificationsActions.error(error)\n      })\n  }\n\n  // Call the stamping endpoint for this batch of invoices\n  stampInvoices () {\n    INVOICES_STAMPING_FUNCTIONS.find(\n      request => request.id === this.props.params['tab']\n    )\n      .function(this.props.params.id)\n      .then(r => {\n        NotificationsActions.success('Las facturas se estÃ¡n emitiendo')\n        browserHistory.push('/facturacion_masiva')\n      })\n      .catch(error => {\n        AppSignal.sendError(error)\n        NotificationsActions.error(error)\n      })\n  }\n\n  // Render every invoice\n  renderTable (validInvoiceCount, tab) {\n    let tableContent = null\n    switch (tab) {\n      case 'regular':\n        tableContent = (\n          <Sales\n            invoices={this.state[INVOICES_KEY]}\n            validInvoiceCount={validInvoiceCount}\n          />\n        )\n        break\n      case 'a_terceros':\n        tableContent = (\n          <SalesThirdParty\n            invoices={this.state[INVOICES_KEY]}\n            validInvoiceCount={validInvoiceCount}\n          />\n        )\n        break\n    }\n    return this.state[INVOICES_KEY].length > 0 ? (\n      <div>\n        <Button\n          icon='file-send'\n          buttonStyle='primary'\n          onClick={this.stampInvoices.bind(this)}\n          disabled={\n            this.state.invoicingStatus !== 'ready_to_stamp' ||\n            validInvoiceCount === 0\n          }\n        >\n          Facturar\n        </Button>\n        <br />\n        <br />\n        {tableContent}\n      </div>\n    ) : null\n  }\n\n  // Main render\n  render () {\n    let { valid, invalid } = countValidInvoices(this.state[INVOICES_KEY])\n    let { tab } = this.props.params\n    let validPlural = valid !== 1 ? 's' : null\n    let invalidPlural = invalid !== 1 ? 's' : null\n    return (\n      <div>\n        <div className='flex-between'>\n          <h1 className='headline'>Detalle del proceso</h1>\n          <div\n            className='flex-column flex-end'\n            style={{ display: 'inline-block' }}\n          >\n            <Link to={`/facturacion_masiva/${tab}`}>\n              <Button icon='arrow-left' buttonStyle='white'>\n                Regresar\n              </Button>\n            </Link>\n          </div>\n        </div>\n        <Card className='is-fullheight flex-column'>\n          <div className='content'>\n            <div className='block unselectable'>\n              <p>\n                Estado de la facturaciÃ³n:{' '}\n                {INVOICING_STATUS[this.state.invoicingStatus]}\n              </p>\n            </div>\n          </div>\n          {this.renderTable(valid, tab)}\n          <div className='caption'>\n            {accounting.formatNumber(valid)} factura\n            {validPlural} vÃ¡lida\n            {validPlural}\n          </div>\n          <div className='caption'>\n            {accounting.formatNumber(invalid)} factura\n            {invalidPlural} invÃ¡lida\n            {invalidPlural}\n          </div>\n        </Card>\n      </div>\n    )\n  }\n}\n\nMultipleInvoicingProcess.propTypes = {\n  params: PropTypes.shape({\n    id: PropTypes.string,\n    tab: PropTypes.number\n  })\n}\n\nexport default MultipleInvoicingProcess\n"]},"metadata":{},"sourceType":"module"}