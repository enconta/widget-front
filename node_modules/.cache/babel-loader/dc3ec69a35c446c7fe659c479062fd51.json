{"ast":null,"code":"import _toConsumableArray from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/viewInvoice/mailerModal/index.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport accounting from 'accounting';\nimport { Creatable } from 'react-select';\nimport SessionStore from 'stores/session';\nimport classNames from 'classnames';\nimport { browserHistory } from 'react-router';\nimport AppSignal from 'appsignal';\nimport NotificationsActions from 'actions/notifications';\nimport Modal from 'shared/modal';\nimport TextField from 'shared/textField';\nimport { prettyDate } from 'utils';\nimport InvoicesActions from 'actions/invoices';\nvar requiredFields = new Set();\nvar REPLY_KEY = 'reply_to';\n\nvar MailerModal =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MailerModal, _Component);\n\n  function MailerModal() {\n    var _this$data;\n\n    var _this;\n\n    _classCallCheck(this, MailerModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MailerModal).call(this));\n\n    _this.sendInvoice = function () {\n      var _email;\n\n      var id = _this.props.invoice.id;\n      var _this$state = _this.state,\n          from = _this$state.from,\n          to = _this$state.to,\n          replyTo = _this$state[REPLY_KEY],\n          message = _this$state.message,\n          attachments = _this$state.attachments;\n      var data = {\n        email: (_email = {\n          from: from\n        }, _defineProperty(_email, REPLY_KEY, replyTo), _defineProperty(_email, \"message\", message), _defineProperty(_email, \"attachments\", attachments), _defineProperty(_email, \"to\", to.reduce(function (acc, curr) {\n          return \"\".concat(acc).concat(acc ? ', ' : '').concat(curr.value);\n        }, '')), _email)\n      };\n\n      if (_this.validateAll()) {\n        InvoicesActions.sendEmail(id, data).then(function (r) {\n          NotificationsActions.success('La factura ha sido enviada correctamente');\n\n          if (_this.props.redirectOnSubmit) {\n            browserHistory.push(\"/facturas/ver/\".concat(_this.props.invoice.id));\n          } else {\n            _this.props.toggleModal();\n          }\n        }).catch(function (error) {\n          AppSignal.sendError(error);\n          NotificationsActions.error(error);\n        });\n      } else {\n        NotificationsActions.error('Es necesario llenar todos los campos requeridos.');\n      }\n    };\n\n    _this.data = (_this$data = {\n      from: SessionStore.getCurrentEntity().email,\n      to: []\n    }, _defineProperty(_this$data, REPLY_KEY, SessionStore.getCurrentEntity().email), _defineProperty(_this$data, \"message\", ''), _defineProperty(_this$data, \"attachments\", {\n      pdf: true,\n      xml: true\n    }), _defineProperty(_this$data, \"isValid\", {\n      to: true,\n      message: true\n    }), _this$data);\n    _this.state = Object.assign({}, _this.data);\n    return _this;\n  }\n\n  _createClass(MailerModal, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // Clears the stored requiredFields\n      requiredFields.clear();\n    } // Iterates over required fields and validates every one of them\n    // Then it returns true if all validations succeedeed, else false.\n\n  }, {\n    key: \"validateAll\",\n    value: function validateAll() {\n      var _this2 = this;\n\n      return this.isValidTo() && _toConsumableArray(requiredFields) // Converts the Set() into an array\n      .filter(Boolean) // Filters the array from any falsy value\n      .map(function (form) {\n        return form.validate.call(_this2);\n      }) // Calls the validate() method on each form\n      .every(function (e) {\n        return e;\n      }) // Checks if all validations suceeded\n      ;\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(field, e) {\n      var _this3 = this;\n\n      this.setState(_defineProperty({}, field, e.target.value), function () {\n        if (field === 'message') _this3.isValidMessage();\n      });\n    }\n  }, {\n    key: \"onChangeTo\",\n    value: function onChangeTo(value) {\n      this.setState({\n        to: value\n      }, this.isValidTo);\n    }\n  }, {\n    key: \"isValidTo\",\n    value: function isValidTo() {\n      this.setState(function (prevState) {\n        return {\n          isValid: Object.assign({}, prevState.isValid, {\n            to: prevState.to.length > 0\n          })\n        };\n      });\n      return this.state.to.length > 0;\n    }\n  }, {\n    key: \"isValidMessage\",\n    value: function isValidMessage() {\n      this.setState(function (prevState) {\n        return {\n          isValid: Object.assign({}, prevState.isValid, {\n            message: prevState.message.length > 0\n          })\n        };\n      });\n      return this.state.message.length > 0;\n    }\n  }, {\n    key: \"onToggleAttachments\",\n    value: function onToggleAttachments(file) {\n      this.setState(function (prevState) {\n        return {\n          attachments: Object.assign({}, prevState.attachments, _defineProperty({}, file, !prevState.attachments[file]))\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$props = this.props,\n          isActive = _this$props.isActive,\n          toggleModal = _this$props.toggleModal,\n          invoice = _this$props.invoice;\n      var _this$state2 = this.state,\n          from = _this$state2.from,\n          to = _this$state2.to,\n          replyTo = _this$state2[REPLY_KEY],\n          message = _this$state2.message,\n          attachments = _this$state2.attachments,\n          isValid = _this$state2.isValid;\n      return React.createElement(Modal, {\n        title: \"Enviar por Correo\",\n        isActive: isActive,\n        toggleModal: toggleModal,\n        onSubmit: function onSubmit() {\n          return _this4.sendInvoice();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: function onSubmit() {\n          return _this4.sendInvoice();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"columns is-multiline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column is-12 flex-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"subtitle-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Emisor: \", invoice.issuer ? invoice.issuer.name : ''), React.createElement(\"span\", {\n        className: \"subtitle-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Receptor: \", invoice.recipient ? invoice.recipient.name : ''), React.createElement(\"span\", {\n        className: \"body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Folio: \", invoice.folio), React.createElement(\"span\", {\n        className: \"body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Fecha de emisi\\xF3n: \", prettyDate(invoice.issue_date)), React.createElement(\"span\", {\n        className: \"body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"Total: \", accounting.formatMoney(invoice.total_cents / 100, '$ '))), React.createElement(\"div\", {\n        className: \"column is-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"De\",\n        type: \"email\",\n        value: from,\n        onChange: this.onChange.bind(this, 'from'),\n        required: true,\n        ref: function ref(r) {\n          return requiredFields.add(r);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"column is-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"caption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Para *\"), React.createElement(Creatable, {\n        multi: true,\n        placeholder: \"\",\n        searchPromptText: \"Ingrese los correos electr\\xF3nicos\",\n        noResultsText: \"Ingrese los correos electr\\xF3nicos\",\n        value: to,\n        options: [],\n        onChange: this.onChangeTo.bind(this),\n        onBlur: this.isValidTo.bind(this),\n        promptTextCreator: function promptTextCreator(label) {\n          return \"A\\xF1adir correo \\\"\".concat(label, \"\\\"\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: classNames('help is-danger', {\n          'is-hidden': isValid.to\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"Este campo es requerido\")), React.createElement(\"div\", {\n        className: \"column is-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"Responder a\",\n        type: \"email\",\n        value: replyTo,\n        onChange: this.onChange.bind(this, REPLY_KEY),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"column is-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"caption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"Mensaje *\"), React.createElement(\"textarea\", {\n        className: classNames('textarea', {\n          'is-danger': !isValid.message\n        }),\n        value: message,\n        onChange: this.onChange.bind(this, 'message'),\n        onBlur: this.isValidMessage.bind(this),\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: classNames('help is-danger', {\n          'is-hidden': isValid.message\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"Este campo es requerido\")), React.createElement(\"div\", {\n        className: \"column is-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"caption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \"Archivos adjuntos\"), React.createElement(\"div\", {\n        className: \"control flex-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        onChange: this.onToggleAttachments.bind(this, 'pdf'),\n        checked: attachments.pdf,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"\\xA0 \", React.createElement(\"i\", {\n        className: \"mdi mdi-file-pdf\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }), \" PDF\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        onChange: this.onToggleAttachments.bind(this, 'xml'),\n        checked: attachments.xml,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"\\xA0 \", React.createElement(\"i\", {\n        className: \"mdi mdi-file-xml\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }), \" XML\")))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"caption required\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, \"* Campos obligatorios\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return MailerModal;\n}(Component);\n\nexport default MailerModal;\nMailerModal.propTypes = {\n  invoice: PropTypes.object.isRequired,\n  isActive: PropTypes.bool,\n  redirectOnSubmit: PropTypes.bool,\n  toggleModal: PropTypes.func\n};\nMailerModal.defaultProps = {\n  isActive: false,\n  toggleModal: function toggleModal() {},\n  redirectOnSubmit: false\n};","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/viewInvoice/mailerModal/index.js"],"names":["React","Component","PropTypes","accounting","Creatable","SessionStore","classNames","browserHistory","AppSignal","NotificationsActions","Modal","TextField","prettyDate","InvoicesActions","requiredFields","Set","REPLY_KEY","MailerModal","sendInvoice","id","props","invoice","state","from","to","replyTo","message","attachments","data","email","reduce","acc","curr","value","validateAll","sendEmail","then","r","success","redirectOnSubmit","push","toggleModal","catch","error","sendError","getCurrentEntity","pdf","xml","Object","assign","clear","isValidTo","filter","Boolean","map","form","validate","call","every","e","field","setState","target","isValidMessage","prevState","isValid","length","file","isActive","issuer","name","recipient","folio","issue_date","formatMoney","total_cents","onChange","bind","add","onChangeTo","label","onToggleAttachments","propTypes","object","isRequired","bool","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport accounting from 'accounting'\nimport { Creatable } from 'react-select'\nimport SessionStore from 'stores/session'\nimport classNames from 'classnames'\nimport { browserHistory } from 'react-router'\nimport AppSignal from 'appsignal'\n\nimport NotificationsActions from 'actions/notifications'\nimport Modal from 'shared/modal'\nimport TextField from 'shared/textField'\nimport { prettyDate } from 'utils'\n\nimport InvoicesActions from 'actions/invoices'\n\nconst requiredFields = new Set()\n\nconst REPLY_KEY = 'reply_to'\n\nclass MailerModal extends Component {\n  constructor () {\n    super()\n    this.data = {\n      from: SessionStore.getCurrentEntity().email,\n      to: [],\n      [REPLY_KEY]: SessionStore.getCurrentEntity().email,\n      message: '',\n      attachments: {\n        pdf: true,\n        xml: true\n      },\n      isValid: {\n        to: true,\n        message: true\n      }\n    }\n    this.state = Object.assign({}, this.data)\n  }\n\n  componentWillUnmount () {\n    // Clears the stored requiredFields\n    requiredFields.clear()\n  }\n\n  // Iterates over required fields and validates every one of them\n  // Then it returns true if all validations succeedeed, else false.\n  validateAll () {\n    return (\n      this.isValidTo() &&\n      [...requiredFields] // Converts the Set() into an array\n        .filter(Boolean) // Filters the array from any falsy value\n        .map(form => form.validate.call(this)) // Calls the validate() method on each form\n        .every(e => e) // Checks if all validations suceeded\n    )\n  }\n\n  onChange (field, e) {\n    this.setState({ [field]: e.target.value }, () => {\n      if (field === 'message') this.isValidMessage()\n    })\n  }\n\n  onChangeTo (value) {\n    this.setState({ to: value }, this.isValidTo)\n  }\n\n  isValidTo () {\n    this.setState(prevState => ({\n      isValid: Object.assign({}, prevState.isValid, {\n        to: prevState.to.length > 0\n      })\n    }))\n    return this.state.to.length > 0\n  }\n\n  isValidMessage () {\n    this.setState(prevState => ({\n      isValid: Object.assign({}, prevState.isValid, {\n        message: prevState.message.length > 0\n      })\n    }))\n    return this.state.message.length > 0\n  }\n\n  onToggleAttachments (file) {\n    this.setState(prevState => ({\n      attachments: Object.assign({}, prevState.attachments, {\n        [file]: !prevState.attachments[file]\n      })\n    }))\n  }\n\n  sendInvoice = () => {\n    const { id } = this.props.invoice\n    let { from, to, [REPLY_KEY]: replyTo, message, attachments } = this.state\n    let data = {\n      email: {\n        from,\n        [REPLY_KEY]: replyTo,\n        message,\n        attachments,\n        to: to.reduce(\n          (acc, curr) => `${acc}${acc ? ', ' : ''}${curr.value}`,\n          ''\n        )\n      }\n    }\n    if (this.validateAll()) {\n      InvoicesActions.sendEmail(id, data)\n        .then(r => {\n          NotificationsActions.success(\n            'La factura ha sido enviada correctamente'\n          )\n          if (this.props.redirectOnSubmit) {\n            browserHistory.push(`/facturas/ver/${this.props.invoice.id}`)\n          } else {\n            this.props.toggleModal()\n          }\n        })\n        .catch(error => {\n          AppSignal.sendError(error)\n          NotificationsActions.error(error)\n        })\n    } else {\n      NotificationsActions.error(\n        'Es necesario llenar todos los campos requeridos.'\n      )\n    }\n  }\n\n  render () {\n    let { isActive, toggleModal, invoice } = this.props\n    let {\n      from,\n      to,\n      [REPLY_KEY]: replyTo,\n      message,\n      attachments,\n      isValid\n    } = this.state\n    return (\n      <Modal\n        title='Enviar por Correo'\n        isActive={isActive}\n        toggleModal={toggleModal}\n        onSubmit={() => this.sendInvoice()}\n      >\n        <form onSubmit={() => this.sendInvoice()}>\n          <div className='columns is-multiline'>\n            <div className='column is-12 flex-column'>\n              <span className='subtitle-body'>\n                Emisor: {invoice.issuer ? invoice.issuer.name : ''}\n              </span>\n              <span className='subtitle-body'>\n                Receptor: {invoice.recipient ? invoice.recipient.name : ''}\n              </span>\n              <span className='body'>Folio: {invoice.folio}</span>\n              <span className='body'>\n                Fecha de emisión: {prettyDate(invoice.issue_date)}\n              </span>\n              <span className='body'>\n                Total: {accounting.formatMoney(invoice.total_cents / 100, '$ ')}\n              </span>\n            </div>\n            <div className='column is-12'>\n              <TextField\n                label='De'\n                type='email'\n                value={from}\n                onChange={this.onChange.bind(this, 'from')}\n                required\n                ref={r => requiredFields.add(r)}\n              />\n            </div>\n            <div className='column is-12'>\n              <label className='caption'>Para *</label>\n              <Creatable\n                multi\n                placeholder=''\n                searchPromptText='Ingrese los correos electrónicos'\n                noResultsText='Ingrese los correos electrónicos'\n                value={to}\n                options={[]}\n                onChange={this.onChangeTo.bind(this)}\n                onBlur={this.isValidTo.bind(this)}\n                promptTextCreator={label => `Añadir correo \"${label}\"`}\n              />\n              <span\n                className={classNames('help is-danger', {\n                  'is-hidden': isValid.to\n                })}\n              >\n                Este campo es requerido\n              </span>\n            </div>\n            <div className='column is-12'>\n              <TextField\n                label='Responder a'\n                type='email'\n                value={replyTo}\n                onChange={this.onChange.bind(this, REPLY_KEY)}\n              />\n            </div>\n            <div className='column is-12'>\n              <label className='caption'>Mensaje *</label>\n              <textarea\n                className={classNames('textarea', {\n                  'is-danger': !isValid.message\n                })}\n                value={message}\n                onChange={this.onChange.bind(this, 'message')}\n                onBlur={this.isValidMessage.bind(this)}\n                required\n              />\n              <span\n                className={classNames('help is-danger', {\n                  'is-hidden': isValid.message\n                })}\n              >\n                Este campo es requerido\n              </span>\n            </div>\n            <div className='column is-12'>\n              <label className='caption'>Archivos adjuntos</label>\n              <div className='control flex-column'>\n                <div>\n                  <input\n                    type='checkbox'\n                    onChange={this.onToggleAttachments.bind(this, 'pdf')}\n                    checked={attachments.pdf}\n                  />\n                  <span className='body'>\n                    &nbsp; <i className='mdi mdi-file-pdf' /> PDF\n                  </span>\n                </div>\n                <div>\n                  <input\n                    type='checkbox'\n                    onChange={this.onToggleAttachments.bind(this, 'xml')}\n                    checked={attachments.xml}\n                  />\n                  <span className='body'>\n                    &nbsp; <i className='mdi mdi-file-xml' /> XML\n                  </span>\n                </div>\n              </div>\n            </div>\n            <br />\n            <div className='caption required'>* Campos obligatorios</div>\n            <br />\n          </div>\n        </form>\n      </Modal>\n    )\n  }\n}\n\nexport default MailerModal\n\nMailerModal.propTypes = {\n  invoice: PropTypes.object.isRequired,\n  isActive: PropTypes.bool,\n  redirectOnSubmit: PropTypes.bool,\n  toggleModal: PropTypes.func\n}\n\nMailerModal.defaultProps = {\n  isActive: false,\n  toggleModal: () => {},\n  redirectOnSubmit: false\n}\n"]},"metadata":{},"sourceType":"module"}