{"ast":null,"code":"import _toConsumableArray from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/shared/paginator/index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { browserHistory } from 'react-router'; // Components\n\nimport { stringifyQuery } from 'utils';\nvar MIN_FIXED_PAGES = 6; // Renders all pages instead of skipping the middle ones, MINIMUM IS 6\n// Topbar is the main menu of the app, it includes the Enconta logo\n\nvar Paginator = function Paginator(_ref) {\n  var totalPages = _ref.totalPages,\n      location = _ref.location,\n      onPageChanged = _ref.onPageChanged;\n  // If total pages for the listing is just 1, we don't need a paginator\n  if (totalPages <= 1) return null; // Gets the currentPage from the url, if none asume it's 1\n\n  var currentPage = Number(location.query.page) || 1; // Sets new page on the url\n\n  var setPage = function setPage(page, changeListener) {\n    var query = stringifyQuery(Object.assign({}, location.query, {\n      page: page\n    }));\n    if (changeListener) changeListener(page);\n    browserHistory.push(location.pathname + query);\n  }; // Renders the buttons for every page\n\n\n  var renderLink = function renderLink(page, changeListener) {\n    return page > 0 ? React.createElement(\"li\", {\n      key: \"page-\".concat(page),\n      onClick: function onClick() {\n        return setPage(page, onPageChanged);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: classNames('pagination-link', {\n        'is-current': page === currentPage\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, page)) : React.createElement(\"li\", {\n      key: \"pagesymbol-\".concat(page),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"pagination-ellipsis\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"\\u2026\"));\n  }; // Renders all buttons\n\n\n  var renderLinks = function renderLinks(changeListener) {\n    // Validates if currentPage is between 1 and totalPages\n    if (currentPage < 1 || currentPage > totalPages) {\n      console.error('FATAL @ PAGINATOR: current page outside total pages');\n    }\n\n    var links = [];\n\n    switch (true) {\n      case totalPages < MIN_FIXED_PAGES:\n        // Special case if there are less than 6 pages\n        links = _toConsumableArray(new Array(totalPages)).map(function (x, i) {\n          return renderLink(i + 1, onPageChanged);\n        });\n        break;\n\n      case currentPage <= 3:\n        // Special case for rendering first 3 pages if current page is on the verge\n        links = [renderLink(1, onPageChanged), renderLink(2, onPageChanged), renderLink(3, onPageChanged), renderLink(4, onPageChanged), renderLink(0, onPageChanged), renderLink(totalPages, onPageChanged)];\n        break;\n\n      case totalPages - currentPage > 2:\n        // Special case for rendering pages if current page is on the middle\n        links = [renderLink(1, onPageChanged), renderLink(-1, onPageChanged), // Send -1 in order to avoid repeating the key 0\n        renderLink(currentPage - 1, onPageChanged), renderLink(currentPage, onPageChanged), renderLink(currentPage + 1, onPageChanged), // Send 0 in order to avoid repeating the key -1\n        renderLink(0, onPageChanged), renderLink(totalPages, onPageChanged)];\n        break;\n\n      case totalPages - currentPage <= 2:\n        // Special case for rendering last 3 pages if current page is on the verge\n        links = [renderLink(1, onPageChanged), renderLink(0, onPageChanged), renderLink(totalPages - 3, onPageChanged), renderLink(totalPages - 2, onPageChanged), renderLink(totalPages - 1, onPageChanged), renderLink(totalPages, onPageChanged)];\n        break;\n    }\n\n    return React.createElement(\"ul\", {\n      className: \"pagination-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, links);\n  };\n\n  var previousPage = currentPage > 1 ? currentPage - 1 : currentPage;\n  var nextPage = currentPage < totalPages ? currentPage + 1 : currentPage;\n  return React.createElement(\"div\", {\n    id: \"paginator\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"nav\", {\n    className: \"pagination is-centered\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    className: \"pagination-previous\",\n    disabled: currentPage === 1,\n    onClick: function onClick() {\n      return setPage(previousPage, onPageChanged);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Anterior\"), React.createElement(\"a\", {\n    className: \"pagination-next\",\n    disabled: currentPage === totalPages,\n    onClick: function onClick() {\n      return setPage(nextPage, onPageChanged);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Siguiente\"), renderLinks(onPageChanged)));\n};\n\nPaginator.propTypes = {\n  totalPages: PropTypes.number.isRequired,\n  location: PropTypes.object.isRequired,\n  onPageChanged: PropTypes.func\n};\nPaginator.defaultProps = {\n  totalPages: 1,\n  location: {\n    query: {\n      page: 1\n    }\n  }\n};\nexport default Paginator;","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/shared/paginator/index.js"],"names":["React","PropTypes","classNames","browserHistory","stringifyQuery","MIN_FIXED_PAGES","Paginator","totalPages","location","onPageChanged","currentPage","Number","query","page","setPage","changeListener","Object","assign","push","pathname","renderLink","renderLinks","console","error","links","Array","map","x","i","previousPage","nextPage","propTypes","number","isRequired","object","func","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport { browserHistory } from 'react-router'\n\n// Components\nimport { stringifyQuery } from 'utils'\n\nconst MIN_FIXED_PAGES = 6 // Renders all pages instead of skipping the middle ones, MINIMUM IS 6\n\n// Topbar is the main menu of the app, it includes the Enconta logo\nconst Paginator = ({ totalPages, location, onPageChanged }) => {\n  // If total pages for the listing is just 1, we don't need a paginator\n  if (totalPages <= 1) return null\n  // Gets the currentPage from the url, if none asume it's 1\n  const currentPage = Number(location.query.page) || 1\n\n  // Sets new page on the url\n  const setPage = (page, changeListener) => {\n    const query = stringifyQuery(Object.assign({}, location.query, { page }))\n    if (changeListener) changeListener(page)\n    browserHistory.push(location.pathname + query)\n  }\n\n  // Renders the buttons for every page\n  const renderLink = (page, changeListener) => {\n    return page > 0 ? (\n      <li key={`page-${page}`} onClick={() => setPage(page, onPageChanged)}>\n        <a\n          className={classNames('pagination-link', {\n            'is-current': page === currentPage\n          })}\n        >\n          {page}\n        </a>\n      </li>\n    ) : (\n      <li key={`pagesymbol-${page}`}>\n        <span className='pagination-ellipsis'>&hellip;</span>\n      </li>\n    )\n  }\n\n  // Renders all buttons\n  const renderLinks = changeListener => {\n    // Validates if currentPage is between 1 and totalPages\n    if (currentPage < 1 || currentPage > totalPages) {\n      console.error('FATAL @ PAGINATOR: current page outside total pages')\n    }\n    let links = []\n    switch (true) {\n      case totalPages < MIN_FIXED_PAGES: // Special case if there are less than 6 pages\n        links = [...new Array(totalPages)].map((x, i) =>\n          renderLink(i + 1, onPageChanged)\n        )\n        break\n      case currentPage <= 3: // Special case for rendering first 3 pages if current page is on the verge\n        links = [\n          renderLink(1, onPageChanged),\n          renderLink(2, onPageChanged),\n          renderLink(3, onPageChanged),\n          renderLink(4, onPageChanged),\n          renderLink(0, onPageChanged),\n          renderLink(totalPages, onPageChanged)\n        ]\n        break\n      case totalPages - currentPage > 2: // Special case for rendering pages if current page is on the middle\n        links = [\n          renderLink(1, onPageChanged),\n          renderLink(-1, onPageChanged),\n          // Send -1 in order to avoid repeating the key 0\n          renderLink(currentPage - 1, onPageChanged),\n          renderLink(currentPage, onPageChanged),\n          renderLink(currentPage + 1, onPageChanged),\n          // Send 0 in order to avoid repeating the key -1\n          renderLink(0, onPageChanged),\n          renderLink(totalPages, onPageChanged)\n        ]\n        break\n      case totalPages - currentPage <= 2: // Special case for rendering last 3 pages if current page is on the verge\n        links = [\n          renderLink(1, onPageChanged),\n          renderLink(0, onPageChanged),\n          renderLink(totalPages - 3, onPageChanged),\n          renderLink(totalPages - 2, onPageChanged),\n          renderLink(totalPages - 1, onPageChanged),\n          renderLink(totalPages, onPageChanged)\n        ]\n        break\n    }\n    return <ul className='pagination-list'>{links}</ul>\n  }\n\n  const previousPage = currentPage > 1 ? currentPage - 1 : currentPage\n  const nextPage = currentPage < totalPages ? currentPage + 1 : currentPage\n\n  return (\n    <div id='paginator'>\n      <nav className='pagination is-centered'>\n        <a\n          className='pagination-previous'\n          disabled={currentPage === 1}\n          onClick={() => setPage(previousPage, onPageChanged)}\n        >\n          Anterior\n        </a>\n        <a\n          className='pagination-next'\n          disabled={currentPage === totalPages}\n          onClick={() => setPage(nextPage, onPageChanged)}\n        >\n          Siguiente\n        </a>\n        {renderLinks(onPageChanged)}\n      </nav>\n    </div>\n  )\n}\n\nPaginator.propTypes = {\n  totalPages: PropTypes.number.isRequired,\n  location: PropTypes.object.isRequired,\n  onPageChanged: PropTypes.func\n}\n\nPaginator.defaultProps = {\n  totalPages: 1,\n  location: { query: { page: 1 } }\n}\n\nexport default Paginator\n"]},"metadata":{},"sourceType":"module"}