{"ast":null,"code":"import _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport BaseStore from './baseStore';\n\nvar TopbarStore =\n/*#__PURE__*/\nfunction (_BaseStore) {\n  _inherits(TopbarStore, _BaseStore);\n\n  function TopbarStore() {\n    var _this;\n\n    _classCallCheck(this, TopbarStore);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TopbarStore).call(this));\n    _this.loaderPercent = 0;\n    _this.actions = {\n      LOADER_CHANGED: function LOADER_CHANGED(action) {\n        _this.setLoaderPercent(action.data);\n      }\n    };\n    return _this;\n  } // Returns stored loader percent, this is used when explicitly you want to know it\n\n\n  _createClass(TopbarStore, [{\n    key: \"getLoaderPercent\",\n    value: function getLoaderPercent() {\n      return this.loaderPercent;\n    } // Sets loader percentage\n\n  }, {\n    key: \"setLoaderPercent\",\n    value: function setLoaderPercent(percent) {\n      this.loaderPercent = percent;\n    }\n  }]);\n\n  return TopbarStore;\n}(BaseStore);\n\nexport default TopbarStore.getInstance();","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/stores/topbar.js"],"names":["BaseStore","TopbarStore","loaderPercent","actions","LOADER_CHANGED","action","setLoaderPercent","data","percent","getInstance"],"mappings":";;;;;AAAA,OAAOA,SAAP,MAAsB,aAAtB;;IAEMC,W;;;;;AACJ,yBAAe;AAAA;;AAAA;;AACb;AACA,UAAKC,aAAL,GAAqB,CAArB;AAEA,UAAKC,OAAL,GAAe;AACbC,MAAAA,cAAc,EAAE,wBAAAC,MAAM,EAAI;AACxB,cAAKC,gBAAL,CAAsBD,MAAM,CAACE,IAA7B;AACD;AAHY,KAAf;AAJa;AASd,G,CAED;;;;;uCACoB;AAClB,aAAO,KAAKL,aAAZ;AACD,K,CACD;;;;qCACkBM,O,EAAS;AACzB,WAAKN,aAAL,GAAqBM,OAArB;AACD;;;;EAnBuBR,S;;AAsB1B,eAAeC,WAAW,CAACQ,WAAZ,EAAf","sourcesContent":["import BaseStore from './baseStore'\n\nclass TopbarStore extends BaseStore {\n  constructor () {\n    super()\n    this.loaderPercent = 0\n\n    this.actions = {\n      LOADER_CHANGED: action => {\n        this.setLoaderPercent(action.data)\n      }\n    }\n  }\n\n  // Returns stored loader percent, this is used when explicitly you want to know it\n  getLoaderPercent () {\n    return this.loaderPercent\n  }\n  // Sets loader percentage\n  setLoaderPercent (percent) {\n    this.loaderPercent = percent\n  }\n}\n\nexport default TopbarStore.getInstance()\n"]},"metadata":{},"sourceType":"module"}