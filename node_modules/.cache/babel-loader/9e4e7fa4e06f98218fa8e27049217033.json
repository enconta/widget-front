{"ast":null,"code":"import _toConsumableArray from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _objectSpread from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/editClient/employees/editingForm/index.js\";\n// Libraries\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { browserHistory } from 'react-router'; // Components\n\nimport TextField from 'shared/textField';\nimport Datepicker from 'shared/datepicker';\nimport SelectField from 'shared/selectField';\nimport Button from 'shared/button';\nimport Alert from 'shared/alert';\nimport moment from 'moment'; // Actions\n\nimport EditClientActions from 'actions/editClient';\nimport NotificationActions from 'actions/notifications';\nimport PaymentAccountsActions from 'actions/paymentAccounts'; // Stores\n\nimport PaymentAccountsStore from 'stores/paymentAccounts';\nimport EmployeesStore from 'stores/employees';\nimport { COUNTRY_LIST, STATE_LIST, PAYMENT_SCHEDULES, TAX_CLASSIFICATIONS_EMPLOYEE, CONTRACT_TYPE, WORKDAY_TYPE, RISK_CATEGORY, PAYROLL_TYPE, RESOURCE_ORIGIN } from 'shared/catalogs';\nimport { avoidBlankSpace } from 'utils'; // Set where all the required field refs are going to be\n// stored so we can validate them all when submit\n\nvar requiredFields = new Set();\n\nfunction dateToString(d) {\n  return moment(d).format('YYYY-MM-DD');\n}\n\nfunction getCurrentState() {\n  return _objectSpread({\n    banksList: PaymentAccountsStore.getBanksList()\n  }, EmployeesStore.getCurrentEmployee());\n}\n\nvar EditEmployee =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditEmployee, _Component);\n\n  function EditEmployee() {\n    var _this;\n\n    _classCallCheck(this, EditEmployee);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditEmployee).call(this));\n\n    _this.toggleCashPayment = function () {\n      _this.setState(function (state) {\n        return {\n          cashPayment: !state.cashPayment\n        };\n      }, function () {\n        requiredFields.delete(null);\n      });\n    };\n\n    _this.data = {\n      requestInProgress: false,\n      alertOpen: false,\n      banksList: PaymentAccountsStore.getBanksList()\n    };\n    _this.state = Object.assign({}, _this.data, getCurrentState());\n    _this._onChange = _this._onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(EditEmployee, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Adds listener, when the Store changes, trigger the _onChange callback func\n      EmployeesStore.addChangeListener(this._onChange);\n      PaymentAccountsStore.addChangeListener(this._onChange); // If we are supposed to be editing a document, ask for document info\n\n      if (!this.props.location.pathname.includes('/empleados/nuevo') && typeof this.props.params.id !== 'undefined') {\n        this.setState({\n          isUpdate: true\n        });\n        EditClientActions.getEmployeeData(this.props.params.id);\n      }\n\n      PaymentAccountsActions.getBanksList().catch(function (error) {\n        NotificationActions.error(error);\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // Removes the listener to avoid memory leaks\n      EmployeesStore.removeChangeListener(this._onChange); // Clears the stored requiredFields\n\n      requiredFields.clear();\n    }\n  }, {\n    key: \"_onChange\",\n    value: function _onChange() {\n      // When the store changes, the state goes to it and pulls the updated data\n      // then sets it so the component rerenders\n      var state = getCurrentState();\n      this.setState(state);\n    }\n  }, {\n    key: \"toggleAlert\",\n    value: function toggleAlert() {\n      this.setState(function (prevState) {\n        return {\n          alertOpen: !prevState.alertOpen\n        };\n      });\n    }\n  }, {\n    key: \"onChangeField\",\n    value: function onChangeField(field, e) {\n      var value = e._isAMomentObject ? e : e.target.value;\n      this.setState(_defineProperty({}, field, value));\n    } // Iterates over required fields and validates every one of them\n    // Then it returns true if all validations succeedeed, else false.\n\n  }, {\n    key: \"validateAll\",\n    value: function validateAll() {\n      return _toConsumableArray(requiredFields) // Converts the Set() into an array\n      .filter(Boolean) // Filters the array from any falsy value\n      .map(function (form) {\n        return form.validate();\n      }) // Calls the validate() method on each form\n      .every(function (e) {\n        return e;\n      }); // Checks if all validations suceeded\n    } // Clears the current Document and redirects to the documents listing\n\n  }, {\n    key: \"returnToListing\",\n    value: function returnToListing() {\n      this.setState({\n        requestInProgress: false\n      });\n      EditClientActions.clearEmployee();\n      browserHistory.push('/empleados');\n    }\n  }, {\n    key: \"deleteEmployee\",\n    value: function deleteEmployee() {\n      var _this2 = this;\n\n      var id = this.props.params.id;\n      EditClientActions.deleteEmployee(id).then(function () {\n        NotificationActions.success('El empleado ha sido borrado correctamente');\n\n        _this2.returnToListing();\n      }).catch(function (err) {\n        return NotificationActions.error(err);\n      });\n    }\n  }, {\n    key: \"sendData\",\n    value: function sendData(e) {\n      var _this3 = this;\n\n      e.preventDefault(); // Validates all required fields, then builds the data object using the values stored in the state\n\n      if (this.validateAll() && !this.state.requestInProgress) {\n        var data = {\n          employee: {\n            full_name: this.state.employeeFullName,\n            curp: this.state.employeeCurp,\n            country: this.state.employeeCountry,\n            state: this.state.employeeState,\n            employee_number: this.state.employeeEmployeeNumber,\n            social_security_number: this.state.employeeSsn,\n            tax_classification: this.state.employeeTaxClassification,\n            department: this.state.employeeDepartment,\n            position: this.state.employeePosition,\n            email: this.state.employeeEmail,\n            clabe: this.state.employeeClabe,\n            rfc: this.state.employeeRfc,\n            payment_interval: this.state.employeePaymentInterval,\n            hiring_date: dateToString(this.state.employeeHiringDate),\n            contract_type: this.state.employeeContractType,\n            work_day_type: this.state.employeeWorkdayType,\n            risk_category: this.state.employeeRiskCategory,\n            payroll_type: this.state.employeePayrollType,\n            resource_source: this.state.employeeResourceSource,\n            base_salary: this.state.employeeBaseSalary,\n            daily_wage: this.state.employeeDailyWage,\n            bank_code: this.state.employeeBankCode\n          }\n        }; // If the request is for update an existing employee, sets the id and calls the corresponding Action\n        // Otherwise, calls the action to create a new one.\n\n        this.setState({\n          requestInProgress: true\n        }, function () {\n          if (_this3.state.isUpdate) {\n            var id = _this3.props.params.id;\n            EditClientActions.setEmployeeData(id, data).then(function () {\n              NotificationActions.success('El empleado ha sido editado correctamente');\n\n              _this3.returnToListing();\n            }).catch(function (error) {\n              if (Array.isArray(error)) {\n                NotificationActions.error(error.join('\\n'));\n              } else {\n                NotificationActions.error(error.error);\n              }\n\n              _this3.setState({\n                requestInProgress: false\n              });\n            });\n          } else {\n            EditClientActions.createEmployee(data).then(function () {\n              NotificationActions.success('El empleado ha sido creado correctamente');\n\n              _this3.returnToListing();\n            }).catch(function (error) {\n              if (Array.isArray(error)) {\n                NotificationActions.error(error.join('\\n'));\n              } else {\n                NotificationActions.error(error.error);\n              }\n\n              _this3.setState({\n                requestInProgress: false\n              });\n            });\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isUpdate = _this$state.isUpdate,\n          cashPayment = _this$state.cashPayment,\n          banksList = _this$state.banksList,\n          employeeFullName = _this$state.employeeFullName,\n          employeeEmployeeNumber = _this$state.employeeEmployeeNumber,\n          employeeRfc = _this$state.employeeRfc,\n          employeeCurp = _this$state.employeeCurp,\n          employeeSsn = _this$state.employeeSsn,\n          employeeDepartment = _this$state.employeeDepartment,\n          employeePosition = _this$state.employeePosition,\n          employeeEmail = _this$state.employeeEmail,\n          employeeClabe = _this$state.employeeClabe,\n          employeeBaseSalary = _this$state.employeeBaseSalary,\n          employeeDailyWage = _this$state.employeeDailyWage;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(Button, {\n        buttonStyle: \"link\",\n        icon: \"chevron-double-left\",\n        onClick: this.returnToListing.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \"Volver\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }), React.createElement(\"h4\", {\n        className: \"subheader-green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, this.props.route.title), React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column is-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"Nombre Completo\",\n        value: avoidBlankSpace(employeeFullName),\n        onChange: this.onChangeField.bind(this, 'employeeFullName'),\n        required: true,\n        ref: function ref(r) {\n          return requiredFields.add(r);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"column is-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"No. de empleado\",\n        value: avoidBlankSpace(employeeEmployeeNumber),\n        onChange: this.onChangeField.bind(this, 'employeeEmployeeNumber'),\n        required: true,\n        ref: function ref(r) {\n          return requiredFields.add(r);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"RFC\",\n        value: avoidBlankSpace(employeeRfc),\n        onChange: this.onChangeField.bind(this, 'employeeRfc'),\n        required: true,\n        ref: function ref(r) {\n          return requiredFields.add(r);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"CURP\",\n        value: avoidBlankSpace(employeeCurp),\n        onChange: this.onChangeField.bind(this, 'employeeCurp'),\n        required: true,\n        ref: function ref(r) {\n          return requiredFields.add(r);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"No. de Seguro Social\",\n        value: avoidBlankSpace(employeeSsn),\n        onChange: this.onChangeField.bind(this, 'employeeSsn'),\n        required: true,\n        ref: function ref(r) {\n          return requiredFields.add(r);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"Departamento\",\n        value: avoidBlankSpace(employeeDepartment),\n        onChange: this.onChangeField.bind(this, 'employeeDepartment'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"Puesto\",\n        value: avoidBlankSpace(employeePosition),\n        onChange: this.onChangeField.bind(this, 'employeePosition'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"Email\",\n        type: \"email\",\n        value: avoidBlankSpace(employeeEmail),\n        onChange: this.onChangeField.bind(this, 'employeeEmail'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, React.createElement(SelectField, {\n        label: \"Estado\",\n        placeholder: \"Selecciona\",\n        options: STATE_LIST,\n        optionsConfig: {\n          id: 'state',\n          label: 'label'\n        },\n        value: this.state.employeeState,\n        onChange: this.onChangeField.bind(this, 'employeeState'),\n        required: true,\n        ref: function ref(r) {\n          return requiredFields.add(r);\n        },\n        showId: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, React.createElement(SelectField, {\n        label: \"Pa\\xEDs\",\n        placeholder: \"Selecciona\",\n        options: COUNTRY_LIST,\n        value: this.state.employeeCountry,\n        onChange: this.onChangeField.bind(this, 'employeeCountry'),\n        required: true,\n        ref: function ref(r) {\n          return requiredFields.add(r);\n        },\n        showId: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, React.createElement(Datepicker, {\n        label: \"Fecha de Ingreso\",\n        value: this.state.employeeHiringDate,\n        onChange: this.onChangeField.bind(this, 'employeeHiringDate'),\n        required: true,\n        ref: function ref(r) {\n          return requiredFields.add(r);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }))), React.createElement(\"hr\", {\n        className: \"visual-rest visual-rest--margin-16px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }), React.createElement(\"h5\", {\n        className: \"body-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, \"Datos de pago\"), React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, React.createElement(SelectField, {\n        label: \"Periodicidad pago\",\n        placeholder: \"Selecciona Periodicidad del pago\",\n        options: PAYMENT_SCHEDULES,\n        value: this.state.employeePaymentInterval,\n        onChange: this.onChangeField.bind(this, 'employeePaymentInterval'),\n        required: true,\n        ref: function ref(r) {\n          return requiredFields.add(r);\n        },\n        showId: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }, React.createElement(SelectField, {\n        label: \"R\\xE9gimen\",\n        placeholder: \"Selecciona R\\xE9gimen Fiscal\",\n        options: TAX_CLASSIFICATIONS_EMPLOYEE,\n        value: this.state.employeeTaxClassification,\n        onChange: this.onChangeField.bind(this, 'employeeTaxClassification'),\n        required: true,\n        ref: function ref(r) {\n          return requiredFields.add(r);\n        },\n        showId: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, React.createElement(SelectField, {\n        label: \"Tipo Contrato\",\n        placeholder: \"Selecciona Tipo de Contrato\",\n        options: CONTRACT_TYPE,\n        value: this.state.employeeContractType,\n        onChange: this.onChangeField.bind(this, 'employeeContractType'),\n        required: true,\n        ref: function ref(r) {\n          return requiredFields.add(r);\n        },\n        showId: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }, React.createElement(SelectField, {\n        label: \"Tipo Jornada\",\n        placeholder: \"Selecciona Jornada\",\n        options: WORKDAY_TYPE,\n        value: this.state.employeeWorkdayType,\n        onChange: this.onChangeField.bind(this, 'employeeWorkdayType'),\n        required: true,\n        ref: function ref(r) {\n          return requiredFields.add(r);\n        },\n        showId: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }, React.createElement(SelectField, {\n        label: \"Clase de Riesgo\",\n        placeholder: \"Selecciona Clase de Riesgo\",\n        options: RISK_CATEGORY,\n        value: this.state.employeeRiskCategory,\n        onChange: this.onChangeField.bind(this, 'employeeRiskCategory'),\n        required: true,\n        ref: function ref(r) {\n          return requiredFields.add(r);\n        },\n        showId: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424\n        },\n        __self: this\n      }, React.createElement(SelectField, {\n        label: \"Tipo de n\\xF3mina\",\n        placeholder: \"Tipo de n\\xF3mina\",\n        options: PAYROLL_TYPE,\n        value: this.state.employeePayrollType,\n        onChange: this.onChangeField.bind(this, 'employeePayrollType'),\n        required: true,\n        ref: function ref(r) {\n          return requiredFields.add(r);\n        },\n        showId: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436\n        },\n        __self: this\n      }, React.createElement(SelectField, {\n        label: \"Origen del recurso\",\n        placeholder: \"Origen del recurso\",\n        options: RESOURCE_ORIGIN,\n        value: this.state.employeeResourceSource,\n        onChange: this.onChangeField.bind(this, 'employeeResourceSource'),\n        required: true,\n        ref: function ref(r) {\n          return requiredFields.add(r);\n        },\n        showId: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450\n        },\n        __self: this\n      }, React.createElement(SelectField, {\n        label: \"C\\xF3digo del banco\",\n        placeholder: \"Selecciona un banco\",\n        options: banksList,\n        value: this.state.employeeBankCode,\n        onChange: this.onChangeField.bind(this, 'employeeBankCode'),\n        required: !cashPayment,\n        disabled: cashPayment,\n        ref: function ref(r) {\n          return cashPayment ? requiredFields.delete(r) : requiredFields.add(r);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        onChange: this.toggleCashPayment,\n        checked: cashPayment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464\n        },\n        __self: this\n      }), \"\\xA0Pago en efectivo\")), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"CLABE\",\n        value: avoidBlankSpace(employeeClabe),\n        onChange: this.onChangeField.bind(this, 'employeeClabe'),\n        minLength: 18,\n        type: \"number\",\n        required: !cashPayment,\n        disabled: cashPayment,\n        ref: function ref(r) {\n          return cashPayment ? requiredFields.delete(r) : requiredFields.add(r);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"Salario base cotizaci\\xF3n\",\n        type: \"number\",\n        value: avoidBlankSpace(employeeBaseSalary),\n        onChange: this.onChangeField.bind(this, 'employeeBaseSalary'),\n        required: true,\n        ref: function ref(r) {\n          return requiredFields.add(r);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"Salario diario integrado\",\n        type: \"number\",\n        value: avoidBlankSpace(employeeDailyWage),\n        onChange: this.onChangeField.bind(this, 'employeeDailyWage'),\n        required: true,\n        ref: function ref(r) {\n          return requiredFields.add(r);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"caption required\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508\n        },\n        __self: this\n      }, \"* Campos obligatorios\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"flex-end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510\n        },\n        __self: this\n      }, React.createElement(Button, {\n        icon: \"cancel\",\n        onClick: this.returnToListing.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511\n        },\n        __self: this\n      }, \"Cancelar\"), isUpdate ? React.createElement(Button, {\n        buttonStyle: \"danger\",\n        icon: \"delete\",\n        type: \"button\",\n        onClick: this.toggleAlert.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515\n        },\n        __self: this\n      }, \"Eliminar Empleado\") : null, React.createElement(Button, {\n        buttonStyle: \"primary\",\n        icon: \"content-save\",\n        onClick: this.sendData.bind(this),\n        loading: this.state.requestInProgress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524\n        },\n        __self: this\n      }, \"Guardar\")), React.createElement(Alert, {\n        isActive: this.state.alertOpen,\n        toggleAlert: this.toggleAlert.bind(this),\n        onSubmit: this.deleteEmployee.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return EditEmployee;\n}(Component);\n\nEditEmployee.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string\n  }),\n  params: PropTypes.shape({\n    id: PropTypes.string\n  }),\n  route: PropTypes.shape({\n    title: PropTypes.string\n  })\n};\nexport default EditEmployee;","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/editClient/employees/editingForm/index.js"],"names":["React","Component","PropTypes","browserHistory","TextField","Datepicker","SelectField","Button","Alert","moment","EditClientActions","NotificationActions","PaymentAccountsActions","PaymentAccountsStore","EmployeesStore","COUNTRY_LIST","STATE_LIST","PAYMENT_SCHEDULES","TAX_CLASSIFICATIONS_EMPLOYEE","CONTRACT_TYPE","WORKDAY_TYPE","RISK_CATEGORY","PAYROLL_TYPE","RESOURCE_ORIGIN","avoidBlankSpace","requiredFields","Set","dateToString","d","format","getCurrentState","banksList","getBanksList","getCurrentEmployee","EditEmployee","toggleCashPayment","setState","state","cashPayment","delete","data","requestInProgress","alertOpen","Object","assign","_onChange","bind","addChangeListener","props","location","pathname","includes","params","id","isUpdate","getEmployeeData","catch","error","removeChangeListener","clear","prevState","field","e","value","_isAMomentObject","target","filter","Boolean","map","form","validate","every","clearEmployee","push","deleteEmployee","then","success","returnToListing","err","preventDefault","validateAll","employee","full_name","employeeFullName","curp","employeeCurp","country","employeeCountry","employeeState","employee_number","employeeEmployeeNumber","social_security_number","employeeSsn","tax_classification","employeeTaxClassification","department","employeeDepartment","position","employeePosition","email","employeeEmail","clabe","employeeClabe","rfc","employeeRfc","payment_interval","employeePaymentInterval","hiring_date","employeeHiringDate","contract_type","employeeContractType","work_day_type","employeeWorkdayType","risk_category","employeeRiskCategory","payroll_type","employeePayrollType","resource_source","employeeResourceSource","base_salary","employeeBaseSalary","daily_wage","employeeDailyWage","bank_code","employeeBankCode","setEmployeeData","Array","isArray","join","createEmployee","route","title","onChangeField","r","add","label","toggleAlert","sendData","propTypes","shape","string"],"mappings":"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","sourcesContent":["// Libraries\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { browserHistory } from 'react-router'\n\n// Components\nimport TextField from 'shared/textField'\nimport Datepicker from 'shared/datepicker'\nimport SelectField from 'shared/selectField'\nimport Button from 'shared/button'\nimport Alert from 'shared/alert'\nimport moment from 'moment'\n\n// Actions\nimport EditClientActions from 'actions/editClient'\nimport NotificationActions from 'actions/notifications'\nimport PaymentAccountsActions from 'actions/paymentAccounts'\n\n// Stores\nimport PaymentAccountsStore from 'stores/paymentAccounts'\nimport EmployeesStore from 'stores/employees'\n\nimport {\n  COUNTRY_LIST,\n  STATE_LIST,\n  PAYMENT_SCHEDULES,\n  TAX_CLASSIFICATIONS_EMPLOYEE,\n  CONTRACT_TYPE,\n  WORKDAY_TYPE,\n  RISK_CATEGORY,\n  PAYROLL_TYPE,\n  RESOURCE_ORIGIN\n} from 'shared/catalogs'\nimport { avoidBlankSpace } from 'utils'\n\n// Set where all the required field refs are going to be\n// stored so we can validate them all when submit\nconst requiredFields = new Set()\n\nfunction dateToString (d) {\n  return moment(d).format('YYYY-MM-DD')\n}\n\nfunction getCurrentState () {\n  return {\n    banksList: PaymentAccountsStore.getBanksList(),\n    ...EmployeesStore.getCurrentEmployee()\n  }\n}\n\nclass EditEmployee extends Component {\n  constructor () {\n    super()\n    this.data = {\n      requestInProgress: false,\n      alertOpen: false,\n      banksList: PaymentAccountsStore.getBanksList()\n    }\n    this.state = Object.assign({}, this.data, getCurrentState())\n    this._onChange = this._onChange.bind(this)\n  }\n\n  componentDidMount () {\n    // Adds listener, when the Store changes, trigger the _onChange callback func\n    EmployeesStore.addChangeListener(this._onChange)\n    PaymentAccountsStore.addChangeListener(this._onChange)\n    // If we are supposed to be editing a document, ask for document info\n    if (\n      !this.props.location.pathname.includes('/empleados/nuevo') &&\n      typeof this.props.params.id !== 'undefined'\n    ) {\n      this.setState({ isUpdate: true })\n      EditClientActions.getEmployeeData(this.props.params.id)\n    }\n\n    PaymentAccountsActions.getBanksList().catch(error => {\n      NotificationActions.error(error)\n    })\n  }\n\n  componentWillUnmount () {\n    // Removes the listener to avoid memory leaks\n    EmployeesStore.removeChangeListener(this._onChange)\n    // Clears the stored requiredFields\n    requiredFields.clear()\n  }\n\n  _onChange () {\n    // When the store changes, the state goes to it and pulls the updated data\n    // then sets it so the component rerenders\n    let state = getCurrentState()\n    this.setState(state)\n  }\n\n  toggleAlert () {\n    this.setState(prevState => ({\n      alertOpen: !prevState.alertOpen\n    }))\n  }\n\n  toggleCashPayment = () => {\n    this.setState(\n      state => ({ cashPayment: !state.cashPayment }),\n      () => {\n        requiredFields.delete(null)\n      }\n    )\n  }\n\n  onChangeField (field, e) {\n    const value = e._isAMomentObject ? e : e.target.value\n    this.setState({ [field]: value })\n  }\n\n  // Iterates over required fields and validates every one of them\n  // Then it returns true if all validations succeedeed, else false.\n  validateAll () {\n    return [...requiredFields] // Converts the Set() into an array\n      .filter(Boolean) // Filters the array from any falsy value\n      .map(form => form.validate()) // Calls the validate() method on each form\n      .every(e => e) // Checks if all validations suceeded\n  }\n\n  // Clears the current Document and redirects to the documents listing\n  returnToListing () {\n    this.setState({ requestInProgress: false })\n    EditClientActions.clearEmployee()\n    browserHistory.push('/empleados')\n  }\n\n  deleteEmployee () {\n    const { id } = this.props.params\n    EditClientActions.deleteEmployee(id)\n      .then(() => {\n        NotificationActions.success('El empleado ha sido borrado correctamente')\n        this.returnToListing()\n      })\n      .catch(err => NotificationActions.error(err))\n  }\n\n  sendData (e) {\n    e.preventDefault()\n    // Validates all required fields, then builds the data object using the values stored in the state\n    if (this.validateAll() && !this.state.requestInProgress) {\n      let data = {\n        employee: {\n          full_name: this.state.employeeFullName,\n          curp: this.state.employeeCurp,\n          country: this.state.employeeCountry,\n          state: this.state.employeeState,\n          employee_number: this.state.employeeEmployeeNumber,\n          social_security_number: this.state.employeeSsn,\n          tax_classification: this.state.employeeTaxClassification,\n          department: this.state.employeeDepartment,\n          position: this.state.employeePosition,\n          email: this.state.employeeEmail,\n          clabe: this.state.employeeClabe,\n          rfc: this.state.employeeRfc,\n          payment_interval: this.state.employeePaymentInterval,\n          hiring_date: dateToString(this.state.employeeHiringDate),\n          contract_type: this.state.employeeContractType,\n          work_day_type: this.state.employeeWorkdayType,\n          risk_category: this.state.employeeRiskCategory,\n          payroll_type: this.state.employeePayrollType,\n          resource_source: this.state.employeeResourceSource,\n          base_salary: this.state.employeeBaseSalary,\n          daily_wage: this.state.employeeDailyWage,\n          bank_code: this.state.employeeBankCode\n        }\n      }\n      // If the request is for update an existing employee, sets the id and calls the corresponding Action\n      // Otherwise, calls the action to create a new one.\n      this.setState({ requestInProgress: true }, () => {\n        if (this.state.isUpdate) {\n          let id = this.props.params.id\n          EditClientActions.setEmployeeData(id, data)\n            .then(() => {\n              NotificationActions.success(\n                'El empleado ha sido editado correctamente'\n              )\n              this.returnToListing()\n            })\n            .catch(error => {\n              if (Array.isArray(error)) {\n                NotificationActions.error(error.join('\\n'))\n              } else {\n                NotificationActions.error(error.error)\n              }\n              this.setState({ requestInProgress: false })\n            })\n        } else {\n          EditClientActions.createEmployee(data)\n            .then(() => {\n              NotificationActions.success(\n                'El empleado ha sido creado correctamente'\n              )\n              this.returnToListing()\n            })\n            .catch(error => {\n              if (Array.isArray(error)) {\n                NotificationActions.error(error.join('\\n'))\n              } else {\n                NotificationActions.error(error.error)\n              }\n              this.setState({ requestInProgress: false })\n            })\n        }\n      })\n    }\n  }\n\n  render () {\n    const {\n      isUpdate,\n      cashPayment,\n      banksList,\n      employeeFullName,\n      employeeEmployeeNumber,\n      employeeRfc,\n      employeeCurp,\n      employeeSsn,\n      employeeDepartment,\n      employeePosition,\n      employeeEmail,\n      employeeClabe,\n      employeeBaseSalary,\n      employeeDailyWage\n    } = this.state\n\n    return (\n      <div>\n        <Button\n          buttonStyle='link'\n          icon='chevron-double-left'\n          onClick={this.returnToListing.bind(this)}\n        >\n          Volver\n        </Button>\n        <br />\n        <br />\n        <h4 className='subheader-green'>{this.props.route.title}</h4>\n        <div className='columns'>\n          <div className='column is-8'>\n            <TextField\n              label='Nombre Completo'\n              value={avoidBlankSpace(employeeFullName)}\n              onChange={this.onChangeField.bind(this, 'employeeFullName')}\n              required\n              ref={r => requiredFields.add(r)}\n            />\n          </div>\n          <div className='column is-4'>\n            <TextField\n              label='No. de empleado'\n              value={avoidBlankSpace(employeeEmployeeNumber)}\n              onChange={this.onChangeField.bind(this, 'employeeEmployeeNumber')}\n              required\n              ref={r => requiredFields.add(r)}\n            />\n          </div>\n        </div>\n        <div className='columns'>\n          <div className='column'>\n            <TextField\n              label='RFC'\n              value={avoidBlankSpace(employeeRfc)}\n              onChange={this.onChangeField.bind(this, 'employeeRfc')}\n              required\n              ref={r => requiredFields.add(r)}\n            />\n          </div>\n          <div className='column'>\n            <TextField\n              label='CURP'\n              value={avoidBlankSpace(employeeCurp)}\n              onChange={this.onChangeField.bind(this, 'employeeCurp')}\n              required\n              ref={r => requiredFields.add(r)}\n            />\n          </div>\n          <div className='column'>\n            <TextField\n              label='No. de Seguro Social'\n              value={avoidBlankSpace(employeeSsn)}\n              onChange={this.onChangeField.bind(this, 'employeeSsn')}\n              required\n              ref={r => requiredFields.add(r)}\n            />\n          </div>\n        </div>\n\n        <div className='columns'>\n          <div className='column'>\n            <TextField\n              label='Departamento'\n              value={avoidBlankSpace(employeeDepartment)}\n              onChange={this.onChangeField.bind(this, 'employeeDepartment')}\n            />\n          </div>\n          <div className='column'>\n            <TextField\n              label='Puesto'\n              value={avoidBlankSpace(employeePosition)}\n              onChange={this.onChangeField.bind(this, 'employeePosition')}\n            />\n          </div>\n          <div className='column'>\n            <TextField\n              label='Email'\n              type='email'\n              value={avoidBlankSpace(employeeEmail)}\n              onChange={this.onChangeField.bind(this, 'employeeEmail')}\n            />\n          </div>\n        </div>\n        <div className='columns'>\n          <div className='column'>\n            <SelectField\n              label='Estado'\n              placeholder='Selecciona'\n              options={STATE_LIST}\n              optionsConfig={{ id: 'state', label: 'label' }}\n              value={this.state.employeeState}\n              onChange={this.onChangeField.bind(this, 'employeeState')}\n              required\n              ref={r => requiredFields.add(r)}\n              showId\n            />\n          </div>\n          <div className='column'>\n            <SelectField\n              label='País'\n              placeholder='Selecciona'\n              options={COUNTRY_LIST}\n              value={this.state.employeeCountry}\n              onChange={this.onChangeField.bind(this, 'employeeCountry')}\n              required\n              ref={r => requiredFields.add(r)}\n              showId\n            />\n          </div>\n          <div className='column'>\n            <Datepicker\n              label='Fecha de Ingreso'\n              value={this.state.employeeHiringDate}\n              onChange={this.onChangeField.bind(this, 'employeeHiringDate')}\n              required\n              ref={r => requiredFields.add(r)}\n            />\n          </div>\n        </div>\n        <hr className='visual-rest visual-rest--margin-16px' />\n        <h5 className='body-bold'>Datos de pago</h5>\n\n        <div className='columns'>\n          <div className='column'>\n            <SelectField\n              label='Periodicidad pago'\n              placeholder='Selecciona Periodicidad del pago'\n              options={PAYMENT_SCHEDULES}\n              value={this.state.employeePaymentInterval}\n              onChange={this.onChangeField.bind(\n                this,\n                'employeePaymentInterval'\n              )}\n              required\n              ref={r => requiredFields.add(r)}\n              showId\n            />\n          </div>\n          <div className='column'>\n            <SelectField\n              label='Régimen'\n              placeholder='Selecciona Régimen Fiscal'\n              options={TAX_CLASSIFICATIONS_EMPLOYEE}\n              value={this.state.employeeTaxClassification}\n              onChange={this.onChangeField.bind(\n                this,\n                'employeeTaxClassification'\n              )}\n              required\n              ref={r => requiredFields.add(r)}\n              showId\n            />\n          </div>\n          <div className='column'>\n            <SelectField\n              label='Tipo Contrato'\n              placeholder='Selecciona Tipo de Contrato'\n              options={CONTRACT_TYPE}\n              value={this.state.employeeContractType}\n              onChange={this.onChangeField.bind(this, 'employeeContractType')}\n              required\n              ref={r => requiredFields.add(r)}\n              showId\n            />\n          </div>\n        </div>\n        <div className='columns'>\n          <div className='column'>\n            <SelectField\n              label='Tipo Jornada'\n              placeholder='Selecciona Jornada'\n              options={WORKDAY_TYPE}\n              value={this.state.employeeWorkdayType}\n              onChange={this.onChangeField.bind(this, 'employeeWorkdayType')}\n              required\n              ref={r => requiredFields.add(r)}\n              showId\n            />\n          </div>\n          <div className='column'>\n            <SelectField\n              label='Clase de Riesgo'\n              placeholder='Selecciona Clase de Riesgo'\n              options={RISK_CATEGORY}\n              value={this.state.employeeRiskCategory}\n              onChange={this.onChangeField.bind(this, 'employeeRiskCategory')}\n              required\n              ref={r => requiredFields.add(r)}\n              showId\n            />\n          </div>\n          <div className='column'>\n            <SelectField\n              label='Tipo de nómina'\n              placeholder='Tipo de nómina'\n              options={PAYROLL_TYPE}\n              value={this.state.employeePayrollType}\n              onChange={this.onChangeField.bind(this, 'employeePayrollType')}\n              required\n              ref={r => requiredFields.add(r)}\n              showId\n            />\n          </div>\n          <div className='column'>\n            <SelectField\n              label='Origen del recurso'\n              placeholder='Origen del recurso'\n              options={RESOURCE_ORIGIN}\n              value={this.state.employeeResourceSource}\n              onChange={this.onChangeField.bind(this, 'employeeResourceSource')}\n              required\n              ref={r => requiredFields.add(r)}\n              showId\n            />\n          </div>\n        </div>\n        <div className='columns'>\n          <div className='column'>\n            <SelectField\n              label='Código del banco'\n              placeholder='Selecciona un banco'\n              options={banksList}\n              value={this.state.employeeBankCode}\n              onChange={this.onChangeField.bind(this, 'employeeBankCode')}\n              required={!cashPayment}\n              disabled={cashPayment}\n              ref={r =>\n                cashPayment ? requiredFields.delete(r) : requiredFields.add(r)\n              }\n            />\n            <label className='checkbox'>\n              <input\n                type='checkbox'\n                onChange={this.toggleCashPayment}\n                checked={cashPayment}\n              />\n              &nbsp;Pago en efectivo\n            </label>\n          </div>\n          <div className='column'>\n            <TextField\n              label='CLABE'\n              value={avoidBlankSpace(employeeClabe)}\n              onChange={this.onChangeField.bind(this, 'employeeClabe')}\n              minLength={18}\n              type='number'\n              required={!cashPayment}\n              disabled={cashPayment}\n              ref={r =>\n                cashPayment ? requiredFields.delete(r) : requiredFields.add(r)\n              }\n            />\n          </div>\n          <div className='column'>\n            <TextField\n              label='Salario base cotización'\n              type='number'\n              value={avoidBlankSpace(employeeBaseSalary)}\n              onChange={this.onChangeField.bind(this, 'employeeBaseSalary')}\n              required\n              ref={r => requiredFields.add(r)}\n            />\n          </div>\n          <div className='column'>\n            <TextField\n              label='Salario diario integrado'\n              type='number'\n              value={avoidBlankSpace(employeeDailyWage)}\n              onChange={this.onChangeField.bind(this, 'employeeDailyWage')}\n              required\n              ref={r => requiredFields.add(r)}\n            />\n          </div>\n        </div>\n        <br />\n        <div className='caption required'>* Campos obligatorios</div>\n        <br />\n        <div className='flex-end'>\n          <Button icon='cancel' onClick={this.returnToListing.bind(this)}>\n            Cancelar\n          </Button>\n          {isUpdate ? (\n            <Button\n              buttonStyle='danger'\n              icon='delete'\n              type='button'\n              onClick={this.toggleAlert.bind(this)}\n            >\n              Eliminar Empleado\n            </Button>\n          ) : null}\n          <Button\n            buttonStyle='primary'\n            icon='content-save'\n            onClick={this.sendData.bind(this)}\n            loading={this.state.requestInProgress}\n          >\n            Guardar\n          </Button>\n        </div>\n        <Alert\n          isActive={this.state.alertOpen}\n          toggleAlert={this.toggleAlert.bind(this)}\n          onSubmit={this.deleteEmployee.bind(this)}\n        />\n      </div>\n    )\n  }\n}\n\nEditEmployee.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string\n  }),\n  params: PropTypes.shape({\n    id: PropTypes.string\n  }),\n  route: PropTypes.shape({\n    title: PropTypes.string\n  })\n}\nexport default EditEmployee\n"]},"metadata":{},"sourceType":"module"}