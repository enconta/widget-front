{"ast":null,"code":"import _objectSpread from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/editClient/paymentAccounts/index.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router';\nimport IconButton from 'shared/iconButton';\nimport Card from 'shared/card';\nimport Advertisment from './aviso';\nimport Tabs from 'shared/tabs';\nimport { replaceUnderScore } from 'utils';\nimport classNames from 'classnames';\nimport pluralize from 'pluralize';\nimport NotificationsActions from 'actions/notifications';\nimport PaymentAccountsActions from 'actions/paymentAccounts';\nimport PaymentAccountsStore from 'stores/paymentAccounts';\nvar TabList = Tabs.TabList,\n    Tab = Tabs.Tab,\n    TabPanels = Tabs.TabPanels,\n    TabPanel = Tabs.TabPanel;\n\nfunction getCurrentState() {\n  return {\n    paymentAccounts: PaymentAccountsStore.getPaymentAccounts(),\n    inactiveList: [],\n    activeList: []\n  };\n}\n\nvar PaymentAccounts =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PaymentAccounts, _Component);\n\n  function PaymentAccounts(props) {\n    var _this;\n\n    _classCallCheck(this, PaymentAccounts);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PaymentAccounts).call(this, props));\n\n    _this.toggleAccountStatus = function (id) {\n      PaymentAccountsActions.toggleStatus(id).then(function (r) {\n        NotificationsActions.success(r.message);\n      }).catch(function (r) {\n        NotificationsActions.error(r.message);\n      });\n    };\n\n    _this.state = _objectSpread({}, getCurrentState());\n    _this._onChange = _this._onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(PaymentAccounts, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      PaymentAccountsStore.addChangeListener(this._onChange);\n      PaymentAccountsActions.getList();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.location.search !== prevProps.location.search) {\n        this.loadData(this.props);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      PaymentAccountsStore.removeChangeListener(this._onChange);\n    }\n  }, {\n    key: \"_onChange\",\n    value: function _onChange() {\n      var state = getCurrentState(); // store the active accounts in the array activeList\n\n      var i;\n\n      for (i = 0; i < state.paymentAccounts.length; i++) {\n        if (state.paymentAccounts[i].active) {\n          state.activeList.push(state.paymentAccounts[i]);\n        } else {\n          // store the inactive account in the array inactiveList\n          state.inactiveList.push(state.paymentAccounts[i]);\n        }\n      }\n\n      this.setState(state);\n    }\n  }, {\n    key: \"loadData\",\n    value: function loadData() {\n      var params = _objectSpread({\n        paginated: true\n      }, this.props.location.query);\n\n      PaymentAccountsActions.getList(params);\n    }\n  }, {\n    key: \"renderPaymentAccounts\",\n    value: function renderPaymentAccounts(status) {\n      var statusList = status ? this.state.activeList : this.state.inactiveList;\n      var renderPaymentAccounts = React.createElement(\"div\", {\n        className: \"block unselectable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"No hay cuentas de pago\"));\n\n      if (statusList.length > 0) {\n        renderPaymentAccounts = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }), React.createElement(Advertisment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"columns is-multiline\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, statusList.map(function (_ref) {\n          var id = _ref.id,\n              name = _ref.name,\n              bankName = _ref.bank_name,\n              number = _ref.account_number,\n              type = _ref.account_type,\n              active = _ref.active,\n              belvo = _ref.belvo;\n          return React.createElement(\"div\", {\n            className: \"column is-4\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107\n            },\n            __self: this\n          }, React.createElement(Card, {\n            key: id,\n            className: \"card--strech\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"payment-account-card\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"payment-account-card__alias\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111\n            },\n            __self: this\n          }, \" \", name || '(Sin Nombre)'), React.createElement(Link, {\n            to: \"/cuenta-de-pago/\".concat(id),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112\n            },\n            __self: this\n          }, React.createElement(IconButton, {\n            icon: \"pencil\",\n            tooltip: \"Editar\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113\n            },\n            __self: this\n          }))), React.createElement(\"p\", {\n            className: \"is-uppercase\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116\n            },\n            __self: this\n          }, replaceUnderScore(bankName), \" - \", number), !belvo && React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120\n            },\n            __self: this\n          }, type === null ? '' : type === 'debit' ? 'Débito' : 'Crédito'), React.createElement(\"div\", {\n            className: \"payment-account-card__status\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130\n            },\n            __self: this\n          }, 'Estatus: ', React.createElement(\"span\", {\n            className: classNames({\n              'payment-account-card__status--active': active,\n              'payment-account-card__status--inactive': !active\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132\n            },\n            __self: this\n          }, active ? 'Activa' : 'Desactivada')), belvo && React.createElement(\"i\", {\n            className: classNames(\"icon-button--active mdi mdi-autorenew\", {\n              'payment-account-card__status--active': active\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 142\n            },\n            __self: this\n          })))));\n        })));\n      }\n\n      return renderPaymentAccounts;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          activeList = _this$state.activeList,\n          inactiveList = _this$state.inactiveList;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(Tabs, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(TabList, {\n        isToggle: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(Tab, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Activas\"), React.createElement(Tab, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"Inactivas\"), React.createElement(\"p\", {\n        className: \"accountsNumber unselectable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"Actualmente tienes\", ' ', React.createElement(\"span\", {\n        className: \"has-text-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, Number(activeList.length)), ' ', \"cuentas \", pluralize('activa', activeList.length), \" y\", ' ', React.createElement(\"span\", {\n        className: \"has-text-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, Number(inactiveList.length)), ' ', pluralize('inactiva', inactiveList.length)), React.createElement(\"p\", {\n        className: \"accountsNumber\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"Cuenta con sincronizaci\\xF3n autom\\xE1tica\"), React.createElement(\"i\", {\n        className: \"mdi mdi-autorenew payment-account-card__status--active\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      })), React.createElement(TabPanels, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(TabPanel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, this.renderPaymentAccounts(true)), React.createElement(TabPanel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, this.renderPaymentAccounts(false)))));\n    }\n  }]);\n\n  return PaymentAccounts;\n}(Component);\n\nPaymentAccounts.propTypes = {\n  location: PropTypes.object\n};\nexport default PaymentAccounts;","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/editClient/paymentAccounts/index.js"],"names":["React","Component","PropTypes","Link","IconButton","Card","Advertisment","Tabs","replaceUnderScore","classNames","pluralize","NotificationsActions","PaymentAccountsActions","PaymentAccountsStore","TabList","Tab","TabPanels","TabPanel","getCurrentState","paymentAccounts","getPaymentAccounts","inactiveList","activeList","PaymentAccounts","props","toggleAccountStatus","id","toggleStatus","then","r","success","message","catch","error","state","_onChange","bind","addChangeListener","getList","prevProps","location","search","loadData","removeChangeListener","i","length","active","push","setState","params","paginated","query","status","statusList","renderPaymentAccounts","map","name","bankName","bank_name","number","account_number","type","account_type","belvo","Number","propTypes","object"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router'\n\nimport IconButton from 'shared/iconButton'\nimport Card from 'shared/card'\nimport Advertisment from './aviso'\nimport Tabs from 'shared/tabs'\nimport { replaceUnderScore } from 'utils'\nimport classNames from 'classnames'\nimport pluralize from 'pluralize'\n\nimport NotificationsActions from 'actions/notifications'\nimport PaymentAccountsActions from 'actions/paymentAccounts'\n\nimport PaymentAccountsStore from 'stores/paymentAccounts'\n\nconst { TabList, Tab, TabPanels, TabPanel } = Tabs\n\nfunction getCurrentState () {\n  return {\n    paymentAccounts: PaymentAccountsStore.getPaymentAccounts(),\n    inactiveList: [],\n    activeList: []\n  }\n}\n\nclass PaymentAccounts extends Component {\n  constructor (props) {\n    super(props)\n    this.state = { ...getCurrentState() }\n    this._onChange = this._onChange.bind(this)\n  }\n\n  componentDidMount () {\n    PaymentAccountsStore.addChangeListener(this._onChange)\n    PaymentAccountsActions.getList()\n  }\n\n  componentDidUpdate (prevProps) {\n    if (this.props.location.search !== prevProps.location.search) {\n      this.loadData(this.props)\n    }\n  }\n\n  componentWillUnmount () {\n    PaymentAccountsStore.removeChangeListener(this._onChange)\n  }\n\n  _onChange () {\n    const state = getCurrentState()\n    // store the active accounts in the array activeList\n    var i\n    for (i = 0; i < state.paymentAccounts.length; i++) {\n      if (state.paymentAccounts[i].active) {\n        state.activeList.push(state.paymentAccounts[i])\n      } else {\n        // store the inactive account in the array inactiveList\n        state.inactiveList.push(state.paymentAccounts[i])\n      }\n    }\n    this.setState(state)\n  }\n\n  loadData () {\n    const params = {\n      paginated: true,\n      ...this.props.location.query\n    }\n    PaymentAccountsActions.getList(params)\n  }\n\n  toggleAccountStatus = id => {\n    PaymentAccountsActions.toggleStatus(id)\n      .then(r => {\n        NotificationsActions.success(r.message)\n      })\n      .catch(r => {\n        NotificationsActions.error(r.message)\n      })\n  }\n\n  renderPaymentAccounts (status) {\n    let statusList = status ? this.state.activeList : this.state.inactiveList\n    let renderPaymentAccounts = (\n      <div className='block unselectable'>\n        <p>No hay cuentas de pago</p>\n      </div>\n    )\n    if (statusList.length > 0) {\n      renderPaymentAccounts = (\n        <div>\n          <br />\n          <Advertisment />\n          <br />\n          <div className='columns is-multiline'>\n            {statusList.map(\n              ({\n                id,\n                name,\n                bank_name: bankName,\n                account_number: number,\n                account_type: type,\n                active,\n                belvo\n              }) => (\n                <div className='column is-4'>\n                  <Card key={id} className='card--strech'>\n                    <div className='payment-account-card'>\n                      <div className='payment-account-card__alias'>\n                        <p> {name || '(Sin Nombre)'}</p>\n                        <Link to={`/cuenta-de-pago/${id}`}>\n                          <IconButton icon='pencil' tooltip='Editar' />\n                        </Link>\n                      </div>\n                      <p className='is-uppercase'>\n                        {replaceUnderScore(bankName)} - {number}\n                      </p>\n                      {!belvo && (\n                        <p>\n                          {type === null\n                            ? ''\n                            : type === 'debit'\n                              ? 'Débito'\n                              : 'Crédito'}\n                        </p>\n                      )}\n\n                      <div className='payment-account-card__status'>\n                        <p>\n                          {'Estatus: '}\n                          <span\n                            className={classNames({\n                              'payment-account-card__status--active': active,\n                              'payment-account-card__status--inactive': !active\n                            })}\n                          >\n                            {active ? 'Activa' : 'Desactivada'}\n                          </span>\n                        </p>\n                        {belvo && (\n                          <i\n                            className={classNames(\n                              `icon-button--active mdi mdi-autorenew`,\n                              {\n                                'payment-account-card__status--active': active\n                              }\n                            )}\n                          />\n                        )}\n                      </div>\n                    </div>\n                  </Card>\n                </div>\n              )\n            )}\n          </div>\n        </div>\n      )\n    }\n    return renderPaymentAccounts\n  }\n\n  render () {\n    const { activeList, inactiveList } = this.state\n    return (\n      <div>\n        <Tabs>\n          <TabList isToggle>\n            <Tab>Activas</Tab>\n            <Tab>Inactivas</Tab>\n            <p className='accountsNumber unselectable'>\n              Actualmente tienes{' '}\n              <span className='has-text-weight-bold'>\n                {Number(activeList.length)}\n              </span>{' '}\n              cuentas {pluralize('activa', activeList.length)} y{' '}\n              <span className='has-text-weight-bold'>\n                {Number(inactiveList.length)}\n              </span>{' '}\n              {pluralize('inactiva', inactiveList.length)}\n            </p>\n            <p className='accountsNumber'>\n              Cuenta con sincronización automática\n            </p>\n            <i className='mdi mdi-autorenew payment-account-card__status--active' />\n          </TabList>\n          <TabPanels>\n            <TabPanel>{this.renderPaymentAccounts(true)}</TabPanel>\n            <TabPanel>{this.renderPaymentAccounts(false)}</TabPanel>\n          </TabPanels>\n        </Tabs>\n      </div>\n    )\n  }\n}\n\nPaymentAccounts.propTypes = {\n  location: PropTypes.object\n}\n\nexport default PaymentAccounts\n"]},"metadata":{},"sourceType":"module"}