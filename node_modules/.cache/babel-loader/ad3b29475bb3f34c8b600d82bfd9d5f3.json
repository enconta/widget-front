{"ast":null,"code":"import _toConsumableArray from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/documents/new/index.js\";\n// Libraries\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { browserHistory, Link } from 'react-router';\nimport classNames from 'classnames';\nimport update from 'immutability-helper';\nimport validator from 'validator';\nimport moment from 'moment';\nimport AppSignal from 'appsignal'; // Components\n\nimport NotificationsActions from 'actions/notifications';\nimport TextField from 'shared/textField';\nimport SelectField from 'shared/selectField';\nimport SelectFile from 'shared/selectFile';\nimport MonthPicker from 'shared/monthPicker';\nimport Button from 'shared/button';\nimport Alert from 'shared/alert';\nimport Card from 'shared/card';\nimport API from 'api'; // Catalogs\n\nimport { DOCUMENT_CATEGORIES } from 'shared/catalogs';\nvar requiredFields = new Set();\nvar DEFAULT_KEY = DOCUMENT_CATEGORIES[1].id; // Document keys\n\nvar DOCUMENT_KEY = 'regular_document';\nvar DOCUMENT_DATE_KEY = 'tax_month';\nvar DOCUMENT_TYPE_KEY = 'document_type';\nvar DOCUMENT_NAME_KEY = 'name';\nvar DOCUMENT_FILE_CONTENT_TYPE_KEY = 'content_type';\nvar DOCUMENT_FILE_DATA_KEY = 'attached_file';\nvar DOCUMENT_FILE_FILENAME_KEY = 'original_filename';\n\nvar NewDocument =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewDocument, _Component);\n\n  function NewDocument(props) {\n    var _document;\n\n    var _this;\n\n    _classCallCheck(this, NewDocument);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NewDocument).call(this, props));\n\n    _this.renderAdvertisment = function () {\n      var lastAccountingPeriod = _this.state.lastAccountingPeriod;\n      var link = lastAccountingPeriod ? \"/mi-contabilidad/\".concat(Number(lastAccountingPeriod.id), \"/ver\") : '/mi-contabilidad/';\n      return React.createElement(\"div\", {\n        className: \"app-wide-notifications\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"app-wide-notifications--notification light-blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"columns is-vcentered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column is-narrow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"mdi mdi-information-outline icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"column is-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: link,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"app-wide-notifications--notification__text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, \"Ahora tus res\\xFAmenes de movimientos se suben\", React.createElement(\"span\", {\n        className: \"text--highlighted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, \" aqu\\xED.\")))))));\n    };\n\n    _this.data = {\n      loadingDocument: false,\n      savingDocument: false,\n      modalOpen: false,\n      alertOpen: false,\n      isValid: {\n        name: true,\n        type: true,\n        doc: true\n      },\n      isUpdate: _this.isUpdate(),\n      document: (_document = {\n        id: ''\n      }, _defineProperty(_document, DOCUMENT_NAME_KEY, ''), _defineProperty(_document, DOCUMENT_TYPE_KEY, DEFAULT_KEY), _defineProperty(_document, DOCUMENT_DATE_KEY, moment().subtract(1, 'month').format('YYYY-MM-DD')), _defineProperty(_document, DOCUMENT_FILE_DATA_KEY, ''), _defineProperty(_document, DOCUMENT_FILE_FILENAME_KEY, ''), _defineProperty(_document, DOCUMENT_FILE_CONTENT_TYPE_KEY, ''), _defineProperty(_document, \"url\", ''), _defineProperty(_document, \"lastAccountingPeriod\", null), _document)\n    };\n    _this.state = Object.assign({}, _this.data);\n    _this._handleEscape = _this._handleEscape.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.saveDocument = _this.saveDocument.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // If is update, get document on component mount\n\n\n  _createClass(NewDocument, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var params = this.props.params;\n      if (this.isUpdate()) this.getDocument(params.id);\n      this.getLastAccountingPeriod();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      requiredFields.clear();\n    } // Get document with documentID from API\n\n  }, {\n    key: \"getDocument\",\n    value: function getDocument(documentId) {\n      var _this2 = this;\n\n      this.setState({\n        loadingDocument: true\n      }, function () {\n        API.Documents.GetDocument(documentId).then(function (r) {\n          _this2.setState({\n            document: r[DOCUMENT_KEY],\n            loadingDocument: false\n          });\n        }).catch(function (error) {\n          AppSignal.sendError(error);\n          NotificationsActions.error('Error al obtener documento');\n          browserHistory.push('/documentos');\n        });\n      });\n    }\n  }, {\n    key: \"getLastAccountingPeriod\",\n    value: function getLastAccountingPeriod() {\n      var _this3 = this;\n\n      API.AccountingPeriods.List().then(function (_ref) {\n        var accountingPeriods = _ref.accounting_periods;\n\n        _this3.setState({\n          lastAccountingPeriod: accountingPeriods[0]\n        });\n      });\n    } // Return true if we are updating a document\n\n  }, {\n    key: \"isUpdate\",\n    value: function isUpdate() {\n      var _this$props = this.props,\n          location = _this$props.location,\n          params = _this$props.params;\n      return location.pathname.includes('/documentos/editar') && typeof params.id !== 'undefined';\n    } // Handle changes to document\n\n  }, {\n    key: \"onChangeDocument\",\n    value: function onChangeDocument(field, e) {\n      this.setState({\n        document: update(this.state.document, _defineProperty({}, field, {\n          $set: e.target.value\n        }))\n      });\n    } // Sets Document date with Moment\n\n  }, {\n    key: \"onChangeDate\",\n    value: function onChangeDate(date) {\n      this.setState({\n        document: update(this.state.document, _defineProperty({}, DOCUMENT_DATE_KEY, {\n          $set: date\n        }))\n      });\n    }\n  }, {\n    key: \"toggleAlert\",\n    value: function toggleAlert() {\n      this.setState(function (prevState) {\n        return {\n          alertOpen: !prevState.alertOpen\n        };\n      });\n    } // Validates if a document file has been set, don't bother when is an update\n\n  }, {\n    key: \"isValidDocument\",\n    value: function isValidDocument() {\n      var _this$state = this.state,\n          isUpdate = _this$state.isUpdate,\n          document = _this$state.document;\n      if (isUpdate) return true;\n      var isValid = !validator.isEmpty(document[DOCUMENT_FILE_DATA_KEY]);\n      this.setState({\n        isValid: update(this.state.isValid, {\n          doc: {\n            $set: isValid\n          }\n        })\n      });\n      return isValid;\n    } // Iterates over required fields and validates every one of them\n    // Then it returns true if all validations succeed, else false.\n\n  }, {\n    key: \"validateAll\",\n    value: function validateAll() {\n      return _toConsumableArray(requiredFields) // Converts the Set() into an array\n      .filter(Boolean) // Filters the array from any falsy value\n      .map(function (form) {\n        return form.validate();\n      }) // Calls the validate() method on each form\n      .every(function (e) {\n        return e;\n      }); // Checks if all validations suceeded\n    } // Sets Document data (base64 string) and original filename from SelectFile component\n\n  }, {\n    key: \"setDocument\",\n    value: function setDocument(doc, filename, contentType) {\n      var _document2;\n\n      var document = (_document2 = {}, _defineProperty(_document2, DOCUMENT_FILE_DATA_KEY, doc), _defineProperty(_document2, DOCUMENT_FILE_FILENAME_KEY, filename), _defineProperty(_document2, DOCUMENT_FILE_CONTENT_TYPE_KEY, contentType), _document2);\n      this.setState({\n        document: Object.assign(this.state.document, document)\n      });\n      this.isValidDocument();\n    } // Listen for key presses, close the dialog if escape is true\n\n  }, {\n    key: \"_handleEscape\",\n    value: function _handleEscape(key, b) {\n      if (key.keyCode === 27) {\n        window.removeEventListener('keydown', this._handleEscape, true);\n        this.setState({\n          modalOpen: false\n        });\n      }\n    } // Toggles SelectFile component open/closed\n\n  }, {\n    key: \"toggleFileDialog\",\n    value: function toggleFileDialog() {\n      if (!this.state.modalOpen) {\n        window.addEventListener('keydown', this._handleEscape, true);\n      }\n\n      this.setState(function (prevState) {\n        return {\n          modalOpen: !prevState.modalOpen\n        };\n      });\n    } // Return a new document with data for creation\n\n  }, {\n    key: \"buildCreateDocument\",\n    value: function buildCreateDocument() {\n      var _ref2;\n\n      var document = this.state.document;\n      return _ref2 = {}, _defineProperty(_ref2, DOCUMENT_NAME_KEY, document[DOCUMENT_NAME_KEY]), _defineProperty(_ref2, DOCUMENT_DATE_KEY, moment(document[DOCUMENT_DATE_KEY]).format('YYYY-MM-01')), _defineProperty(_ref2, DOCUMENT_TYPE_KEY, document[DOCUMENT_TYPE_KEY]), _defineProperty(_ref2, DOCUMENT_FILE_DATA_KEY, document[DOCUMENT_FILE_DATA_KEY]), _defineProperty(_ref2, DOCUMENT_FILE_CONTENT_TYPE_KEY, document[DOCUMENT_FILE_CONTENT_TYPE_KEY]), _defineProperty(_ref2, DOCUMENT_FILE_FILENAME_KEY, document[DOCUMENT_FILE_FILENAME_KEY]), _ref2;\n    } // Handles the creation of the document\n\n  }, {\n    key: \"handleCreate\",\n    value: function handleCreate() {\n      var _this4 = this;\n\n      this.setState({\n        savingDocument: true\n      }, function () {\n        API.Documents.CreateDocument(_defineProperty({}, DOCUMENT_KEY, _this4.buildCreateDocument())).then(function (r) {\n          _this4.setState({\n            savingDocument: false\n          });\n\n          NotificationsActions.success(r.message);\n          browserHistory.push('/documentos');\n        }).catch(function (error) {\n          AppSignal.sendError(error);\n\n          _this4.setState({\n            savingDocument: false\n          });\n\n          NotificationsActions.error(error);\n        });\n      });\n    } // Handles document update\n\n  }, {\n    key: \"handleUpdate\",\n    value: function handleUpdate() {\n      var _this5 = this;\n\n      this.setState({\n        savingDocument: true\n      }, function () {\n        var document = _defineProperty({}, DOCUMENT_KEY, _this5.buildUpdateDocument());\n\n        API.Documents.UpdateDocument(_this5.state.document.id, document).then(function (r) {\n          _this5.setState({\n            savingDocument: false\n          });\n\n          NotificationsActions.success('Documento actualizado');\n          browserHistory.push('/documentos');\n        }).catch(function (err) {\n          _this5.setState({\n            savingDocument: false\n          });\n\n          console.log(err);\n          NotificationsActions.error('Error al actualizar documento.');\n        });\n      });\n    } // Return a new document with update only values\n\n  }, {\n    key: \"buildUpdateDocument\",\n    value: function buildUpdateDocument() {\n      var _ref3;\n\n      var document = this.state.document;\n      return _ref3 = {}, _defineProperty(_ref3, DOCUMENT_NAME_KEY, document[DOCUMENT_NAME_KEY]), _defineProperty(_ref3, DOCUMENT_DATE_KEY, document[DOCUMENT_DATE_KEY]), _defineProperty(_ref3, DOCUMENT_TYPE_KEY, document[DOCUMENT_TYPE_KEY]), _ref3;\n    } // Saves document to database\n\n  }, {\n    key: \"saveDocument\",\n    value: function saveDocument() {\n      var _this$state2 = this.state,\n          loadingDocument = _this$state2.loadingDocument,\n          isUpdate = _this$state2.isUpdate;\n      if (loadingDocument) return null;\n\n      if (isUpdate) {\n        this.handleUpdate();\n      } else if (this.validateAll() && this.isValidDocument()) {\n        this.handleCreate();\n      }\n    } // Remove a document from server\n\n  }, {\n    key: \"deleteDocument\",\n    value: function deleteDocument() {\n      var _this6 = this;\n\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.state.document,\n          id = _ref4.id;\n\n      this.setState({\n        loadingDocument: true\n      }, function () {\n        API.Documents.DeleteDocument(id).then(function (r) {\n          NotificationsActions.success('Documento borrado');\n\n          _this6.setState({\n            loadingDocument: false\n          });\n\n          browserHistory.push('/documentos');\n        }).catch(function (r) {\n          NotificationsActions.error('Hubo un error al borrar el documento');\n\n          _this6.setState({\n            loadingDocument: false\n          });\n\n          console.error(r);\n        });\n      });\n    } // Render delete button when updating a document\n\n  }, {\n    key: \"renderDeleteButton\",\n    value: function renderDeleteButton() {\n      var _ref5 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.state,\n          isUpdate = _ref5.isUpdate;\n\n      if (!isUpdate) return null;\n      return React.createElement(Button, {\n        icon: \"delete\",\n        onClick: this.toggleAlert.bind(this),\n        buttonStyle: \"dangerInv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, \"Borrar\");\n    } // Render all save and update buttons\n\n  }, {\n    key: \"renderSaveButtons\",\n    value: function renderSaveButtons() {\n      var _this$state3 = this.state,\n          savingDocument = _this$state3.savingDocument,\n          isUpdate = _this$state3.isUpdate;\n      return React.createElement(\"div\", {\n        className: classNames({\n          'flex-between': isUpdate\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, this.renderDeleteButton(), React.createElement(\"div\", {\n        className: \"flex-end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/documentos\",\n        className: \"encontaButton--marginRight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, React.createElement(Button, {\n        icon: \"cancel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, \"Cancelar\")), React.createElement(Button, {\n        buttonStyle: \"primary\",\n        type: \"submit\",\n        icon: \"content-save\",\n        onClick: this.saveDocument,\n        loading: savingDocument,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, \"Guardar\")));\n    }\n  }, {\n    key: \"renderDocument\",\n    // Render new/update document form\n    value: function renderDocument() {\n      var _this$state4 = this.state,\n          doc = _this$state4.document,\n          isUpdate = _this$state4.isUpdate,\n          loadingDocument = _this$state4.loadingDocument;\n      if (loadingDocument && isUpdate) return null;\n      return React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, this.renderAdvertisment(), React.createElement(TextField, {\n        label: \"Nombre del documento\",\n        placeholder: \"Nombre del documento\",\n        value: doc[DOCUMENT_NAME_KEY],\n        onChange: this.onChangeDocument.bind(this, DOCUMENT_NAME_KEY),\n        minLength: 3,\n        ref: function ref(r) {\n          return requiredFields.add(r);\n        },\n        required: true,\n        onEnter: this.saveDocument,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column is-half\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, React.createElement(SelectField, {\n        options: DOCUMENT_CATEGORIES.slice(1),\n        label: \"Tipo de documento\",\n        onChange: this.onChangeDocument.bind(this, DOCUMENT_TYPE_KEY),\n        value: doc[DOCUMENT_TYPE_KEY],\n        placeholder: \"Selecciona el tipo de documento\",\n        ref: function ref(r) {\n          return requiredFields.add(r);\n        },\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      })), React.createElement(MonthPicker, {\n        className: \"column is-half\",\n        label: \"Periodo del Documento\",\n        onChange: this.onChangeDate.bind(this),\n        selected: doc[DOCUMENT_DATE_KEY],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: classNames('columns', {\n          'is-hidden': this.state.isUpdate\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"caption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, doc[DOCUMENT_FILE_FILENAME_KEY] ? \"Documento: \".concat(doc[DOCUMENT_FILE_FILENAME_KEY]) : 'Documento *'), React.createElement(\"div\", {\n        className: \"control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }, React.createElement(Button, {\n        buttonStyle: \"info\",\n        icon: \"plus\",\n        onClick: this.toggleFileDialog.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }, \"Seleccionar documento\")), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: classNames('help is-danger', {\n          'is-hidden': this.state.isValid.doc\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }, \"Debe seleccionar un documento\"))))), this.renderSaveButtons())));\n    } // Main render\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state5 = this.state,\n          isUpdate = _this$state5.isUpdate,\n          alertOpen = _this$state5.alertOpen;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"headline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      }, \"\".concat(isUpdate ? 'Editar' : 'Subir nuevo', \" documento\")), this.renderDocument(), React.createElement(SelectFile, {\n        isActive: this.state.modalOpen,\n        toggleModal: this.toggleFileDialog.bind(this),\n        title: \"Subir Documento\",\n        fileTypePlaceholder: \"documento\",\n        setFile: this.setDocument.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429\n        },\n        __self: this\n      }), React.createElement(Alert, {\n        isActive: alertOpen,\n        toggleAlert: this.toggleAlert.bind(this),\n        onSubmit: this.deleteDocument.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return NewDocument;\n}(Component);\n\nNewDocument.propTypes = {\n  location: PropTypes.object,\n  params: PropTypes.object\n};\nexport default NewDocument;","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/documents/new/index.js"],"names":["React","Component","PropTypes","browserHistory","Link","classNames","update","validator","moment","AppSignal","NotificationsActions","TextField","SelectField","SelectFile","MonthPicker","Button","Alert","Card","API","DOCUMENT_CATEGORIES","requiredFields","Set","DEFAULT_KEY","id","DOCUMENT_KEY","DOCUMENT_DATE_KEY","DOCUMENT_TYPE_KEY","DOCUMENT_NAME_KEY","DOCUMENT_FILE_CONTENT_TYPE_KEY","DOCUMENT_FILE_DATA_KEY","DOCUMENT_FILE_FILENAME_KEY","NewDocument","props","renderAdvertisment","lastAccountingPeriod","state","link","Number","data","loadingDocument","savingDocument","modalOpen","alertOpen","isValid","name","type","doc","isUpdate","document","subtract","format","Object","assign","_handleEscape","bind","saveDocument","params","getDocument","getLastAccountingPeriod","clear","documentId","setState","Documents","GetDocument","then","r","catch","error","sendError","push","AccountingPeriods","List","accountingPeriods","accounting_periods","location","pathname","includes","field","e","$set","target","value","date","prevState","isEmpty","filter","Boolean","map","form","validate","every","filename","contentType","isValidDocument","key","b","keyCode","window","removeEventListener","addEventListener","CreateDocument","buildCreateDocument","success","message","buildUpdateDocument","UpdateDocument","err","console","log","handleUpdate","validateAll","handleCreate","DeleteDocument","toggleAlert","renderDeleteButton","onChangeDocument","add","slice","onChangeDate","toggleFileDialog","renderSaveButtons","renderDocument","setDocument","deleteDocument","propTypes","object"],"mappings":"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","sourcesContent":["// Libraries\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { browserHistory, Link } from 'react-router'\nimport classNames from 'classnames'\nimport update from 'immutability-helper'\nimport validator from 'validator'\nimport moment from 'moment'\nimport AppSignal from 'appsignal'\n\n// Components\nimport NotificationsActions from 'actions/notifications'\nimport TextField from 'shared/textField'\nimport SelectField from 'shared/selectField'\nimport SelectFile from 'shared/selectFile'\nimport MonthPicker from 'shared/monthPicker'\nimport Button from 'shared/button'\nimport Alert from 'shared/alert'\nimport Card from 'shared/card'\nimport API from 'api'\n\n// Catalogs\nimport { DOCUMENT_CATEGORIES } from 'shared/catalogs'\n\nconst requiredFields = new Set()\n\nconst DEFAULT_KEY = DOCUMENT_CATEGORIES[1].id\n// Document keys\nconst DOCUMENT_KEY = 'regular_document'\nconst DOCUMENT_DATE_KEY = 'tax_month'\nconst DOCUMENT_TYPE_KEY = 'document_type'\nconst DOCUMENT_NAME_KEY = 'name'\nconst DOCUMENT_FILE_CONTENT_TYPE_KEY = 'content_type'\nconst DOCUMENT_FILE_DATA_KEY = 'attached_file'\nconst DOCUMENT_FILE_FILENAME_KEY = 'original_filename'\n\nclass NewDocument extends Component {\n  constructor (props) {\n    super(props)\n    this.data = {\n      loadingDocument: false,\n      savingDocument: false,\n      modalOpen: false,\n      alertOpen: false,\n      isValid: {\n        name: true,\n        type: true,\n        doc: true\n      },\n      isUpdate: this.isUpdate(),\n      document: {\n        id: '',\n        [DOCUMENT_NAME_KEY]: '',\n        [DOCUMENT_TYPE_KEY]: DEFAULT_KEY,\n        [DOCUMENT_DATE_KEY]: moment()\n          .subtract(1, 'month')\n          .format('YYYY-MM-DD'),\n        [DOCUMENT_FILE_DATA_KEY]: '',\n        [DOCUMENT_FILE_FILENAME_KEY]: '',\n        [DOCUMENT_FILE_CONTENT_TYPE_KEY]: '',\n        url: '',\n        lastAccountingPeriod: null\n      }\n    }\n    this.state = Object.assign({}, this.data)\n    this._handleEscape = this._handleEscape.bind(this)\n    this.saveDocument = this.saveDocument.bind(this)\n  }\n\n  // If is update, get document on component mount\n  componentDidMount () {\n    const { params } = this.props\n    if (this.isUpdate()) this.getDocument(params.id)\n    this.getLastAccountingPeriod()\n  }\n\n  componentWillUnmount () {\n    requiredFields.clear()\n  }\n\n  // Get document with documentID from API\n  getDocument (documentId) {\n    this.setState({ loadingDocument: true }, () => {\n      API.Documents.GetDocument(documentId)\n        .then(r => {\n          this.setState({\n            document: r[DOCUMENT_KEY],\n            loadingDocument: false\n          })\n        })\n        .catch(error => {\n          AppSignal.sendError(error)\n          NotificationsActions.error('Error al obtener documento')\n          browserHistory.push('/documentos')\n        })\n    })\n  }\n\n  getLastAccountingPeriod () {\n    API.AccountingPeriods.List().then(\n      ({ accounting_periods: accountingPeriods }) => {\n        this.setState({ lastAccountingPeriod: accountingPeriods[0] })\n      }\n    )\n  }\n\n  // Return true if we are updating a document\n  isUpdate () {\n    const { location, params } = this.props\n    return (\n      location.pathname.includes('/documentos/editar') &&\n      typeof params.id !== 'undefined'\n    )\n  }\n\n  // Handle changes to document\n  onChangeDocument (field, e) {\n    this.setState({\n      document: update(this.state.document, {\n        [field]: { $set: e.target.value }\n      })\n    })\n  }\n\n  // Sets Document date with Moment\n  onChangeDate (date) {\n    this.setState({\n      document: update(this.state.document, {\n        [DOCUMENT_DATE_KEY]: { $set: date }\n      })\n    })\n  }\n\n  toggleAlert () {\n    this.setState(prevState => ({ alertOpen: !prevState.alertOpen }))\n  }\n\n  // Validates if a document file has been set, don't bother when is an update\n  isValidDocument () {\n    const { isUpdate, document } = this.state\n    if (isUpdate) return true\n    const isValid = !validator.isEmpty(document[DOCUMENT_FILE_DATA_KEY])\n    this.setState({\n      isValid: update(this.state.isValid, { doc: { $set: isValid } })\n    })\n    return isValid\n  }\n\n  // Iterates over required fields and validates every one of them\n  // Then it returns true if all validations succeed, else false.\n  validateAll () {\n    return [...requiredFields] // Converts the Set() into an array\n      .filter(Boolean) // Filters the array from any falsy value\n      .map(form => form.validate()) // Calls the validate() method on each form\n      .every(e => e) // Checks if all validations suceeded\n  }\n\n  // Sets Document data (base64 string) and original filename from SelectFile component\n  setDocument (doc, filename, contentType) {\n    const document = {\n      [DOCUMENT_FILE_DATA_KEY]: doc,\n      [DOCUMENT_FILE_FILENAME_KEY]: filename,\n      [DOCUMENT_FILE_CONTENT_TYPE_KEY]: contentType\n    }\n    this.setState({ document: Object.assign(this.state.document, document) })\n    this.isValidDocument()\n  }\n\n  // Listen for key presses, close the dialog if escape is true\n  _handleEscape (key, b) {\n    if (key.keyCode === 27) {\n      window.removeEventListener('keydown', this._handleEscape, true)\n      this.setState({ modalOpen: false })\n    }\n  }\n\n  // Toggles SelectFile component open/closed\n  toggleFileDialog () {\n    if (!this.state.modalOpen) {\n      window.addEventListener('keydown', this._handleEscape, true)\n    }\n    this.setState(prevState => ({ modalOpen: !prevState.modalOpen }))\n  }\n\n  // Return a new document with data for creation\n  buildCreateDocument () {\n    const { document } = this.state\n    return {\n      [DOCUMENT_NAME_KEY]: document[DOCUMENT_NAME_KEY],\n      [DOCUMENT_DATE_KEY]: moment(document[DOCUMENT_DATE_KEY]).format(\n        'YYYY-MM-01'\n      ),\n      [DOCUMENT_TYPE_KEY]: document[DOCUMENT_TYPE_KEY],\n      [DOCUMENT_FILE_DATA_KEY]: document[DOCUMENT_FILE_DATA_KEY],\n      [DOCUMENT_FILE_CONTENT_TYPE_KEY]:\n        document[DOCUMENT_FILE_CONTENT_TYPE_KEY],\n      [DOCUMENT_FILE_FILENAME_KEY]: document[DOCUMENT_FILE_FILENAME_KEY]\n    }\n  }\n\n  // Handles the creation of the document\n  handleCreate () {\n    this.setState({ savingDocument: true }, () => {\n      API.Documents.CreateDocument({\n        [DOCUMENT_KEY]: this.buildCreateDocument()\n      })\n        .then(r => {\n          this.setState({ savingDocument: false })\n          NotificationsActions.success(r.message)\n          browserHistory.push('/documentos')\n        })\n        .catch(error => {\n          AppSignal.sendError(error)\n          this.setState({ savingDocument: false })\n          NotificationsActions.error(error)\n        })\n    })\n  }\n\n  // Handles document update\n  handleUpdate () {\n    this.setState({ savingDocument: true }, () => {\n      const document = { [DOCUMENT_KEY]: this.buildUpdateDocument() }\n      API.Documents.UpdateDocument(this.state.document.id, document)\n        .then(r => {\n          this.setState({ savingDocument: false })\n          NotificationsActions.success('Documento actualizado')\n          browserHistory.push('/documentos')\n        })\n        .catch(err => {\n          this.setState({ savingDocument: false })\n          console.log(err)\n          NotificationsActions.error('Error al actualizar documento.')\n        })\n    })\n  }\n\n  // Return a new document with update only values\n  buildUpdateDocument () {\n    const { document } = this.state\n    return {\n      [DOCUMENT_NAME_KEY]: document[DOCUMENT_NAME_KEY],\n      [DOCUMENT_DATE_KEY]: document[DOCUMENT_DATE_KEY],\n      [DOCUMENT_TYPE_KEY]: document[DOCUMENT_TYPE_KEY]\n    }\n  }\n\n  // Saves document to database\n  saveDocument () {\n    const { loadingDocument, isUpdate } = this.state\n\n    if (loadingDocument) return null\n    if (isUpdate) {\n      this.handleUpdate()\n    } else if (this.validateAll() && this.isValidDocument()) {\n      this.handleCreate()\n    }\n  }\n\n  // Remove a document from server\n  deleteDocument ({ id } = this.state.document) {\n    this.setState({ loadingDocument: true }, () => {\n      API.Documents.DeleteDocument(id)\n        .then(r => {\n          NotificationsActions.success('Documento borrado')\n          this.setState({ loadingDocument: false })\n          browserHistory.push('/documentos')\n        })\n        .catch(r => {\n          NotificationsActions.error('Hubo un error al borrar el documento')\n          this.setState({ loadingDocument: false })\n          console.error(r)\n        })\n    })\n  }\n\n  // Render delete button when updating a document\n  renderDeleteButton ({ isUpdate } = this.state) {\n    if (!isUpdate) return null\n    return (\n      <Button\n        icon='delete'\n        onClick={this.toggleAlert.bind(this)}\n        buttonStyle='dangerInv'\n      >\n        Borrar\n      </Button>\n    )\n  }\n\n  // Render all save and update buttons\n  renderSaveButtons () {\n    const { savingDocument, isUpdate } = this.state\n\n    return (\n      <div className={classNames({ 'flex-between': isUpdate })}>\n        {this.renderDeleteButton()}\n        <div className='flex-end'>\n          <Link to='/documentos' className='encontaButton--marginRight'>\n            <Button icon='cancel'>Cancelar</Button>\n          </Link>\n          <Button\n            buttonStyle='primary'\n            type='submit'\n            icon='content-save'\n            onClick={this.saveDocument}\n            loading={savingDocument}\n          >\n            Guardar\n          </Button>\n        </div>\n      </div>\n    )\n  }\n  renderAdvertisment = () => {\n    const { lastAccountingPeriod } = this.state\n    const link = lastAccountingPeriod\n      ? `/mi-contabilidad/${Number(lastAccountingPeriod.id)}/ver`\n      : '/mi-contabilidad/'\n\n    return (\n      <div className='app-wide-notifications'>\n        <div className='app-wide-notifications--notification light-blue'>\n          <div className='columns is-vcentered'>\n            <div className='column is-narrow'>\n              <i className='mdi mdi-information-outline icon' />\n            </div>\n            <div className='column is-10'>\n              <Link to={link}>\n                <p className='app-wide-notifications--notification__text'>\n                  Ahora tus resúmenes de movimientos se suben\n                  <span className='text--highlighted'> aquí.</span>\n                </p>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n  // Render new/update document form\n  renderDocument () {\n    const { document: doc, isUpdate, loadingDocument } = this.state\n\n    if (loadingDocument && isUpdate) return null\n    return (\n      <div className='columns'>\n        <div className='column'>\n          <Card>\n            {this.renderAdvertisment()}\n            <TextField\n              label='Nombre del documento'\n              placeholder='Nombre del documento'\n              value={doc[DOCUMENT_NAME_KEY]}\n              onChange={this.onChangeDocument.bind(this, DOCUMENT_NAME_KEY)}\n              minLength={3}\n              ref={r => requiredFields.add(r)}\n              required\n              onEnter={this.saveDocument}\n            />\n            <div className='columns'>\n              <div className='column is-half'>\n                <SelectField\n                  options={DOCUMENT_CATEGORIES.slice(1)}\n                  label='Tipo de documento'\n                  onChange={this.onChangeDocument.bind(this, DOCUMENT_TYPE_KEY)}\n                  value={doc[DOCUMENT_TYPE_KEY]}\n                  placeholder='Selecciona el tipo de documento'\n                  ref={r => requiredFields.add(r)}\n                  required\n                />\n              </div>\n              <MonthPicker\n                className='column is-half'\n                label='Periodo del Documento'\n                onChange={this.onChangeDate.bind(this)}\n                selected={doc[DOCUMENT_DATE_KEY]}\n              />\n            </div>\n            <div\n              className={classNames('columns', {\n                'is-hidden': this.state.isUpdate\n              })}\n            >\n              <div className='column'>\n                <p className='caption'>\n                  {doc[DOCUMENT_FILE_FILENAME_KEY]\n                    ? `Documento: ${doc[DOCUMENT_FILE_FILENAME_KEY]}`\n                    : 'Documento *'}\n                </p>\n                <div className='control'>\n                  <Button\n                    buttonStyle='info'\n                    icon='plus'\n                    onClick={this.toggleFileDialog.bind(this)}\n                  >\n                    Seleccionar documento\n                  </Button>\n                </div>\n                <div className='content'>\n                  <p>\n                    <span\n                      className={classNames('help is-danger', {\n                        'is-hidden': this.state.isValid.doc\n                      })}\n                    >\n                      Debe seleccionar un documento\n                    </span>\n                  </p>\n                </div>\n              </div>\n            </div>\n            {this.renderSaveButtons()}\n          </Card>\n        </div>\n      </div>\n    )\n  }\n\n  // Main render\n  render () {\n    const { isUpdate, alertOpen } = this.state\n    return (\n      <div>\n        <h1 className='headline'>\n          {`${isUpdate ? 'Editar' : 'Subir nuevo'} documento`}\n        </h1>\n        {this.renderDocument()}\n        <SelectFile\n          isActive={this.state.modalOpen}\n          toggleModal={this.toggleFileDialog.bind(this)}\n          title='Subir Documento'\n          fileTypePlaceholder='documento'\n          setFile={this.setDocument.bind(this)}\n        />\n        <Alert\n          isActive={alertOpen}\n          toggleAlert={this.toggleAlert.bind(this)}\n          onSubmit={this.deleteDocument.bind(this)}\n        />\n      </div>\n    )\n  }\n}\n\nNewDocument.propTypes = {\n  location: PropTypes.object,\n  params: PropTypes.object\n}\n\nexport default NewDocument\n"]},"metadata":{},"sourceType":"module"}