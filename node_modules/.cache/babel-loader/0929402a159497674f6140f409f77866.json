{"ast":null,"code":"import _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/shared/satCredentials/fiel.js\";\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport clipboard from 'clipboard-polyfill';\nimport update from 'immutability-helper';\nimport validator from 'validator';\nimport NotificationsActions from 'actions/notifications';\nimport SatCredentialsActions from 'actions/satCredentials';\nimport SessionStore from 'stores/session';\nimport SatCredentialsStore from 'stores/satCredentials';\nimport SelectFile from 'shared/selectFile';\nimport TextField from 'shared/textField';\nimport Button from 'shared/button';\n\nfunction getCurrentState() {\n  var currentEntity = SessionStore.getCurrentEntity();\n  var credentials = SatCredentialsStore.getCredentials();\n  var user = SessionStore.getUser();\n  return {\n    currentEntity: currentEntity,\n    credentials: credentials,\n    user: user\n  };\n}\n\nvar Fiel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Fiel, _Component);\n\n  function Fiel() {\n    var _this;\n\n    _classCallCheck(this, Fiel);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Fiel).call(this));\n    _this.data = {\n      requestInProgress: false,\n      isFielKeyModalOpen: false,\n      isFielCerModalOpen: false,\n      fiel: {\n        fiel_key_file_password: '',\n        fiel_key_file: {\n          attached_file: '',\n          original_filename: '',\n          content_type: ''\n        },\n        fiel_cer_file: {\n          attached_file: '',\n          original_filename: '',\n          content_type: ''\n        }\n      },\n      isValid: {\n        fiel_key_file_password: true,\n        fiel_key_file: true,\n        fiel_cer_file: true\n      }\n    };\n    _this.state = Object.assign({}, _this.data, getCurrentState());\n    _this._onChange = _this._onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Fiel, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Adds listener, when the Store changes, trigger the _onChange callback func\n      SatCredentialsStore.addChangeListener(this._onChange);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // Removes the listener to avoid memory leaks\n      SatCredentialsStore.removeChangeListener(this._onChange);\n    }\n  }, {\n    key: \"_onChange\",\n    value: function _onChange() {\n      // When the store changes, the state goes to it and pulls the updated data\n      // then sets it so the component rerenders\n      var state = getCurrentState();\n      this.setState(state);\n    } // Persist password to state\n\n  }, {\n    key: \"onChangeFielPassword\",\n    value: function onChangeFielPassword(e) {\n      this.setState({\n        fiel: update(this.state.fiel, {\n          fiel_key_file_password: {\n            $set: e.target.value\n          }\n        })\n      });\n    } // Toggle key modal\n\n  }, {\n    key: \"toggleFielKeyModal\",\n    value: function toggleFielKeyModal() {\n      this.setState({\n        isFielKeyModalOpen: !this.state.isFielKeyModalOpen\n      });\n    } // Toggle certificate modal\n\n  }, {\n    key: \"toggleFielCerModal\",\n    value: function toggleFielCerModal() {\n      this.setState({\n        isFielCerModalOpen: !this.state.isFielCerModalOpen\n      });\n    } // Persist key to state\n\n  }, {\n    key: \"setFielKey\",\n    value: function setFielKey(file, filename, mime) {\n      var key = {\n        attached_file: file,\n        original_filename: filename,\n        content_type: mime\n      };\n      this.setState({\n        fiel: update(this.state.fiel, {\n          fiel_key_file: {\n            $set: key\n          }\n        })\n      });\n    } // Persist certificate to state\n\n  }, {\n    key: \"setFielCer\",\n    value: function setFielCer(file, filename, mime) {\n      var cer = {\n        attached_file: file,\n        original_filename: filename,\n        content_type: mime\n      };\n      this.setState({\n        fiel: update(this.state.fiel, {\n          fiel_cer_file: {\n            $set: cer\n          }\n        })\n      });\n    } // Validate non empty key\n\n  }, {\n    key: \"isValidFielKey\",\n    value: function isValidFielKey() {\n      var isValid = !validator.isEmpty(this.state.fiel.fiel_key_file.attached_file);\n      this.setState({\n        isValid: update(this.state.isValid, {\n          fiel_key_file: {\n            $set: isValid\n          }\n        })\n      });\n      return isValid;\n    } // Validate non empty certificate\n\n  }, {\n    key: \"isValidFielCer\",\n    value: function isValidFielCer() {\n      var isValid = !validator.isEmpty(this.state.fiel.fiel_cer_file.attached_file);\n      this.setState({\n        isValid: update(this.state.isValid, {\n          fiel_cer_file: {\n            $set: isValid\n          }\n        })\n      });\n      return isValid;\n    } // Validate non empty password\n\n  }, {\n    key: \"isValidFielPassword\",\n    value: function isValidFielPassword() {\n      var isValid = !validator.isEmpty(this.state.fiel.fiel_key_file_password);\n      this.setState({\n        isValid: update(this.state.isValid, {\n          fiel_key_file_password: {\n            $set: isValid\n          }\n        })\n      });\n      return isValid;\n    }\n  }, {\n    key: \"uploadFiel\",\n    value: function uploadFiel(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n\n      if (this.isValidFielKey() && this.isValidFielCer() && this.isValidFielPassword()) {\n        this.setState({\n          requestInProgress: true\n        }, function () {\n          SatCredentialsActions.updateSatCredentials({\n            taxable_entity: _this2.state.fiel\n          }).then(function () {\n            NotificationsActions.success('FIEL guardada correctamente');\n\n            _this2.setState({\n              requestInProgress: false\n            });\n\n            SatCredentialsActions.getSatCredentials();\n          }).catch(function (error) {\n            NotificationsActions.error(error);\n\n            _this2.setState({\n              requestInProgress: false\n            });\n          });\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var user = this.state.user;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"subtitle is-6 is-marginless\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"FIEL\"), React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"Contrase\\xF1a de la FIEL\",\n        type: \"password\",\n        placeholder: \"Contrase\\xF1a de la FIEL\",\n        className: classNames('input', {\n          'is-danger': !this.state.isValid.fiel_key_file_password\n        }),\n        onChange: this.onChangeFielPassword.bind(this),\n        value: this.state.fiel.fiel_key_file_password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }), user.role !== 'sales' && React.createElement(\"a\", {\n        onClick: function onClick() {\n          clipboard.writeText(_this3.state.credentials.fiel.password).then(NotificationsActions.success('Contrase√±a copiada al portapapeles'));\n        },\n        className: classNames({\n          'is-hidden': !this.state.credentials.fiel.password\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Copiar contrase\\xF1a almacenada\"))), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"caption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"Extensi\\xF3n .key\"), React.createElement(Button, {\n        buttonStyle: \"info\",\n        onClick: this.toggleFielKeyModal.bind(this),\n        className: \"is-fullwidth\",\n        icon: this.state.fiel.fiel_key_file.original_filename ? 'file-outline' : 'plus',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, this.state.fiel.fiel_key_file.original_filename || 'Seleccionar Archivo'), React.createElement(\"p\", {\n        className: classNames('help is-danger', {\n          'is-hidden': this.state.isValid.fiel_key_file\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"* Campo requerido\"), user.role !== 'sales' && React.createElement(\"a\", {\n        className: classNames({\n          'is-hidden': !this.state.credentials.fiel.key_file\n        }),\n        href: this.state.credentials.fiel.key_file,\n        download: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, \"Descargar archivo .key almacenado\"))), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"caption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \"Extensi\\xF3n .cer\"), React.createElement(Button, {\n        buttonStyle: \"info\",\n        className: \"is-fullwidth\",\n        onClick: this.toggleFielCerModal.bind(this),\n        icon: this.state.fiel.fiel_cer_file.original_filename ? 'file-outline' : 'plus',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, this.state.fiel.fiel_cer_file.original_filename || 'Seleccionar Archivo'), React.createElement(\"p\", {\n        className: classNames('help is-danger', {\n          'is-hidden': this.state.isValid.fiel_cer_file\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \"* Campo requerido\"), user.role !== 'sales' && React.createElement(\"a\", {\n        className: classNames({\n          'is-hidden': !this.state.credentials.fiel.cer_file\n        }),\n        href: this.state.credentials.fiel.cer_file,\n        download: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, \"Descargar archivo .cer almacenado\")))), React.createElement(Button, {\n        className: \"align-right\",\n        buttonStyle: \"primary\",\n        icon: \"content-save\",\n        loading: this.state.requestInProgress,\n        onClick: this.uploadFiel.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, \"Guardar FIEL\"), React.createElement(SelectFile, {\n        isActive: this.state.isFielKeyModalOpen,\n        toggleModal: this.toggleFielKeyModal.bind(this),\n        title: \"Archivo .key de la FIEL\",\n        fileTypePlaceholder: \"Extensi\\xF3n .key de la FIEL\",\n        setFile: this.setFielKey.bind(this),\n        accept: '.key',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }), React.createElement(SelectFile, {\n        isActive: this.state.isFielCerModalOpen,\n        toggleModal: this.toggleFielCerModal.bind(this),\n        title: \"Archivo .cer de la FIEL\",\n        fileTypePlaceholder: \"Extensi\\xF3n .cer de la FIEL\",\n        setFile: this.setFielCer.bind(this),\n        accept: '.cer',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Fiel;\n}(Component);\n\nexport default Fiel;","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/shared/satCredentials/fiel.js"],"names":["React","Component","classNames","clipboard","update","validator","NotificationsActions","SatCredentialsActions","SessionStore","SatCredentialsStore","SelectFile","TextField","Button","getCurrentState","currentEntity","getCurrentEntity","credentials","getCredentials","user","getUser","Fiel","data","requestInProgress","isFielKeyModalOpen","isFielCerModalOpen","fiel","fiel_key_file_password","fiel_key_file","attached_file","original_filename","content_type","fiel_cer_file","isValid","state","Object","assign","_onChange","bind","addChangeListener","removeChangeListener","setState","e","$set","target","value","file","filename","mime","key","cer","isEmpty","preventDefault","isValidFielKey","isValidFielCer","isValidFielPassword","updateSatCredentials","taxable_entity","then","success","getSatCredentials","catch","error","onChangeFielPassword","role","writeText","password","toggleFielKeyModal","key_file","toggleFielCerModal","cer_file","uploadFiel","setFielKey","setFielCer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport classNames from 'classnames'\nimport clipboard from 'clipboard-polyfill'\nimport update from 'immutability-helper'\nimport validator from 'validator'\n\nimport NotificationsActions from 'actions/notifications'\nimport SatCredentialsActions from 'actions/satCredentials'\nimport SessionStore from 'stores/session'\nimport SatCredentialsStore from 'stores/satCredentials'\nimport SelectFile from 'shared/selectFile'\nimport TextField from 'shared/textField'\nimport Button from 'shared/button'\n\nfunction getCurrentState () {\n  let currentEntity = SessionStore.getCurrentEntity()\n  let credentials = SatCredentialsStore.getCredentials()\n  const user = SessionStore.getUser()\n  return {\n    currentEntity,\n    credentials,\n    user\n  }\n}\n\nclass Fiel extends Component {\n  constructor () {\n    super()\n    this.data = {\n      requestInProgress: false,\n      isFielKeyModalOpen: false,\n      isFielCerModalOpen: false,\n      fiel: {\n        fiel_key_file_password: '',\n        fiel_key_file: {\n          attached_file: '',\n          original_filename: '',\n          content_type: ''\n        },\n        fiel_cer_file: {\n          attached_file: '',\n          original_filename: '',\n          content_type: ''\n        }\n      },\n      isValid: {\n        fiel_key_file_password: true,\n        fiel_key_file: true,\n        fiel_cer_file: true\n      }\n    }\n    this.state = Object.assign({}, this.data, getCurrentState())\n    this._onChange = this._onChange.bind(this)\n  }\n\n  componentDidMount () {\n    // Adds listener, when the Store changes, trigger the _onChange callback func\n    SatCredentialsStore.addChangeListener(this._onChange)\n  }\n\n  componentWillUnmount () {\n    // Removes the listener to avoid memory leaks\n    SatCredentialsStore.removeChangeListener(this._onChange)\n  }\n\n  _onChange () {\n    // When the store changes, the state goes to it and pulls the updated data\n    // then sets it so the component rerenders\n    let state = getCurrentState()\n    this.setState(state)\n  }\n\n  // Persist password to state\n  onChangeFielPassword (e) {\n    this.setState({\n      fiel: update(this.state.fiel, {\n        fiel_key_file_password: { $set: e.target.value }\n      })\n    })\n  }\n\n  // Toggle key modal\n  toggleFielKeyModal () {\n    this.setState({ isFielKeyModalOpen: !this.state.isFielKeyModalOpen })\n  }\n\n  // Toggle certificate modal\n  toggleFielCerModal () {\n    this.setState({ isFielCerModalOpen: !this.state.isFielCerModalOpen })\n  }\n\n  // Persist key to state\n  setFielKey (file, filename, mime) {\n    let key = {\n      attached_file: file,\n      original_filename: filename,\n      content_type: mime\n    }\n    this.setState({\n      fiel: update(this.state.fiel, { fiel_key_file: { $set: key } })\n    })\n  }\n\n  // Persist certificate to state\n  setFielCer (file, filename, mime) {\n    let cer = {\n      attached_file: file,\n      original_filename: filename,\n      content_type: mime\n    }\n    this.setState({\n      fiel: update(this.state.fiel, { fiel_cer_file: { $set: cer } })\n    })\n  }\n\n  // Validate non empty key\n  isValidFielKey () {\n    let isValid = !validator.isEmpty(\n      this.state.fiel.fiel_key_file.attached_file\n    )\n    this.setState({\n      isValid: update(this.state.isValid, { fiel_key_file: { $set: isValid } })\n    })\n    return isValid\n  }\n\n  // Validate non empty certificate\n  isValidFielCer () {\n    let isValid = !validator.isEmpty(\n      this.state.fiel.fiel_cer_file.attached_file\n    )\n    this.setState({\n      isValid: update(this.state.isValid, { fiel_cer_file: { $set: isValid } })\n    })\n    return isValid\n  }\n\n  // Validate non empty password\n  isValidFielPassword () {\n    let isValid = !validator.isEmpty(this.state.fiel.fiel_key_file_password)\n    this.setState({\n      isValid: update(this.state.isValid, {\n        fiel_key_file_password: { $set: isValid }\n      })\n    })\n    return isValid\n  }\n\n  uploadFiel (e) {\n    e.preventDefault()\n    if (\n      this.isValidFielKey() &&\n      this.isValidFielCer() &&\n      this.isValidFielPassword()\n    ) {\n      this.setState({ requestInProgress: true }, () => {\n        SatCredentialsActions.updateSatCredentials({\n          taxable_entity: this.state.fiel\n        })\n          .then(() => {\n            NotificationsActions.success('FIEL guardada correctamente')\n            this.setState({ requestInProgress: false })\n            SatCredentialsActions.getSatCredentials()\n          })\n          .catch(error => {\n            NotificationsActions.error(error)\n            this.setState({ requestInProgress: false })\n          })\n      })\n    }\n  }\n\n  render () {\n    const { user } = this.state\n    return (\n      <div>\n        <h5 className='subtitle is-6 is-marginless'>FIEL</h5>\n        <div className='columns'>\n          <div className='column'>\n            <div className='field'>\n              <TextField\n                label='Contrase√±a de la FIEL'\n                type='password'\n                placeholder='Contrase√±a de la FIEL'\n                className={classNames('input', {\n                  'is-danger': !this.state.isValid.fiel_key_file_password\n                })}\n                onChange={this.onChangeFielPassword.bind(this)}\n                value={this.state.fiel.fiel_key_file_password}\n              />\n              {user.role !== 'sales' && (\n                <a\n                  onClick={() => {\n                    clipboard\n                      .writeText(this.state.credentials.fiel.password)\n                      .then(\n                        NotificationsActions.success(\n                          'Contrase√±a copiada al portapapeles'\n                        )\n                      )\n                  }}\n                  className={classNames({\n                    'is-hidden': !this.state.credentials.fiel.password\n                  })}\n                >\n                  Copiar contrase√±a almacenada\n                </a>\n              )}\n            </div>\n          </div>\n          <div className='column'>\n            <div className='field'>\n              <label className='caption'>Extensi√≥n .key</label>\n              <Button\n                buttonStyle='info'\n                onClick={this.toggleFielKeyModal.bind(this)}\n                className='is-fullwidth'\n                icon={\n                  this.state.fiel.fiel_key_file.original_filename\n                    ? 'file-outline'\n                    : 'plus'\n                }\n              >\n                {this.state.fiel.fiel_key_file.original_filename ||\n                  'Seleccionar Archivo'}\n              </Button>\n              <p\n                className={classNames('help is-danger', {\n                  'is-hidden': this.state.isValid.fiel_key_file\n                })}\n              >\n                * Campo requerido\n              </p>\n              {user.role !== 'sales' && (\n                <a\n                  className={classNames({\n                    'is-hidden': !this.state.credentials.fiel.key_file\n                  })}\n                  href={this.state.credentials.fiel.key_file}\n                  download\n                >\n                  Descargar archivo .key almacenado\n                </a>\n              )}\n            </div>\n          </div>\n          <div className='column'>\n            <div className='field'>\n              <label className='caption'>Extensi√≥n .cer</label>\n              <Button\n                buttonStyle='info'\n                className='is-fullwidth'\n                onClick={this.toggleFielCerModal.bind(this)}\n                icon={\n                  this.state.fiel.fiel_cer_file.original_filename\n                    ? 'file-outline'\n                    : 'plus'\n                }\n              >\n                {this.state.fiel.fiel_cer_file.original_filename ||\n                  'Seleccionar Archivo'}\n              </Button>\n              <p\n                className={classNames('help is-danger', {\n                  'is-hidden': this.state.isValid.fiel_cer_file\n                })}\n              >\n                * Campo requerido\n              </p>\n              {user.role !== 'sales' && (\n                <a\n                  className={classNames({\n                    'is-hidden': !this.state.credentials.fiel.cer_file\n                  })}\n                  href={this.state.credentials.fiel.cer_file}\n                  download\n                >\n                  Descargar archivo .cer almacenado\n                </a>\n              )}\n            </div>\n          </div>\n        </div>\n        <Button\n          className='align-right'\n          buttonStyle='primary'\n          icon='content-save'\n          loading={this.state.requestInProgress}\n          onClick={this.uploadFiel.bind(this)}\n        >\n          Guardar FIEL\n        </Button>\n        <SelectFile\n          isActive={this.state.isFielKeyModalOpen}\n          toggleModal={this.toggleFielKeyModal.bind(this)}\n          title='Archivo .key de la FIEL'\n          fileTypePlaceholder='Extensi√≥n .key de la FIEL'\n          setFile={this.setFielKey.bind(this)}\n          accept={'.key'}\n        />\n        <SelectFile\n          isActive={this.state.isFielCerModalOpen}\n          toggleModal={this.toggleFielCerModal.bind(this)}\n          title='Archivo .cer de la FIEL'\n          fileTypePlaceholder='Extensi√≥n .cer de la FIEL'\n          setFile={this.setFielCer.bind(this)}\n          accept={'.cer'}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Fiel\n"]},"metadata":{},"sourceType":"module"}