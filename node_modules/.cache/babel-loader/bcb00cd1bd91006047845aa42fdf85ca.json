{"ast":null,"code":"import _regeneratorRuntime from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/shared/selectFile/index.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Dropzone from 'react-dropzone';\nimport { formatFile } from 'utils';\nimport Modal from 'shared/modal';\nimport NotificationsActions from 'actions/notifications';\nvar styles = {\n  DROPZONE: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    minHeight: '200px',\n    borderWidth: '2px',\n    borderStyle: 'dashed',\n    borderRadius: '5px'\n  }\n};\n\nvar SelectFile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SelectFile, _Component);\n\n  function SelectFile() {\n    var _this;\n\n    _classCallCheck(this, SelectFile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SelectFile).call(this));\n    _this.data = {\n      file: []\n    };\n    _this.state = Object.assign({}, _this.data);\n    return _this;\n  } // Sets the File object to the state\n\n\n  _createClass(SelectFile, [{\n    key: \"onDropFiles\",\n    value: function onDropFiles(file) {\n      this.setState({\n        file: file\n      });\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function () {\n      var _onSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _ref, file64, name, contentType;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(this.state.file.length === 0)) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 2:\n                _context.prev = 2;\n                _context.next = 5;\n                return formatFile(this.state.file);\n\n              case 5:\n                _ref = _context.sent;\n                file64 = _ref.file64;\n                name = _ref.name;\n                contentType = _ref.contentType;\n                this.props.setFile(file64, name, contentType);\n                this.props.toggleModal();\n                _context.next = 17;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](2);\n                console.error(_context.t0);\n                NotificationsActions.error('No se ha podido leer el archivo');\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 13]]);\n      }));\n\n      function onSubmit() {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  }, {\n    key: \"renderDropzoneText\",\n    value: function renderDropzoneText() {\n      var file = this.state.file; // Checks if there is any file in the state already\n\n      var fileCount = file.length; // If there are not any file, renders the default place holder taking the file requested from the props\n\n      var placeholder = \"Arrastre su \".concat(this.props.fileTypePlaceholder, \" o d\\xE9 click en esta \\xE1rea\"); // If a file is already there, displays its original name\n\n      if (fileCount) placeholder = \"\".concat(file[0].name);\n      return React.createElement(\"h4\", {\n        className: \"subtitle is-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, placeholder);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          isActive = _this$props.isActive,\n          toggleModal = _this$props.toggleModal,\n          title = _this$props.title;\n      return React.createElement(Modal, {\n        isActive: isActive,\n        toggleModal: toggleModal,\n        onSubmit: this.onSubmit.bind(this),\n        title: title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Dropzone, {\n        style: styles.DROPZONE,\n        onDrop: this.onDropFiles.bind(this),\n        multiple: false,\n        accept: this.props.accept,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, this.renderDropzoneText()));\n    }\n  }]);\n\n  return SelectFile;\n}(Component);\n\nSelectFile.propTypes = {\n  toggleModal: PropTypes.func.isRequired,\n  isActive: PropTypes.bool.isRequired,\n  setFile: PropTypes.func.isRequired,\n  title: PropTypes.string,\n  fileTypePlaceholder: PropTypes.string,\n  accept: PropTypes.string\n};\nSelectFile.defaultProps = {\n  isActive: false,\n  title: 'Subir Archivo',\n  fileTypePlaceholder: 'archivo',\n  accept: ''\n};\nexport default SelectFile;","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/shared/selectFile/index.js"],"names":["React","Component","PropTypes","Dropzone","formatFile","Modal","NotificationsActions","styles","DROPZONE","display","justifyContent","alignItems","width","minHeight","borderWidth","borderStyle","borderRadius","SelectFile","data","file","state","Object","assign","setState","length","file64","name","contentType","props","setFile","toggleModal","console","error","fileCount","placeholder","fileTypePlaceholder","isActive","title","onSubmit","bind","onDropFiles","accept","renderDropzoneText","propTypes","func","isRequired","bool","string","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Dropzone from 'react-dropzone'\nimport { formatFile } from 'utils'\nimport Modal from 'shared/modal'\nimport NotificationsActions from 'actions/notifications'\n\nconst styles = {\n  DROPZONE: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    minHeight: '200px',\n    borderWidth: '2px',\n    borderStyle: 'dashed',\n    borderRadius: '5px'\n  }\n}\n\nclass SelectFile extends Component {\n  constructor () {\n    super()\n    this.data = {\n      file: []\n    }\n    this.state = Object.assign({}, this.data)\n  }\n\n  // Sets the File object to the state\n  onDropFiles (file) {\n    this.setState({ file })\n  }\n\n  async onSubmit () {\n    if (this.state.file.length === 0) return\n\n    try {\n      const { file64, name, contentType } = await formatFile(this.state.file)\n      this.props.setFile(file64, name, contentType)\n      this.props.toggleModal()\n    } catch (error) {\n      console.error(error)\n      NotificationsActions.error('No se ha podido leer el archivo')\n    }\n  }\n\n  renderDropzoneText () {\n    let file = this.state.file\n    // Checks if there is any file in the state already\n    let fileCount = file.length\n    // If there are not any file, renders the default place holder taking the file requested from the props\n    let placeholder = `Arrastre su ${\n      this.props.fileTypePlaceholder\n    } o dé click en esta área`\n    // If a file is already there, displays its original name\n    if (fileCount) placeholder = `${file[0].name}`\n\n    return <h4 className='subtitle is-4'>{placeholder}</h4>\n  }\n\n  render () {\n    let { isActive, toggleModal, title } = this.props\n    return (\n      <Modal\n        isActive={isActive}\n        toggleModal={toggleModal}\n        onSubmit={this.onSubmit.bind(this)}\n        title={title}\n      >\n        <Dropzone\n          style={styles.DROPZONE}\n          onDrop={this.onDropFiles.bind(this)}\n          multiple={false}\n          accept={this.props.accept}\n        >\n          {this.renderDropzoneText()}\n        </Dropzone>\n      </Modal>\n    )\n  }\n}\n\nSelectFile.propTypes = {\n  toggleModal: PropTypes.func.isRequired,\n  isActive: PropTypes.bool.isRequired,\n  setFile: PropTypes.func.isRequired,\n  title: PropTypes.string,\n  fileTypePlaceholder: PropTypes.string,\n  accept: PropTypes.string\n}\n\nSelectFile.defaultProps = {\n  isActive: false,\n  title: 'Subir Archivo',\n  fileTypePlaceholder: 'archivo',\n  accept: ''\n}\n\nexport default SelectFile\n"]},"metadata":{},"sourceType":"module"}