{"ast":null,"code":"import _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/accountants/index.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router';\nimport classNames from 'classnames';\nimport update from 'immutability-helper';\nimport TextField from 'shared/textField';\nimport SelectField from 'shared/selectField';\nimport Button from 'shared/button';\nvar STATUS_ACTIVE = 'active';\nvar STATUS_INACTIVE = 'inactive';\nvar STATUS_ACTIVE_DISPLAY = 'Activo';\nvar STATUS_INACTIVE_DISPLAY = 'Inactivo';\nvar STATUS_ACTIVE_DISPLAY_ACTION = 'Desactivar';\nvar STATUS_INACTIVE_DISPLAY_ACTION = 'Activar';\nvar STATUS = [{\n  id: STATUS_ACTIVE,\n  label: STATUS_ACTIVE_DISPLAY\n}, {\n  id: STATUS_INACTIVE,\n  label: STATUS_INACTIVE_DISPLAY\n}];\nvar ROLE_ACCOUNTANT = 'accountant';\nvar ROLE_LEADER = 'leader';\nvar ROLE_ACCOUNTANT_DISPLAY = 'Contador';\nvar ROLE_LEADER_DISPLAY = 'LÃ­der de equipo';\nvar ROLE = [{\n  id: ROLE_ACCOUNTANT,\n  label: ROLE_ACCOUNTANT_DISPLAY\n}, {\n  id: ROLE_LEADER,\n  label: ROLE_LEADER_DISPLAY\n}];\n/*\n * Accountants is the view in /admin/contadores\n */\n\nvar Accountants =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Accountants, _Component);\n\n  function Accountants(props) {\n    var _this;\n\n    _classCallCheck(this, Accountants);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Accountants).call(this, props));\n    _this.data = {\n      accountants: [],\n      filters: {\n        userID: '',\n        email: '',\n        name: '',\n        status: STATUS_ACTIVE,\n        role: ROLE_ACCOUNTANT\n      }\n    };\n    _this.state = Object.assign({}, _this.data);\n    return _this;\n  } // Load data after mounting\n\n\n  _createClass(Accountants, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadData();\n    } // Get a list of accountants\n\n  }, {\n    key: \"loadData\",\n    value: function loadData() {\n      this.setState({\n        accountants: [{\n          userID: 1,\n          email: 'correo123@hola.com',\n          name: 'Nombre de una persona',\n          lastname: 'Y su apellido',\n          status: STATUS_ACTIVE,\n          kind: 'accountant'\n        }, {\n          userID: 1,\n          email: 'correo123@hola.com',\n          name: 'Nombre de una persona',\n          lastname: 'Y su apellido',\n          status: STATUS_ACTIVE,\n          kind: 'accountant'\n        }, {\n          userID: 1,\n          email: 'correo123@hola.com',\n          name: 'Nombre de una persona',\n          lastname: 'Y su apellido',\n          status: STATUS_INACTIVE,\n          kind: 'accountant'\n        }, {\n          userID: 1,\n          email: 'correo123@hola.com',\n          name: 'Nombre de una persona',\n          lastname: 'Y su apellido',\n          status: STATUS_INACTIVE,\n          kind: 'accountant'\n        }, {\n          userID: 1,\n          email: 'correo123@hola.com',\n          name: 'Nombre de una persona',\n          lastname: 'Y su apellido',\n          status: STATUS_ACTIVE,\n          kind: 'accountant'\n        }, {\n          userID: 1,\n          email: 'correo123@hola.com',\n          name: 'Nombre de una persona',\n          lastname: 'Y su apellido',\n          status: STATUS_INACTIVE,\n          kind: 'accountant'\n        }]\n      });\n    } // Sets the value of this.state.filters.userID with the target value\n\n  }, {\n    key: \"onChangeFiltersUserID\",\n    value: function onChangeFiltersUserID(e) {\n      this.setState({\n        filters: update(this.state.filters, {\n          userID: {\n            $set: e.target.value\n          }\n        })\n      });\n    } // Sets the value of this.state.filters.email with the target value\n\n  }, {\n    key: \"onChangeFiltersEmail\",\n    value: function onChangeFiltersEmail(e) {\n      this.setState({\n        filters: update(this.state.filters, {\n          email: {\n            $set: e.target.value\n          }\n        })\n      });\n    } // Sets the value of this.state.filters.name with the target value\n\n  }, {\n    key: \"onChangeFiltersName\",\n    value: function onChangeFiltersName(e) {\n      this.setState({\n        filters: update(this.state.filters, {\n          name: {\n            $set: e.target.value\n          }\n        })\n      });\n    } // Sets the value of this.state.filters.status with the target value\n\n  }, {\n    key: \"setFilterStatus\",\n    value: function setFilterStatus(e) {\n      e.preventDefault();\n      this.setState({\n        filters: update(this.state.filters, {\n          status: {\n            $set: e.target.value\n          }\n        })\n      });\n    } // Sets the value of this.state.filters.role with the target value\n\n  }, {\n    key: \"setFilterRole\",\n    value: function setFilterRole(e) {\n      e.preventDefault();\n      this.setState({\n        filters: update(this.state.filters, {\n          role: {\n            $set: e.target.value\n          }\n        })\n      });\n    } // Will filter the results, currently only prints the selected filter values\n\n  }, {\n    key: \"filterResults\",\n    value: function filterResults(e) {\n      e.preventDefault();\n      console.log(this.state.filters);\n    } // Renders the main button (button at the right side of the title)\n\n  }, {\n    key: \"renderNewButton\",\n    value: function renderNewButton(right) {\n      return React.createElement(\"p\", {\n        className: classNames('control', {\n          'is-pulled-right': right\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/admin/contadores/nuevo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(Button, {\n        buttonStyle: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Nuevo contador\")));\n    } // Renders the filter fields (inputs, selects and search button)\n\n  }, {\n    key: \"renderFilters\",\n    value: function renderFilters() {\n      return React.createElement(\"div\", {\n        className: \"box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        className: \"side-padding\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Filtrar por:\")), React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        placeholder: \"Usuario\",\n        value: this.state.filters.userID,\n        onChange: this.onChangeFiltersUserID.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        placeholder: \"Correo\",\n        value: this.state.filters.email,\n        onChange: this.onChangeFiltersEmail.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        placeholder: \"Nombre o Apellido\",\n        value: this.state.filters.name,\n        onChange: this.onChangeFiltersName.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(SelectField, {\n        options: STATUS,\n        placeholder: \"Estatus\",\n        value: this.state.filters.status,\n        onChange: this.setFilterStatus.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(SelectField, {\n        options: ROLE,\n        placeholder: \"Rol\",\n        value: this.state.filters.role,\n        onChange: this.setFilterRole.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"column is-3-desktop is-2-widescreen\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"columns is-mobile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(Button, {\n        icon: \"close-circle-outline\" // onClick={this.onCleanFilters.bind(this)}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"Limpiar\")), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(Button, {\n        buttonStyle: \"infoInv\",\n        icon: \"magnify\",\n        onClick: this.filterResults.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \"Filtrar\"))))));\n    } // Renders the table and fills it with data\n\n  }, {\n    key: \"renderTable\",\n    value: function renderTable() {\n      var renderTable = React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, \"No hay rubros\"), this.renderNewButton());\n\n      if (this.state.accountants.length > 0) {\n        var accountants = this.state.accountants.map(function (accountant, index) {\n          var statusLabel = STATUS_ACTIVE_DISPLAY;\n          var statusAction = STATUS_ACTIVE_DISPLAY_ACTION;\n\n          if (accountant.status === STATUS_INACTIVE) {\n            statusLabel = STATUS_INACTIVE_DISPLAY;\n            statusAction = STATUS_INACTIVE_DISPLAY_ACTION;\n          }\n\n          var renderStatus = React.createElement(\"p\", {\n            className: \"control table--actions\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 253\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            className: \"with-tooltip\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 254\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            className: \"tooltip\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 255\n            },\n            __self: this\n          }, statusAction), statusLabel));\n          return React.createElement(\"tr\", {\n            key: accountant.userID,\n            className: classNames({\n              'row--inactive': accountant.status === STATUS_INACTIVE\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 262\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 268\n            },\n            __self: this\n          }, accountant.userID), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 269\n            },\n            __self: this\n          }, accountant.email), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 270\n            },\n            __self: this\n          }, accountant.name), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 271\n            },\n            __self: this\n          }, accountant.lastname), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 272\n            },\n            __self: this\n          }, renderStatus), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 273\n            },\n            __self: this\n          }, accountant.kind), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 274\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            className: \"control table--actions\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 275\n            },\n            __self: this\n          }, React.createElement(Link, {\n            to: '/admin/contadores/editar/' + accountant.userID,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 276\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            className: \"with-tooltip\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 277\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            className: \"tooltip\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 278\n            },\n            __self: this\n          }, \"Editar\"), React.createElement(\"i\", {\n            className: \"mdi mdi-pencil\",\n            \"aria-hidden\": \"true\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 279\n            },\n            __self: this\n          }))), React.createElement(\"span\", {\n            className: \"with-tooltip\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 282\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            className: \"tooltip\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 283\n            },\n            __self: this\n          }, \"Enviar correo de activaci\\xF3n\"), React.createElement(\"i\", {\n            className: \"mdi mdi-email\",\n            \"aria-hidden\": \"true\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 284\n            },\n            __self: this\n          })))));\n        });\n        renderTable = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292\n          },\n          __self: this\n        }, React.createElement(\"table\", {\n          className: \"table\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 293\n          },\n          __self: this\n        }, React.createElement(\"thead\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          className: \"is-unselectable cursor-default\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296\n          },\n          __self: this\n        }, \"Usuario\"), React.createElement(\"th\", {\n          className: \"is-unselectable cursor-default\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297\n          },\n          __self: this\n        }, \"Correo\"), React.createElement(\"th\", {\n          className: \"is-unselectable cursor-default\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 298\n          },\n          __self: this\n        }, \"Nombre\"), React.createElement(\"th\", {\n          className: \"is-unselectable cursor-default\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 299\n          },\n          __self: this\n        }, \"Apellido\"), React.createElement(\"th\", {\n          className: \"is-unselectable cursor-default\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 300\n          },\n          __self: this\n        }, \"Estado\"), React.createElement(\"th\", {\n          className: \"is-unselectable cursor-default\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 301\n          },\n          __self: this\n        }, \"Rol\"), React.createElement(\"th\", {\n          className: \"is-unselectable cursor-default\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 302\n          },\n          __self: this\n        }, \"Acciones\"))), React.createElement(\"tbody\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305\n          },\n          __self: this\n        }, accountants)), this.renderNewButton());\n      }\n\n      return renderTable;\n    } // Main render\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"title is-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, \"Accountants\", this.renderNewButton('right')), this.renderFilters(), this.renderTable());\n    }\n  }]);\n\n  return Accountants;\n}(Component);\n\nexport default Accountants;","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/accountants/index.js"],"names":["React","Component","Link","classNames","update","TextField","SelectField","Button","STATUS_ACTIVE","STATUS_INACTIVE","STATUS_ACTIVE_DISPLAY","STATUS_INACTIVE_DISPLAY","STATUS_ACTIVE_DISPLAY_ACTION","STATUS_INACTIVE_DISPLAY_ACTION","STATUS","id","label","ROLE_ACCOUNTANT","ROLE_LEADER","ROLE_ACCOUNTANT_DISPLAY","ROLE_LEADER_DISPLAY","ROLE","Accountants","props","data","accountants","filters","userID","email","name","status","role","state","Object","assign","loadData","setState","lastname","kind","e","$set","target","value","preventDefault","console","log","right","onChangeFiltersUserID","bind","onChangeFiltersEmail","onChangeFiltersName","setFilterStatus","setFilterRole","filterResults","renderTable","renderNewButton","length","map","accountant","index","statusLabel","statusAction","renderStatus","renderFilters"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router'\nimport classNames from 'classnames'\nimport update from 'immutability-helper'\n\nimport TextField from 'shared/textField'\nimport SelectField from 'shared/selectField'\nimport Button from 'shared/button'\n\nconst STATUS_ACTIVE = 'active'\nconst STATUS_INACTIVE = 'inactive'\nconst STATUS_ACTIVE_DISPLAY = 'Activo'\nconst STATUS_INACTIVE_DISPLAY = 'Inactivo'\nconst STATUS_ACTIVE_DISPLAY_ACTION = 'Desactivar'\nconst STATUS_INACTIVE_DISPLAY_ACTION = 'Activar'\nconst STATUS = [\n  { id: STATUS_ACTIVE, label: STATUS_ACTIVE_DISPLAY },\n  { id: STATUS_INACTIVE, label: STATUS_INACTIVE_DISPLAY }\n]\n\nconst ROLE_ACCOUNTANT = 'accountant'\nconst ROLE_LEADER = 'leader'\nconst ROLE_ACCOUNTANT_DISPLAY = 'Contador'\nconst ROLE_LEADER_DISPLAY = 'LÃ­der de equipo'\nconst ROLE = [\n  { id: ROLE_ACCOUNTANT, label: ROLE_ACCOUNTANT_DISPLAY },\n  { id: ROLE_LEADER, label: ROLE_LEADER_DISPLAY }\n]\n\n/*\n * Accountants is the view in /admin/contadores\n */\n\nclass Accountants extends Component {\n  constructor (props) {\n    super(props)\n    this.data = {\n      accountants: [],\n      filters: {\n        userID: '',\n        email: '',\n        name: '',\n        status: STATUS_ACTIVE,\n        role: ROLE_ACCOUNTANT\n      }\n    }\n    this.state = Object.assign({}, this.data)\n  }\n\n  // Load data after mounting\n  componentDidMount () {\n    this.loadData()\n  }\n\n  // Get a list of accountants\n  loadData () {\n    this.setState({\n      accountants: [\n        {\n          userID: 1,\n          email: 'correo123@hola.com',\n          name: 'Nombre de una persona',\n          lastname: 'Y su apellido',\n          status: STATUS_ACTIVE,\n          kind: 'accountant'\n        },\n        {\n          userID: 1,\n          email: 'correo123@hola.com',\n          name: 'Nombre de una persona',\n          lastname: 'Y su apellido',\n          status: STATUS_ACTIVE,\n          kind: 'accountant'\n        },\n        {\n          userID: 1,\n          email: 'correo123@hola.com',\n          name: 'Nombre de una persona',\n          lastname: 'Y su apellido',\n          status: STATUS_INACTIVE,\n          kind: 'accountant'\n        },\n        {\n          userID: 1,\n          email: 'correo123@hola.com',\n          name: 'Nombre de una persona',\n          lastname: 'Y su apellido',\n          status: STATUS_INACTIVE,\n          kind: 'accountant'\n        },\n        {\n          userID: 1,\n          email: 'correo123@hola.com',\n          name: 'Nombre de una persona',\n          lastname: 'Y su apellido',\n          status: STATUS_ACTIVE,\n          kind: 'accountant'\n        },\n        {\n          userID: 1,\n          email: 'correo123@hola.com',\n          name: 'Nombre de una persona',\n          lastname: 'Y su apellido',\n          status: STATUS_INACTIVE,\n          kind: 'accountant'\n        }\n      ]\n    })\n  }\n\n  // Sets the value of this.state.filters.userID with the target value\n  onChangeFiltersUserID (e) {\n    this.setState({\n      filters: update(this.state.filters, { userID: { $set: e.target.value } })\n    })\n  }\n\n  // Sets the value of this.state.filters.email with the target value\n  onChangeFiltersEmail (e) {\n    this.setState({\n      filters: update(this.state.filters, { email: { $set: e.target.value } })\n    })\n  }\n\n  // Sets the value of this.state.filters.name with the target value\n  onChangeFiltersName (e) {\n    this.setState({\n      filters: update(this.state.filters, { name: { $set: e.target.value } })\n    })\n  }\n\n  // Sets the value of this.state.filters.status with the target value\n  setFilterStatus (e) {\n    e.preventDefault()\n    this.setState({\n      filters: update(this.state.filters, { status: { $set: e.target.value } })\n    })\n  }\n\n  // Sets the value of this.state.filters.role with the target value\n  setFilterRole (e) {\n    e.preventDefault()\n    this.setState({\n      filters: update(this.state.filters, { role: { $set: e.target.value } })\n    })\n  }\n\n  // Will filter the results, currently only prints the selected filter values\n  filterResults (e) {\n    e.preventDefault()\n    console.log(this.state.filters)\n  }\n\n  // Renders the main button (button at the right side of the title)\n  renderNewButton (right) {\n    return (\n      <p className={classNames('control', { 'is-pulled-right': right })}>\n        <Link to='/admin/contadores/nuevo'>\n          <Button buttonStyle='primary'>Nuevo contador</Button>\n        </Link>\n      </p>\n    )\n  }\n\n  // Renders the filter fields (inputs, selects and search button)\n  renderFilters () {\n    return (\n      <div className='box'>\n        <div className='columns'>\n          <strong className='side-padding'>Filtrar por:</strong>\n        </div>\n        <div className='columns'>\n          <div className='column'>\n            <TextField\n              placeholder='Usuario'\n              value={this.state.filters.userID}\n              onChange={this.onChangeFiltersUserID.bind(this)}\n            />\n          </div>\n          <div className='column'>\n            <TextField\n              placeholder='Correo'\n              value={this.state.filters.email}\n              onChange={this.onChangeFiltersEmail.bind(this)}\n            />\n          </div>\n          <div className='column'>\n            <TextField\n              placeholder='Nombre o Apellido'\n              value={this.state.filters.name}\n              onChange={this.onChangeFiltersName.bind(this)}\n            />\n          </div>\n          <div className='column'>\n            <SelectField\n              options={STATUS}\n              placeholder='Estatus'\n              value={this.state.filters.status}\n              onChange={this.setFilterStatus.bind(this)}\n            />\n          </div>\n          <div className='column'>\n            <SelectField\n              options={ROLE}\n              placeholder='Rol'\n              value={this.state.filters.role}\n              onChange={this.setFilterRole.bind(this)}\n            />\n          </div>\n          <div className='column is-3-desktop is-2-widescreen'>\n            <div className='columns is-mobile'>\n              <div className='column'>\n                <Button\n                  icon='close-circle-outline'\n                  // onClick={this.onCleanFilters.bind(this)}\n                >\n                  Limpiar\n                </Button>\n              </div>\n              <div className='column'>\n                <Button\n                  buttonStyle='infoInv'\n                  icon='magnify'\n                  onClick={this.filterResults.bind(this)}\n                >\n                  Filtrar\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  // Renders the table and fills it with data\n  renderTable () {\n    let renderTable = (\n      <div className='content'>\n        <p>No hay rubros</p>\n        {this.renderNewButton()}\n      </div>\n    )\n    if (this.state.accountants.length > 0) {\n      let accountants = this.state.accountants.map(function (accountant, index) {\n        let statusLabel = STATUS_ACTIVE_DISPLAY\n        let statusAction = STATUS_ACTIVE_DISPLAY_ACTION\n        if (accountant.status === STATUS_INACTIVE) {\n          statusLabel = STATUS_INACTIVE_DISPLAY\n          statusAction = STATUS_INACTIVE_DISPLAY_ACTION\n        }\n        let renderStatus = (\n          <p className='control table--actions'>\n            <span className='with-tooltip'>\n              <span className='tooltip'>{statusAction}</span>\n              {statusLabel}\n            </span>\n          </p>\n        )\n\n        return (\n          <tr\n            key={accountant.userID}\n            className={classNames({\n              'row--inactive': accountant.status === STATUS_INACTIVE\n            })}\n          >\n            <td>{accountant.userID}</td>\n            <td>{accountant.email}</td>\n            <td>{accountant.name}</td>\n            <td>{accountant.lastname}</td>\n            <td>{renderStatus}</td>\n            <td>{accountant.kind}</td>\n            <td>\n              <p className='control table--actions'>\n                <Link to={'/admin/contadores/editar/' + accountant.userID}>\n                  <span className='with-tooltip'>\n                    <span className='tooltip'>Editar</span>\n                    <i className='mdi mdi-pencil' aria-hidden='true' />\n                  </span>\n                </Link>\n                <span className='with-tooltip'>\n                  <span className='tooltip'>Enviar correo de activaciÃ³n</span>\n                  <i className='mdi mdi-email' aria-hidden='true' />\n                </span>\n              </p>\n            </td>\n          </tr>\n        )\n      })\n      renderTable = (\n        <div>\n          <table className='table'>\n            <thead>\n              <tr>\n                <th className='is-unselectable cursor-default'>Usuario</th>\n                <th className='is-unselectable cursor-default'>Correo</th>\n                <th className='is-unselectable cursor-default'>Nombre</th>\n                <th className='is-unselectable cursor-default'>Apellido</th>\n                <th className='is-unselectable cursor-default'>Estado</th>\n                <th className='is-unselectable cursor-default'>Rol</th>\n                <th className='is-unselectable cursor-default'>Acciones</th>\n              </tr>\n            </thead>\n            <tbody>{accountants}</tbody>\n          </table>\n          {this.renderNewButton()}\n        </div>\n      )\n    }\n    return renderTable\n  }\n\n  // Main render\n  render () {\n    return (\n      <div>\n        <h1 className='title is-4'>\n          Accountants\n          {this.renderNewButton('right')}\n        </h1>\n        {this.renderFilters()}\n        {this.renderTable()}\n      </div>\n    )\n  }\n}\n\nexport default Accountants\n"]},"metadata":{},"sourceType":"module"}