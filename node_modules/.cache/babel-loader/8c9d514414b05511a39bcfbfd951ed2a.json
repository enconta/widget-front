{"ast":null,"code":"import _objectSpread from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/newInvoice/complementos/foreignTrade/merchandises/merchandise/index.js\";\n// Libraries\nimport React from 'react';\nimport accounting from 'accounting'; // Components\n\nimport TextField from 'shared/textField';\nimport { absolutify } from 'utils'; // Children\n\nimport SpecificDescriptions from './specificDescriptions';\nvar IDENTIFICATION_NUMBER_KEY = 'identification_number';\nvar CUSTOMS_AMOUNT_KEY = 'customs_amount';\nvar CUSTOMS_UNIT_KEY = 'customs_unit';\nvar CUSTOMS_UNIT_VALUE_KEY = 'customs_unit_value';\nvar USD_VALUE_KEY = 'usd_value';\nvar BRAND_KEY = 'brand';\nvar MODEL_KEY = 'model';\nvar SUB_MODEL_KEY = 'sub_model';\nvar SERIAL_NUMBER_KEY = 'serial_number';\nvar requiredFields = new Set();\n\nvar Merchandise =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Merchandise, _React$Component);\n\n  function Merchandise(props) {\n    var _ref, _this$data;\n\n    var _this;\n\n    _classCallCheck(this, Merchandise);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Merchandise).call(this, props));\n    _this.data = (_this$data = {}, _defineProperty(_this$data, IDENTIFICATION_NUMBER_KEY, ''), _defineProperty(_this$data, CUSTOMS_AMOUNT_KEY, '0'), _defineProperty(_this$data, CUSTOMS_UNIT_KEY, '0'), _defineProperty(_this$data, CUSTOMS_UNIT_VALUE_KEY, '0'), _defineProperty(_this$data, USD_VALUE_KEY, '0'), _defineProperty(_this$data, \"specific_descriptions\", [(_ref = {}, _defineProperty(_ref, BRAND_KEY, 'brand'), _defineProperty(_ref, MODEL_KEY, ''), _defineProperty(_ref, SUB_MODEL_KEY, ''), _defineProperty(_ref, SERIAL_NUMBER_KEY, ''), _ref)]), _this$data);\n    _this.state = Object.assign({}, _this.data);\n    return _this;\n  }\n\n  _createClass(Merchandise, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // Clears the stored requiredFields\n      requiredFields.clear();\n    } // Updates an input's value when it changes\n\n  }, {\n    key: \"onChange\",\n    value: function onChange(field, e) {\n      this.setState(_defineProperty({}, field, e.target.value));\n    } // Sets the correct format to the content field when it losses the focus\n\n  }, {\n    key: \"formatField\",\n    value: function formatField(field) {\n      var kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'string';\n      var formatted = this.setFormat(this.state[field], kind);\n      this.setState(_defineProperty({}, field, formatted));\n    } // Formats the current field as number when it gets the focus\n\n  }, {\n    key: \"unformatField\",\n    value: function unformatField(field) {\n      var kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'string';\n      var unformatted = kind === 'string' ? this.state[field] : accounting.unformat(this.state[field]);\n      this.setState(_defineProperty({}, field, unformatted));\n    } // Validates form\n\n  }, {\n    key: \"validate\",\n    value: function validate() {\n      return _toConsumableArray(requiredFields) // Converts the Set() into an array\n      .filter(Boolean) // Filters the array from any falsy value\n      .map(function (form) {\n        return form.validate();\n      }) // Calls the validate() method on each form\n      .every(function (e) {\n        return e;\n      }); // Checks if all validations suceeded\n    } // Exports state data\n\n  }, {\n    key: \"export\",\n    value: function _export() {\n      var _response;\n\n      var specificDescriptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.refs['specificDescriptions'].export();\n      var response = (_response = {}, _defineProperty(_response, IDENTIFICATION_NUMBER_KEY, this.state[IDENTIFICATION_NUMBER_KEY]), _defineProperty(_response, CUSTOMS_AMOUNT_KEY, this.state[CUSTOMS_AMOUNT_KEY]), _defineProperty(_response, CUSTOMS_UNIT_KEY, this.state[CUSTOMS_UNIT_KEY]), _defineProperty(_response, CUSTOMS_UNIT_VALUE_KEY, accounting.unformat(this.state[CUSTOMS_UNIT_VALUE_KEY])), _defineProperty(_response, USD_VALUE_KEY, accounting.unformat(this.state[USD_VALUE_KEY])), _response);\n      return _objectSpread({}, response, {\n        specific_descriptions: Object.keys(specificDescriptions).map(function (key) {\n          return specificDescriptions[key];\n        })\n      });\n    } // Sets a specific format depending of the kind\n\n  }, {\n    key: \"setFormat\",\n    value: function setFormat(value) {\n      var kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'string';\n\n      switch (kind) {\n        case 'money':\n          return accounting.formatMoney(absolutify(value), '$ ');\n\n        case 'integer':\n          return absolutify(value).toString();\n\n        case 'percentage':\n          return accounting.formatMoney(absolutify(value), {\n            symbol: '%',\n            format: '%v %s'\n          });\n\n        case 'string':\n          return value;\n\n        default:\n          return value;\n      }\n    } // Main render\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Mercanc\\xEDa\")), React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(TextField // identification_number, 1 a 100 caracteres alfanum√©ricos\n      , {\n        label: \"N\\xFAmero de identificaci\\xF3n\",\n        placeholder: \"N\\xFAmero de identificaci\\xF3n\",\n        value: this.state[IDENTIFICATION_NUMBER_KEY],\n        onChange: this.onChange.bind(this, IDENTIFICATION_NUMBER_KEY),\n        required: true,\n        ref: function ref(r) {\n          return requiredFields.add(r);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), React.createElement(TextField // cantidad aduana       **Convertir a string**\n      , {\n        label: \"Cantidad de bienes en aduana\",\n        placeholder: \"Cantidad de bienes en aduana\",\n        value: this.state[CUSTOMS_AMOUNT_KEY],\n        onChange: this.onChange.bind(this, CUSTOMS_AMOUNT_KEY),\n        onBlur: this.formatField.bind(this, CUSTOMS_AMOUNT_KEY, 'integer'),\n        onFocus: this.unformatField.bind(this, CUSTOMS_AMOUNT_KEY, 'integer'),\n        required: true,\n        ref: function ref(r) {\n          return requiredFields.add(r);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        label: \"Unidad de medida\",\n        placeholder: \"Unidad de medida\",\n        value: this.state[CUSTOMS_UNIT_KEY],\n        onChange: this.onChange.bind(this, CUSTOMS_UNIT_KEY),\n        required: true,\n        ref: function ref(r) {\n          return requiredFields.add(r);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }), React.createElement(TextField // valor unitario aduana. Igual al valor declarado en USD\n      , {\n        label: \"Precio unitario de mercanc\\xEDa en aduana\",\n        placeholder: \"Precio unitario de mercanc\\xEDa en aduana\",\n        value: this.state[CUSTOMS_UNIT_VALUE_KEY],\n        onChange: this.onChange.bind(this, CUSTOMS_UNIT_VALUE_KEY),\n        onBlur: this.formatField.bind(this, CUSTOMS_UNIT_VALUE_KEY, 'money'),\n        onFocus: this.unformatField.bind(this, CUSTOMS_UNIT_VALUE_KEY, 'money'),\n        required: true,\n        ref: function ref(r) {\n          return requiredFields.add(r);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }), React.createElement(TextField // valor d√≥lares. Valor total en d√≥lares. Valor resultante de: tipo de cambio, tipo de cambio usd, cantidad, valor unitario.\n      , {\n        label: \"Valor total (USD)\",\n        placeholder: \"Valor total (USD)\",\n        value: this.state[USD_VALUE_KEY],\n        onChange: this.onChange.bind(this, USD_VALUE_KEY),\n        onBlur: this.formatField.bind(this, USD_VALUE_KEY, 'money'),\n        onFocus: this.unformatField.bind(this, USD_VALUE_KEY, 'money'),\n        required: true,\n        ref: function ref(r) {\n          return requiredFields.add(r);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(SpecificDescriptions, {\n        ref: \"specificDescriptions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Merchandise;\n}(React.Component);\n\nexport default Merchandise;","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/newInvoice/complementos/foreignTrade/merchandises/merchandise/index.js"],"names":["React","accounting","TextField","absolutify","SpecificDescriptions","IDENTIFICATION_NUMBER_KEY","CUSTOMS_AMOUNT_KEY","CUSTOMS_UNIT_KEY","CUSTOMS_UNIT_VALUE_KEY","USD_VALUE_KEY","BRAND_KEY","MODEL_KEY","SUB_MODEL_KEY","SERIAL_NUMBER_KEY","requiredFields","Set","Merchandise","props","data","state","Object","assign","clear","field","e","setState","target","value","kind","formatted","setFormat","unformatted","unformat","filter","Boolean","map","form","validate","every","specificDescriptions","refs","export","response","specific_descriptions","keys","key","formatMoney","toString","symbol","format","onChange","bind","r","add","formatField","unformatField","Component"],"mappings":"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","sourcesContent":["// Libraries\nimport React from 'react'\nimport accounting from 'accounting'\n\n// Components\nimport TextField from 'shared/textField'\nimport { absolutify } from 'utils'\n\n// Children\nimport SpecificDescriptions from './specificDescriptions'\n\nconst IDENTIFICATION_NUMBER_KEY = 'identification_number'\nconst CUSTOMS_AMOUNT_KEY = 'customs_amount'\nconst CUSTOMS_UNIT_KEY = 'customs_unit'\nconst CUSTOMS_UNIT_VALUE_KEY = 'customs_unit_value'\nconst USD_VALUE_KEY = 'usd_value'\nconst BRAND_KEY = 'brand'\nconst MODEL_KEY = 'model'\nconst SUB_MODEL_KEY = 'sub_model'\nconst SERIAL_NUMBER_KEY = 'serial_number'\n\nconst requiredFields = new Set()\n\nclass Merchandise extends React.Component {\n  constructor (props) {\n    super(props)\n    this.data = {\n      [IDENTIFICATION_NUMBER_KEY]: '',\n      [CUSTOMS_AMOUNT_KEY]: '0',\n      [CUSTOMS_UNIT_KEY]: '0',\n      [CUSTOMS_UNIT_VALUE_KEY]: '0',\n      [USD_VALUE_KEY]: '0',\n      specific_descriptions: [\n        {\n          [BRAND_KEY]: 'brand',\n          [MODEL_KEY]: '',\n          [SUB_MODEL_KEY]: '',\n          [SERIAL_NUMBER_KEY]: ''\n        }\n      ]\n    }\n    this.state = Object.assign({}, this.data)\n  }\n\n  componentWillUnmount () {\n    // Clears the stored requiredFields\n    requiredFields.clear()\n  }\n\n  // Updates an input's value when it changes\n  onChange (field, e) {\n    this.setState({\n      [field]: e.target.value\n    })\n  }\n\n  // Sets the correct format to the content field when it losses the focus\n  formatField (field, kind = 'string') {\n    const formatted = this.setFormat(this.state[field], kind)\n    this.setState({\n      [field]: formatted\n    })\n  }\n\n  // Formats the current field as number when it gets the focus\n  unformatField (field, kind = 'string') {\n    const unformatted =\n      kind === 'string'\n        ? this.state[field]\n        : accounting.unformat(this.state[field])\n    this.setState({\n      [field]: unformatted\n    })\n  }\n\n  // Validates form\n  validate () {\n    return [...requiredFields] // Converts the Set() into an array\n      .filter(Boolean) // Filters the array from any falsy value\n      .map(form => form.validate()) // Calls the validate() method on each form\n      .every(e => e) // Checks if all validations suceeded\n  }\n\n  // Exports state data\n  export (specificDescriptions = this.refs['specificDescriptions'].export()) {\n    const response = {\n      [IDENTIFICATION_NUMBER_KEY]: this.state[IDENTIFICATION_NUMBER_KEY],\n      [CUSTOMS_AMOUNT_KEY]: this.state[CUSTOMS_AMOUNT_KEY],\n      [CUSTOMS_UNIT_KEY]: this.state[CUSTOMS_UNIT_KEY],\n      [CUSTOMS_UNIT_VALUE_KEY]: accounting.unformat(\n        this.state[CUSTOMS_UNIT_VALUE_KEY]\n      ),\n      [USD_VALUE_KEY]: accounting.unformat(this.state[USD_VALUE_KEY])\n    }\n    return {\n      ...response,\n      specific_descriptions: Object.keys(specificDescriptions).map(\n        key => specificDescriptions[key]\n      )\n    }\n  }\n\n  // Sets a specific format depending of the kind\n  setFormat (value, kind = 'string') {\n    switch (kind) {\n      case 'money':\n        return accounting.formatMoney(absolutify(value), '$ ')\n      case 'integer':\n        return absolutify(value).toString()\n      case 'percentage':\n        return accounting.formatMoney(absolutify(value), {\n          symbol: '%',\n          format: '%v %s'\n        })\n      case 'string':\n        return value\n      default:\n        return value\n    }\n  }\n\n  // Main render\n  render () {\n    return (\n      <div>\n        <hr />\n        <p className='content'>\n          <span className='title'>Mercanc√≠a</span>\n        </p>\n        <div className='columns'>\n          <div className='column'>\n            <TextField // identification_number, 1 a 100 caracteres alfanum√©ricos\n              label='N√∫mero de identificaci√≥n'\n              placeholder='N√∫mero de identificaci√≥n'\n              value={this.state[IDENTIFICATION_NUMBER_KEY]}\n              onChange={this.onChange.bind(this, IDENTIFICATION_NUMBER_KEY)}\n              required\n              ref={r => requiredFields.add(r)}\n            />\n            <br />\n            <TextField // cantidad aduana       **Convertir a string**\n              label='Cantidad de bienes en aduana'\n              placeholder='Cantidad de bienes en aduana'\n              value={this.state[CUSTOMS_AMOUNT_KEY]}\n              onChange={this.onChange.bind(this, CUSTOMS_AMOUNT_KEY)}\n              onBlur={this.formatField.bind(\n                this,\n                CUSTOMS_AMOUNT_KEY,\n                'integer'\n              )}\n              onFocus={this.unformatField.bind(\n                this,\n                CUSTOMS_AMOUNT_KEY,\n                'integer'\n              )}\n              required\n              ref={r => requiredFields.add(r)}\n            />\n            <br />\n\n            <TextField\n              label='Unidad de medida'\n              placeholder='Unidad de medida'\n              value={this.state[CUSTOMS_UNIT_KEY]}\n              onChange={this.onChange.bind(this, CUSTOMS_UNIT_KEY)}\n              required\n              ref={r => requiredFields.add(r)}\n            />\n            <br />\n            <TextField // valor unitario aduana. Igual al valor declarado en USD\n              label='Precio unitario de mercanc√≠a en aduana'\n              placeholder='Precio unitario de mercanc√≠a en aduana'\n              value={this.state[CUSTOMS_UNIT_VALUE_KEY]}\n              onChange={this.onChange.bind(this, CUSTOMS_UNIT_VALUE_KEY)}\n              onBlur={this.formatField.bind(\n                this,\n                CUSTOMS_UNIT_VALUE_KEY,\n                'money'\n              )}\n              onFocus={this.unformatField.bind(\n                this,\n                CUSTOMS_UNIT_VALUE_KEY,\n                'money'\n              )}\n              required\n              ref={r => requiredFields.add(r)}\n            />\n            <br />\n            <TextField // valor d√≥lares. Valor total en d√≥lares. Valor resultante de: tipo de cambio, tipo de cambio usd, cantidad, valor unitario.\n              label='Valor total (USD)'\n              placeholder='Valor total (USD)'\n              value={this.state[USD_VALUE_KEY]}\n              onChange={this.onChange.bind(this, USD_VALUE_KEY)}\n              onBlur={this.formatField.bind(this, USD_VALUE_KEY, 'money')}\n              onFocus={this.unformatField.bind(this, USD_VALUE_KEY, 'money')}\n              required\n              ref={r => requiredFields.add(r)}\n            />\n          </div>\n          <div className='column'>\n            <SpecificDescriptions ref='specificDescriptions' />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Merchandise\n"]},"metadata":{},"sourceType":"module"}