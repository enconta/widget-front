{"ast":null,"code":"import _toConsumableArray from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _camelCase from 'lodash/camelCase';\nimport _snakeCase from 'lodash/snakeCase';\nimport _isArray from 'lodash/isArray';\nimport _isObject from 'lodash/isObject';\nimport _pickBy from 'lodash/pickBy';\nimport _isEmpty from 'lodash/isEmpty';\nimport _isEqual from 'lodash/isEqual';\nimport _transform from 'lodash/transform';\nimport _get from 'lodash/get';\nimport queryString from 'query-string';\nimport accounting from 'accounting';\nimport moment from 'moment';\nimport { browserHistory } from 'react-router';\nimport crypto from 'crypto';\nimport SessionStore from 'stores/session'; // Files\n\nexport var FILE_TEMPLATE_URL = 'https://s3-us-west-2.amazonaws.com/enconta-public/environment/templates/template.xlsx'; // Date formats\n\nexport var FULL_DATE_FORMAT = 'YYYY-MM-DDTHH:mm:ss';\nexport var DATE_FORMAT = 'YYYY-MM-DD';\nexport var PERIOD_FORMAT = 'YYYY-MM'; // Binds the passed functions to the passed 'this'\n\nexport var binder = function binder(self) {\n  for (var _len = arguments.length, funcs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    funcs[_key - 1] = arguments[_key];\n  }\n\n  funcs.forEach(function (func) {\n    self[func] = self[func].bind(self);\n  });\n}; // Funcion para convertir las keys de un objeto o array de objetos a snake o camel case\n// dependiendo de la funcion que sea pasada,\n// usar los metodos snakeCase y camelCase declarados abajo\n\nvar caseConvertor = function caseConvertor(caseFunction) {\n  return function convertCase(object) {\n    // TODO: mejorar esta funcion con _mapKeys\n    if (_isArray(object)) {\n      // Si es un array vacio o cuyo primer elemento no sea un objeto, lo regresa tal cual\n      if (object.length > 0 && _isObject(object[0]) === false) return object;\n      return object.map(convertCase); // Si es un array, regresa un array al que se le aplica esta funcion a cada elemento\n    }\n\n    return Object.keys(object) // Saca las keys del objeto en un array\n    .reduce(function (acc, curr) {\n      return Object.assign(acc, _defineProperty({}, caseFunction(curr), _isObject(object[curr]) // Regresa el key en snake o camel case dependiendo de la funcion utilizada\n      ? convertCase(object[curr]) // Si el valor de esa key es otro objeto, se le aplica esta funcion a ese objeto\n      : object[curr]));\n    }, {});\n  };\n};\n\nexport var camelCase = caseConvertor(_camelCase);\nexport var snakeCase = caseConvertor(_snakeCase); // Recursively remove all null properties from an object\n// NOTE: This modifies the original object, make a copy instead <- this can be achieved with a reduce,\n// check the convert case function to implement it\n// - Removes values set to null\n// - Removes empty arrays\n// - Recursively iterates through objects\n\nexport var removeEmpty = function removeEmpty(obj) {\n  Object.entries(obj).forEach(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        val = _ref2[1];\n\n    if (_isArray(val) && val !== null && val.length === 0) delete obj[key];else if (_isObject(val)) removeEmpty(val);else if (val === null) delete obj[key]; // Check if parent is empty after initial deleting, if so, delete the parent\n\n    if (_isObject(val) && Object.keys(val).length === 0) delete obj[key];\n    if (_isArray(val) && val !== null && val.length === 0) delete obj[key];\n  });\n  return obj;\n};\nexport var currency = function currency() {\n  var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  return isNaN(n) ? n : \"$\".concat(parseFloat(n).toFixed(2));\n}; // Some amounts require to be sent in cents\n// Required by our API\n\nexport var amountToCents = function amountToCents(amount) {\n  return Math.round(accounting.unformat(amount) * 100);\n}; // Round numbers using format (don't use native JS rounding, it's not as precise)\n// Then format as cents (multiply by 100)\n// Required by our API\n\nexport var formatCents = function formatCents(amount) {\n  return Number(accounting.toFixed(Number(accounting.unformat(accounting.formatNumber(amount, 2))) * 100));\n}; // Some amounts require to be sent in cents\n// Required by our API\n\nexport var taxRateFormat = function taxRateFormat(tax) {\n  return accounting.formatMoney(tax / 100, '', 6, '');\n}; // Count days between two dates\n\nexport var countDays = function countDays(startDate, endDate) {\n  var days = 0;\n\n  while (moment(startDate).isBefore(endDate)) {\n    startDate = moment(startDate).add(1, 'day');\n    days++;\n  }\n\n  return days;\n};\nexport var formatNumberToString = function formatNumberToString(num, minChars) {\n  // Regrsa un numero convertirdo a string con los zeros correspondientes\n  // para lograr el minimo de caracteres pasados en el atributo\n  return num.toString().length < minChars ? formatNumberToString(\"0\".concat(num), minChars) : num.toString();\n}; // Return the absolute value of a number\n\nexport var absolutify = function absolutify(num) {\n  return Math.abs(accounting.unformat(num));\n}; // Return the amount formated as currency with the $ symbol\n\nexport var formatCurrency = function formatCurrency(amount) {\n  return accounting.formatMoney(amount, '$ ');\n}; // Format date as API requires when creating new invoices\n\nexport var formatDateInvoice = function formatDateInvoice(date) {\n  return moment(date).format(FULL_DATE_FORMAT);\n}; // Return string with human dates\n\nexport var prettyDate = function prettyDate(d) {\n  var dateInputFormat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DATE_FORMAT;\n  var shortMonth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var lowerCaseMonth = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  var separator = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : ' de ';\n\n  // Revisar fechas inválidas\n  if (typeof d === 'undefined' || d === null || !moment(d, dateInputFormat).isValid()) {\n    return '';\n  }\n\n  var year = moment(d, dateInputFormat).format('YYYY'); // Meses\n\n  var month = shortMonth ? MONTHS_SHORT[Number(moment(d, dateInputFormat).format('M')) - 1] : MONTHS_CATALOG[Number(moment(d, dateInputFormat).format('M')) - 1];\n  if (lowerCaseMonth) month = month.toLowerCase();\n  return \"\".concat(moment(d, dateInputFormat).format('D')).concat(separator).concat(month).concat(separator).concat(year);\n};\nexport var getHour = function getHour(d) {\n  var showSeconds = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var format = showSeconds ? 'HH:mm:ss' : 'HH:mm';\n  return moment(d).format(format);\n}; // Return string with human dates (for periods only)\n\nexport var prettyPeriod = function prettyPeriod(d) {\n  var dateInputFormat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DATE_FORMAT;\n  var shortMonth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var separator = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : ' de ';\n\n  // Revisar fechas inválidas\n  if (typeof d === 'undefined' || d === null || !moment(d, dateInputFormat).isValid()) {\n    return '';\n  } // Meses\n\n\n  var month = shortMonth ? MONTHS_SHORT[Number(moment(d, dateInputFormat).format('M')) - 1] : MONTHS_CATALOG[Number(moment(d, dateInputFormat).format('M')) - 1];\n  return \"\".concat(month).concat(separator).concat(moment(d, dateInputFormat).format('YYYY'));\n};\nexport var prettyDiffPeriod = function prettyDiffPeriod(initialDate, finalDate, shortMonth) {\n  var separator = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '-';\n\n  if (!moment(initialDate).isValid() || !moment(finalDate).isValid()) {\n    throw new Error('prettyDiffPeriod recibe dos instancias de moment validas');\n  }\n\n  var initialMonth = shortMonth ? MONTHS_SHORT[Number(moment(initialDate).format('M')) - 1] : MONTHS_CATALOG[Number(moment(initialDate).format('M')) - 1];\n  var finalMonth = shortMonth ? MONTHS_SHORT[Number(moment(finalDate).format('M')) - 1] : MONTHS_CATALOG[Number(moment(finalDate).format('M')) - 1];\n  return \"\".concat(initialMonth, \" \").concat(separator, \" \").concat(finalMonth, \" \").concat(finalDate.format('YYYY'));\n}; // Leftpad\n\nexport var leftpad = function leftpad(str, len) {\n  var pad = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ' ';\n  str = String(str);\n  var i = -1;\n  len = len - str.length;\n\n  while (++i < len) {\n    str = pad + str;\n  }\n\n  return str;\n}; // Return a formatted amount\n\nexport var money = function money(amount) {\n  var symbol = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return accounting.formatMoney(amount, symbol, 2);\n}; // Return a query string for the url filters and pages, receives an object, if empty object is received it returns an empty string\n\nexport var stringifyQuery = function stringifyQuery(params) {\n  var _filters = _pickBy(params, function (filter) {\n    if (typeof filter === 'string') return filter.length > 0;\n    return true;\n  }); // Add the query params\n\n\n  return !_isEmpty(_filters) ? \"?\".concat(queryString.stringify(_filters)) : '';\n}; // Creates a custom object used to call the GA library\n\nexport var createGaEvent = function createGaEvent(category, action, label, value) {\n  // Create the base obj\n  var gaEvent = {\n    category: category,\n    action: action\n  }; // Return only option params in provided\n\n  if (label) gaEvent.label = label;\n  if (value) gaEvent.value = value; // Just return the created object\n\n  return gaEvent;\n};\n/**\n * Deep diff between two object, using lodash\n * @param  {Object} object Object compared\n * @param  {Object} base   Object to compare with\n * @return {Object}        Return a new object who represent the diff\n */\n\nexport var difference = function difference(object, base) {\n  function changes(object, base) {\n    return _transform(object, function (result, value, key) {\n      if (!_isEqual(value, base[key])) {\n        result[key] = _isObject(value) && _isObject(base[key]) ? changes(value, base[key]) : value;\n      }\n    }, Object.create(null));\n  }\n\n  return changes(object, base);\n};\n/**\n * Return boolean if has Deep diff between two object, using lodash\n * @param  {Object} object Object compared\n * @param  {Object} base   Object to compare with\n * @return {Object}        Return a new object who represent the diff\n */\n\nexport var hasDifference = function hasDifference(object, base) {\n  return !_isEmpty(difference(object, base));\n};\nvar extensionFileRex = VerEx().find('.').anythingBut(''); // Define the regex to find everything after the '.' (including the '.')\n\nexport var formatFile =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(files) {\n    var _files, fileUpload, name, f64, contentType, file64;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _files = _slicedToArray(files, 1), fileUpload = _files[0];\n\n            if (fileUpload) {\n              _context.next = 3;\n              break;\n            }\n\n            throw new Error('No ha podido leer el archivo, porfavor inténtalo de nuevo');\n\n          case 3:\n            name = fileUpload.name ? extensionFileRex.replace(fileUpload.name, fileUpload.name.match(extensionFileRex)[0].toLowerCase()) : 'key';\n            _context.next = 6;\n            return toBase64(fileUpload);\n\n          case 6:\n            f64 = _context.sent;\n            contentType = f64.result.split(';base64')[0].replace('data:', '');\n            file64 = f64.result.split(',')[1];\n            return _context.abrupt(\"return\", {\n              file64: file64,\n              name: name,\n              contentType: contentType\n            });\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function formatFile(_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var toBase64 = function toBase64(file) {\n  return new Promise(function (resolve, reject) {\n    var reader = new window.FileReader();\n\n    reader.onloadend = function (e) {\n      if (e.target.error) {\n        reject(e.target.error);\n      }\n\n      resolve({\n        fileName: file.name,\n        result: e.target.result\n      });\n    };\n\n    reader.readAsDataURL(file);\n  });\n};\n/**\n * Return the month name and it adjust the month number with two numbers\n */\n\nexport var getMonthLabel = function getMonthLabel(month) {\n  if (month < 10 && String(month).length === 1) {\n    month = \"0\".concat(month);\n  }\n\n  return _get(MONTHS.find(function (_ref4) {\n    var id = _ref4.id;\n    return id === String(month);\n  }), ['label'], '');\n};\n/**\n *Returns true If date is expired. If date is 1 or more days after the expiration date\n *Returns false if date is equal or is many days before the expiration date.\n * @param {Moment} expirationDate\n */\n\nexport var isExpired = function isExpired(expirationDate) {\n  var currentDate = moment();\n  return expirationDate.diff(currentDate, 'days') < 0;\n};\n/** Sort numbers, it helps to sort receiving the smaller number and the greater number, and\n sorted with respect to all the different elements\n */\n\nexport var ascendingOrder = function ascendingOrder(less, greater) {\n  return less - greater;\n};\n/**\n * Handle links to specific URL\n * Ir works for goback when the current view has paginator\n * @param {*} url\n */\n\nexport var handleURL = function handleURL(url) {\n  browserHistory.push(url);\n};\n/**\n * It return to previous view if the current view doesn't has paginator\n */\n\nexport var handleBack = function handleBack() {\n  browserHistory.goBack();\n};\n/**\n * It's used to validate required fields in forms\n * @param {Set} requiredFields\n * @param {object} component\n */\n\nexport var validateAll = function validateAll(requiredFields, component) {\n  var nonFalsyFields = _toConsumableArray(requiredFields).filter(Boolean);\n\n  var validatedFields = nonFalsyFields.map(function (form) {\n    return form.validate.call(component);\n  });\n  var allValidationsSucceeded = validatedFields.every(function (field) {\n    return field;\n  });\n  return allValidationsSucceeded;\n};\n/**\n * It's used to cipher text\n */\n\nexport var encryptData = function encryptData(text) {\n  var algorithm = 'aes-256-cbc';\n  var iv = process.env.INITIALIZATION_VECTOR;\n  var key = process.env.ENCRYPTION_KEY;\n  var textToBase64 = window.btoa(text);\n  var cipher = crypto.createCipheriv(algorithm, key, iv);\n  var encrypted = cipher.update(textToBase64);\n  encrypted = Buffer.concat([encrypted, cipher.final()]);\n  return encrypted.toString('base64').trim();\n};\n/* Generic onChange to handle the inputs for general data form\n * @private\n * @typedef {React.ChangeEvent<HTMLInputElement> | Object | string} Input\n * @param {string} field - Input id to save\n * @returns {function(Input): void} - Value will save in the state\n */\n\nexport var handleInputs = function handleInputs(component, field) {\n  return function (event) {\n    var value = event && event.nativeEvent ? event.target.value : event;\n    component.setState(_defineProperty({}, field, value));\n  };\n};\n/**\n * This function helps the SAT Product Code Select Searcher used in Invoices and Inventories\n * It rename the properties so they can be used in the Select Field\n * @param {array} obj.products\n */\n\nexport var parseProducts = function parseProducts(_ref5) {\n  var products = _ref5.products;\n  return products.map(function (element) {\n    return {\n      value: element.clave_prod_serv,\n      label: element.description\n    };\n  }).filter(function (element) {\n    return element.label;\n  });\n};\n/**\n * This function helps the SAT Units Code Select Searcher used in Invoices and Inventories\n * It rename the properties so they can be used in the Select Field\n * @param {array} obj.units\n */\n\nexport var parseUnits = function parseUnits(_ref6) {\n  var units = _ref6.units;\n  return units.map(function (element) {\n    return {\n      value: element.unit_code,\n      label: element.name\n    };\n  }).filter(function (element) {\n    return element.label;\n  });\n};\nexport var replaceUnderScore = function replaceUnderScore(string) {\n  return string.replace(/_/g, ' ');\n};\nexport var resetScroll = function resetScroll() {\n  window.scrollTo(0, 0);\n};\nexport var checkFeatureFlags = function checkFeatureFlags(features, url, key) {\n  if (!features.find(function (feature) {\n    return feature.key === key;\n  })) {\n    return browserHistory.push(url);\n  }\n};\n/**\n *\n * @param {string} modal\n * @param {object} component\n */\n\nexport var handleModals = function handleModals(modal, component) {\n  component.setState(function (state) {\n    return _defineProperty({}, modal, !state[modal]);\n  });\n};\nexport var getCurrentServer = function getCurrentServer() {\n  switch (process.env.API_SERVER) {\n    case 'https://api.enconta.com':\n      return 'production';\n\n    case 'https://api-staging.enconta.com':\n      return 'staging';\n\n    default:\n      return 'local';\n  }\n};\n/**\n * Helps avoiding to type an space at the beginning of the input and avoid to send empty string to DB\n * @param {string} string\n */\n\nexport var avoidBlankSpace = function avoidBlankSpace(string) {\n  return string.replace(/^\\s+/g, '');\n};\n/*\n * Helps to know if the warning advertisement(production or staging) active\n */\n\nexport var isWarningActivated = function isWarningActivated() {\n  var currentServer = getCurrentServer();\n  return currentServer === 'production' || currentServer === 'staging';\n};\n/*\n * Checks if an specific string contains a number\n */\n\nexport var hasANumber = function hasANumber(string) {\n  return string.match(/\\d/g);\n};\n/*\n * Checks if an specific string contains capital letter\n */\n\nexport var hasCapitalLetter = function hasCapitalLetter(string) {\n  return string.match('.*[A-Z].*');\n};\n/*\n * Checks if the password contains the correct length\n */\n\nexport var getPasswordLengthValid = function getPasswordLengthValid(string) {\n  if (string.length >= 6) {\n    return true;\n  }\n};\n/*\n * Toggles state to controle password visibility\n */\n\nexport var toggleShowHidePassword = function toggleShowHidePassword(component, field) {\n  component.setState(function (state) {\n    return _defineProperty({}, field, !state[field]);\n  });\n};\nexport var isDisabledInvoiceLabeling = function isDisabledInvoiceLabeling(status) {\n  var plan = getClientsPlan();\n  return status === 'cancelled' || plan === 'free';\n};\nexport var getClientsPlan = function getClientsPlan() {\n  var _SessionStore$getCurr = SessionStore.getCurrentEntity(),\n      plan = _SessionStore$getCurr.plan;\n\n  return plan;\n};\nexport var askRemainingPlanDays = function askRemainingPlanDays() {\n  var _SessionStore$getCurr2 = SessionStore.getCurrentEntity(),\n      id = _SessionStore$getCurr2.id,\n      plan = _SessionStore$getCurr2.plan;\n\n  if (plan === 'free_premium') {\n    PlanActions.getPlanRemainingDays(id);\n  }\n};\nexport var getPlanName = function getPlanName() {\n  switch (getClientsPlan()) {\n    case 'free':\n      return 'Freemium';\n\n    case 'free_premium':\n    case 'premium':\n      return 'Premium';\n\n    case 'integral_service':\n      return 'Servicio integral';\n  }\n};","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/utils/index.js"],"names":["_camelCase","_snakeCase","_isArray","_isObject","_pickBy","_isEmpty","_isEqual","_transform","_get","queryString","accounting","moment","browserHistory","crypto","SessionStore","FILE_TEMPLATE_URL","FULL_DATE_FORMAT","DATE_FORMAT","PERIOD_FORMAT","binder","self","funcs","forEach","func","bind","caseConvertor","caseFunction","convertCase","object","length","map","Object","keys","reduce","acc","curr","assign","camelCase","snakeCase","removeEmpty","obj","entries","key","val","currency","n","isNaN","parseFloat","toFixed","amountToCents","amount","Math","round","unformat","formatCents","Number","formatNumber","taxRateFormat","tax","formatMoney","countDays","startDate","endDate","days","isBefore","add","formatNumberToString","num","minChars","toString","absolutify","abs","formatCurrency","formatDateInvoice","date","format","prettyDate","d","dateInputFormat","shortMonth","lowerCaseMonth","separator","isValid","year","month","MONTHS_SHORT","MONTHS_CATALOG","toLowerCase","getHour","showSeconds","prettyPeriod","prettyDiffPeriod","initialDate","finalDate","Error","initialMonth","finalMonth","leftpad","str","len","pad","String","i","money","symbol","stringifyQuery","params","_filters","filter","stringify","createGaEvent","category","action","label","value","gaEvent","difference","base","changes","result","create","hasDifference","extensionFileRex","VerEx","find","anythingBut","formatFile","files","fileUpload","name","replace","match","toBase64","f64","contentType","split","file64","file","Promise","resolve","reject","reader","window","FileReader","onloadend","e","target","error","fileName","readAsDataURL","getMonthLabel","MONTHS","id","isExpired","expirationDate","currentDate","diff","ascendingOrder","less","greater","handleURL","url","push","handleBack","goBack","validateAll","requiredFields","component","nonFalsyFields","Boolean","validatedFields","form","validate","call","allValidationsSucceeded","every","field","encryptData","text","algorithm","iv","process","env","INITIALIZATION_VECTOR","ENCRYPTION_KEY","textToBase64","btoa","cipher","createCipheriv","encrypted","update","Buffer","concat","final","trim","handleInputs","event","nativeEvent","setState","parseProducts","products","element","clave_prod_serv","description","parseUnits","units","unit_code","replaceUnderScore","string","resetScroll","scrollTo","checkFeatureFlags","features","feature","handleModals","modal","state","getCurrentServer","API_SERVER","avoidBlankSpace","isWarningActivated","currentServer","hasANumber","hasCapitalLetter","getPasswordLengthValid","toggleShowHidePassword","isDisabledInvoiceLabeling","status","plan","getClientsPlan","getCurrentEntity","askRemainingPlanDays","PlanActions","getPlanRemainingDays","getPlanName"],"mappings":";;;;;AAAA,OAAOA,UAAP,MAAuB,kBAAvB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACC,OAAOC,WAAP,MAAwB,cAAxB;AACD,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACC,SAASC,cAAT,QAA+B,cAA/B;AACD,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAOC,YAAP,MAAyB,gBAAzB,C,CAGA;;AACA,OAAO,IAAMC,iBAAiB,GAC5B,uFADK,C,CAGP;;AACA,OAAO,IAAMC,gBAAgB,GAAG,qBAAzB;AACP,OAAO,IAAMC,WAAW,GAAG,YAApB;AACP,OAAO,IAAMC,aAAa,GAAG,SAAtB,C,CAEP;;AACA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,IAAD,EAAoB;AAAA,oCAAVC,KAAU;AAAVA,IAAAA,KAAU;AAAA;;AACxCA,EAAAA,KAAK,CAACC,OAAN,CAAc,UAAAC,IAAI,EAAI;AACpBH,IAAAA,IAAI,CAACG,IAAD,CAAJ,GAAaH,IAAI,CAACG,IAAD,CAAJ,CAAWC,IAAX,CAAgBJ,IAAhB,CAAb;AACD,GAFD;AAGD,CAJM,C,CAMP;AACA;AACA;;AACA,IAAMK,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,YAAY,EAAI;AACpC,SAAO,SAASC,WAAT,CAAsBC,MAAtB,EAA8B;AACnC;AACA,QAAI1B,QAAQ,CAAC0B,MAAD,CAAZ,EAAsB;AACpB;AACA,UAAIA,MAAM,CAACC,MAAP,GAAgB,CAAhB,IAAqB1B,SAAS,CAACyB,MAAM,CAAC,CAAD,CAAP,CAAT,KAAyB,KAAlD,EAAyD,OAAOA,MAAP;AACzD,aAAOA,MAAM,CAACE,GAAP,CAAWH,WAAX,CAAP,CAHoB,CAGW;AAChC;;AACD,WAAOI,MAAM,CAACC,IAAP,CAAYJ,MAAZ,EAAoB;AAApB,KACJK,MADI,CAEH,UAACC,GAAD,EAAMC,IAAN;AAAA,aACEJ,MAAM,CAACK,MAAP,CAAcF,GAAd,sBAEGR,YAAY,CAACS,IAAD,CAFf,EAEwBhC,SAAS,CAACyB,MAAM,CAACO,IAAD,CAAP,CAAT,CAAwB;AAAxB,QAClBR,WAAW,CAACC,MAAM,CAACO,IAAD,CAAP,CADO,CACQ;AADR,QAElBP,MAAM,CAACO,IAAD,CAJZ,EADF;AAAA,KAFG,EASH,EATG,CAAP;AAWD,GAlBD;AAmBD,CApBD;;AAsBA,OAAO,IAAME,SAAS,GAAGZ,aAAa,CAACzB,UAAD,CAA/B;AACP,OAAO,IAAMsC,SAAS,GAAGb,aAAa,CAACxB,UAAD,CAA/B,C,CAEP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMsC,WAAW,GAAG,SAAdA,WAAc,CAAAC,GAAG,EAAI;AAChCT,EAAAA,MAAM,CAACU,OAAP,CAAeD,GAAf,EAAoBlB,OAApB,CAA4B,gBAAgB;AAAA;AAAA,QAAdoB,GAAc;AAAA,QAATC,GAAS;;AAC1C,QAAIzC,QAAQ,CAACyC,GAAD,CAAR,IAAiBA,GAAG,KAAK,IAAzB,IAAiCA,GAAG,CAACd,MAAJ,KAAe,CAApD,EAAuD,OAAOW,GAAG,CAACE,GAAD,CAAV,CAAvD,KACK,IAAIvC,SAAS,CAACwC,GAAD,CAAb,EAAoBJ,WAAW,CAACI,GAAD,CAAX,CAApB,KACA,IAAIA,GAAG,KAAK,IAAZ,EAAkB,OAAOH,GAAG,CAACE,GAAD,CAAV,CAHmB,CAI1C;;AACA,QAAIvC,SAAS,CAACwC,GAAD,CAAT,IAAkBZ,MAAM,CAACC,IAAP,CAAYW,GAAZ,EAAiBd,MAAjB,KAA4B,CAAlD,EAAqD,OAAOW,GAAG,CAACE,GAAD,CAAV;AACrD,QAAIxC,QAAQ,CAACyC,GAAD,CAAR,IAAiBA,GAAG,KAAK,IAAzB,IAAiCA,GAAG,CAACd,MAAJ,KAAe,CAApD,EAAuD,OAAOW,GAAG,CAACE,GAAD,CAAV;AACxD,GAPD;AAQA,SAAOF,GAAP;AACD,CAVM;AAYP,OAAO,IAAMI,QAAQ,GAAG,SAAXA,QAAW,GAAW;AAAA,MAAVC,CAAU,uEAAN,CAAM;AACjC,SAAOC,KAAK,CAACD,CAAD,CAAL,GAAWA,CAAX,cAAmBE,UAAU,CAACF,CAAD,CAAV,CAAcG,OAAd,CAAsB,CAAtB,CAAnB,CAAP;AACD,CAFM,C,CAIP;AACA;;AACA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,MAAM,EAAI;AACrC,SAAOC,IAAI,CAACC,KAAL,CAAW1C,UAAU,CAAC2C,QAAX,CAAoBH,MAApB,IAA8B,GAAzC,CAAP;AACD,CAFM,C,CAIP;AACA;AACA;;AACA,OAAO,IAAMI,WAAW,GAAG,SAAdA,WAAc,CAAAJ,MAAM,EAAI;AACnC,SAAOK,MAAM,CACX7C,UAAU,CAACsC,OAAX,CACEO,MAAM,CAAC7C,UAAU,CAAC2C,QAAX,CAAoB3C,UAAU,CAAC8C,YAAX,CAAwBN,MAAxB,EAAgC,CAAhC,CAApB,CAAD,CAAN,GAAkE,GADpE,CADW,CAAb;AAKD,CANM,C,CAQP;AACA;;AACA,OAAO,IAAMO,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,GAAG,EAAI;AAClC,SAAOhD,UAAU,CAACiD,WAAX,CAAuBD,GAAG,GAAG,GAA7B,EAAkC,EAAlC,EAAsC,CAAtC,EAAyC,EAAzC,CAAP;AACD,CAFM,C,CAIP;;AACA,OAAO,IAAME,SAAS,GAAG,SAAZA,SAAY,CAACC,SAAD,EAAYC,OAAZ,EAAwB;AAC/C,MAAIC,IAAI,GAAG,CAAX;;AACA,SAAOpD,MAAM,CAACkD,SAAD,CAAN,CAAkBG,QAAlB,CAA2BF,OAA3B,CAAP,EAA4C;AAC1CD,IAAAA,SAAS,GAAGlD,MAAM,CAACkD,SAAD,CAAN,CAAkBI,GAAlB,CAAsB,CAAtB,EAAyB,KAAzB,CAAZ;AACAF,IAAAA,IAAI;AACL;;AACD,SAAOA,IAAP;AACD,CAPM;AASP,OAAO,IAAMG,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,GAAD,EAAMC,QAAN,EAAmB;AACrD;AACA;AACA,SAAOD,GAAG,CAACE,QAAJ,GAAexC,MAAf,GAAwBuC,QAAxB,GACHF,oBAAoB,YAAKC,GAAL,GAAYC,QAAZ,CADjB,GAEHD,GAAG,CAACE,QAAJ,EAFJ;AAGD,CANM,C,CAQP;;AACA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAH,GAAG;AAAA,SAAIhB,IAAI,CAACoB,GAAL,CAAS7D,UAAU,CAAC2C,QAAX,CAAoBc,GAApB,CAAT,CAAJ;AAAA,CAAtB,C,CAEP;;AACA,OAAO,IAAMK,cAAc,GAAG,SAAjBA,cAAiB,CAAAtB,MAAM;AAAA,SAAIxC,UAAU,CAACiD,WAAX,CAAuBT,MAAvB,EAA+B,IAA/B,CAAJ;AAAA,CAA7B,C,CAEP;;AACA,OAAO,IAAMuB,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,IAAI;AAAA,SAAI/D,MAAM,CAAC+D,IAAD,CAAN,CAAaC,MAAb,CAAoB3D,gBAApB,CAAJ;AAAA,CAA9B,C,CAEP;;AACA,OAAO,IAAM4D,UAAU,GAAG,SAAbA,UAAa,CACxBC,CADwB,EAMrB;AAAA,MAJHC,eAIG,uEAJe7D,WAIf;AAAA,MAHH8D,UAGG,uEAHU,KAGV;AAAA,MAFHC,cAEG,uEAFc,IAEd;AAAA,MADHC,SACG,uEADS,MACT;;AACH;AACA,MACE,OAAOJ,CAAP,KAAa,WAAb,IACAA,CAAC,KAAK,IADN,IAEA,CAAClE,MAAM,CAACkE,CAAD,EAAIC,eAAJ,CAAN,CAA2BI,OAA3B,EAHH,EAIE;AACA,WAAO,EAAP;AACD;;AACD,MAAMC,IAAI,GAAGxE,MAAM,CAACkE,CAAD,EAAIC,eAAJ,CAAN,CAA2BH,MAA3B,CAAkC,MAAlC,CAAb,CATG,CAUH;;AACA,MAAIS,KAAK,GAAGL,UAAU,GAClBM,YAAY,CAAC9B,MAAM,CAAC5C,MAAM,CAACkE,CAAD,EAAIC,eAAJ,CAAN,CAA2BH,MAA3B,CAAkC,GAAlC,CAAD,CAAN,GAAiD,CAAlD,CADM,GAElBW,cAAc,CAAC/B,MAAM,CAAC5C,MAAM,CAACkE,CAAD,EAAIC,eAAJ,CAAN,CAA2BH,MAA3B,CAAkC,GAAlC,CAAD,CAAN,GAAiD,CAAlD,CAFlB;AAGA,MAAIK,cAAJ,EAAoBI,KAAK,GAAGA,KAAK,CAACG,WAAN,EAAR;AACpB,mBAAU5E,MAAM,CAACkE,CAAD,EAAIC,eAAJ,CAAN,CAA2BH,MAA3B,CACR,GADQ,CAAV,SAEIM,SAFJ,SAEgBG,KAFhB,SAEwBH,SAFxB,SAEoCE,IAFpC;AAGD,CAxBM;AA0BP,OAAO,IAAMK,OAAO,GAAG,SAAVA,OAAU,CAACX,CAAD,EAA4B;AAAA,MAAxBY,WAAwB,uEAAV,KAAU;AACjD,MAAId,MAAM,GAAGc,WAAW,GAAG,UAAH,GAAgB,OAAxC;AACA,SAAO9E,MAAM,CAACkE,CAAD,CAAN,CAAUF,MAAV,CAAiBA,MAAjB,CAAP;AACD,CAHM,C,CAKP;;AACA,OAAO,IAAMe,YAAY,GAAG,SAAfA,YAAe,CAC1Bb,CAD0B,EAKvB;AAAA,MAHHC,eAGG,uEAHe7D,WAGf;AAAA,MAFH8D,UAEG,uEAFU,KAEV;AAAA,MADHE,SACG,uEADS,MACT;;AACH;AACA,MACE,OAAOJ,CAAP,KAAa,WAAb,IACAA,CAAC,KAAK,IADN,IAEA,CAAClE,MAAM,CAACkE,CAAD,EAAIC,eAAJ,CAAN,CAA2BI,OAA3B,EAHH,EAIE;AACA,WAAO,EAAP;AACD,GARE,CASH;;;AACA,MAAIE,KAAK,GAAGL,UAAU,GAClBM,YAAY,CAAC9B,MAAM,CAAC5C,MAAM,CAACkE,CAAD,EAAIC,eAAJ,CAAN,CAA2BH,MAA3B,CAAkC,GAAlC,CAAD,CAAN,GAAiD,CAAlD,CADM,GAElBW,cAAc,CAAC/B,MAAM,CAAC5C,MAAM,CAACkE,CAAD,EAAIC,eAAJ,CAAN,CAA2BH,MAA3B,CAAkC,GAAlC,CAAD,CAAN,GAAiD,CAAlD,CAFlB;AAGA,mBAAUS,KAAV,SAAkBH,SAAlB,SAA8BtE,MAAM,CAACkE,CAAD,EAAIC,eAAJ,CAAN,CAA2BH,MAA3B,CAAkC,MAAlC,CAA9B;AACD,CAnBM;AAqBP,OAAO,IAAMgB,gBAAgB,GAAG,SAAnBA,gBAAmB,CAC9BC,WAD8B,EAE9BC,SAF8B,EAG9Bd,UAH8B,EAK3B;AAAA,MADHE,SACG,uEADS,GACT;;AACH,MAAI,CAACtE,MAAM,CAACiF,WAAD,CAAN,CAAoBV,OAApB,EAAD,IAAkC,CAACvE,MAAM,CAACkF,SAAD,CAAN,CAAkBX,OAAlB,EAAvC,EAAoE;AAClE,UAAM,IAAIY,KAAJ,CAAU,0DAAV,CAAN;AACD;;AAED,MAAMC,YAAY,GAAGhB,UAAU,GAC3BM,YAAY,CAAC9B,MAAM,CAAC5C,MAAM,CAACiF,WAAD,CAAN,CAAoBjB,MAApB,CAA2B,GAA3B,CAAD,CAAN,GAA0C,CAA3C,CADe,GAE3BW,cAAc,CAAC/B,MAAM,CAAC5C,MAAM,CAACiF,WAAD,CAAN,CAAoBjB,MAApB,CAA2B,GAA3B,CAAD,CAAN,GAA0C,CAA3C,CAFlB;AAIA,MAAMqB,UAAU,GAAGjB,UAAU,GACzBM,YAAY,CAAC9B,MAAM,CAAC5C,MAAM,CAACkF,SAAD,CAAN,CAAkBlB,MAAlB,CAAyB,GAAzB,CAAD,CAAN,GAAwC,CAAzC,CADa,GAEzBW,cAAc,CAAC/B,MAAM,CAAC5C,MAAM,CAACkF,SAAD,CAAN,CAAkBlB,MAAlB,CAAyB,GAAzB,CAAD,CAAN,GAAwC,CAAzC,CAFlB;AAGA,mBAAUoB,YAAV,cAA0Bd,SAA1B,cAAuCe,UAAvC,cAAqDH,SAAS,CAAClB,MAAV,CACnD,MADmD,CAArD;AAGD,CApBM,C,CAsBP;;AACA,OAAO,IAAMsB,OAAO,GAAG,SAAVA,OAAU,CAACC,GAAD,EAAMC,GAAN,EAAyB;AAAA,MAAdC,GAAc,uEAAR,GAAQ;AAC9CF,EAAAA,GAAG,GAAGG,MAAM,CAACH,GAAD,CAAZ;AACA,MAAII,CAAC,GAAG,CAAC,CAAT;AACAH,EAAAA,GAAG,GAAGA,GAAG,GAAGD,GAAG,CAACrE,MAAhB;;AACA,SAAO,EAAEyE,CAAF,GAAMH,GAAb,EAAkB;AAChBD,IAAAA,GAAG,GAAGE,GAAG,GAAGF,GAAZ;AACD;;AACD,SAAOA,GAAP;AACD,CARM,C,CAUP;;AACA,OAAO,IAAMK,KAAK,GAAG,SAARA,KAAQ,CAACrD,MAAD;AAAA,MAASsD,MAAT,uEAAkB,EAAlB;AAAA,SACnB9F,UAAU,CAACiD,WAAX,CAAuBT,MAAvB,EAA+BsD,MAA/B,EAAuC,CAAvC,CADmB;AAAA,CAAd,C,CAGP;;AACA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,MAAM,EAAI;AACtC,MAAMC,QAAQ,GAAGvG,OAAO,CAACsG,MAAD,EAAS,UAAAE,MAAM,EAAI;AACzC,QAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC,OAAOA,MAAM,CAAC/E,MAAP,GAAgB,CAAvB;AAChC,WAAO,IAAP;AACD,GAHuB,CAAxB,CADsC,CAKtC;;;AACA,SAAO,CAACxB,QAAQ,CAACsG,QAAD,CAAT,cAA0BlG,WAAW,CAACoG,SAAZ,CAAsBF,QAAtB,CAA1B,IAA8D,EAArE;AACD,CAPM,C,CASP;;AACA,OAAO,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,CAACC,QAAD,EAAWC,MAAX,EAAmBC,KAAnB,EAA0BC,KAA1B,EAAoC;AAC/D;AACA,MAAMC,OAAO,GAAG;AACdJ,IAAAA,QAAQ,EAARA,QADc;AAEdC,IAAAA,MAAM,EAANA;AAFc,GAAhB,CAF+D,CAM/D;;AACA,MAAIC,KAAJ,EAAWE,OAAO,CAACF,KAAR,GAAgBA,KAAhB;AACX,MAAIC,KAAJ,EAAWC,OAAO,CAACD,KAAR,GAAgBA,KAAhB,CARoD,CAS/D;;AACA,SAAOC,OAAP;AACD,CAXM;AAaP;;;;;;;AAMA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACxF,MAAD,EAASyF,IAAT,EAAkB;AAC1C,WAASC,OAAT,CAAkB1F,MAAlB,EAA0ByF,IAA1B,EAAgC;AAC9B,WAAO9G,UAAU,CACfqB,MADe,EAEf,UAAU2F,MAAV,EAAkBL,KAAlB,EAAyBxE,GAAzB,EAA8B;AAC5B,UAAI,CAACpC,QAAQ,CAAC4G,KAAD,EAAQG,IAAI,CAAC3E,GAAD,CAAZ,CAAb,EAAiC;AAC/B6E,QAAAA,MAAM,CAAC7E,GAAD,CAAN,GACEvC,SAAS,CAAC+G,KAAD,CAAT,IAAoB/G,SAAS,CAACkH,IAAI,CAAC3E,GAAD,CAAL,CAA7B,GACI4E,OAAO,CAACJ,KAAD,EAAQG,IAAI,CAAC3E,GAAD,CAAZ,CADX,GAEIwE,KAHN;AAID;AACF,KATc,EAUfnF,MAAM,CAACyF,MAAP,CAAc,IAAd,CAVe,CAAjB;AAYD;;AACD,SAAOF,OAAO,CAAC1F,MAAD,EAASyF,IAAT,CAAd;AACD,CAhBM;AAkBP;;;;;;;AAMA,OAAO,IAAMI,aAAa,GAAG,SAAhBA,aAAgB,CAAC7F,MAAD,EAASyF,IAAT,EAAkB;AAC7C,SAAO,CAAChH,QAAQ,CAAC+G,UAAU,CAACxF,MAAD,EAASyF,IAAT,CAAX,CAAhB;AACD,CAFM;AAIP,IAAMK,gBAAgB,GAAGC,KAAK,GAC3BC,IADsB,CACjB,GADiB,EAEtBC,WAFsB,CAEV,EAFU,CAAzB,C,CAEmB;;AAEnB,OAAO,IAAMC,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,iBAAMC,KAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,oCACHA,KADG,MACjBC,UADiB;;AAAA,gBAGnBA,UAHmB;AAAA;AAAA;AAAA;;AAAA,kBAIhB,IAAIlC,KAAJ,CAAU,2DAAV,CAJgB;;AAAA;AAOlBmC,YAAAA,IAPkB,GAOXD,UAAU,CAACC,IAAX,GACTP,gBAAgB,CAACQ,OAAjB,CACAF,UAAU,CAACC,IADX,EAEAD,UAAU,CAACC,IAAX,CAAgBE,KAAhB,CAAsBT,gBAAtB,EAAwC,CAAxC,EAA2CnC,WAA3C,EAFA,CADS,GAKT,KAZoB;AAAA;AAAA,mBAcN6C,QAAQ,CAACJ,UAAD,CAdF;;AAAA;AAclBK,YAAAA,GAdkB;AAelBC,YAAAA,WAfkB,GAeJD,GAAG,CAACd,MAAJ,CAAWgB,KAAX,CAAiB,SAAjB,EAA4B,CAA5B,EAA+BL,OAA/B,CAAuC,OAAvC,EAAgD,EAAhD,CAfI;AAgBlBM,YAAAA,MAhBkB,GAgBTH,GAAG,CAACd,MAAJ,CAAWgB,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,CAhBS;AAAA,6CAkBjB;AAAEC,cAAAA,MAAM,EAANA,MAAF;AAAUP,cAAAA,IAAI,EAAJA,IAAV;AAAgBK,cAAAA,WAAW,EAAXA;AAAhB,aAlBiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVR,UAAU;AAAA;AAAA;AAAA,GAAhB;AAqBP,OAAO,IAAMM,QAAQ,GAAG,SAAXA,QAAW,CAAAK,IAAI,EAAI;AAC9B,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAIC,MAAM,GAAG,IAAIC,MAAM,CAACC,UAAX,EAAb;;AACAF,IAAAA,MAAM,CAACG,SAAP,GAAmB,UAAAC,CAAC,EAAI;AACtB,UAAIA,CAAC,CAACC,MAAF,CAASC,KAAb,EAAoB;AAClBP,QAAAA,MAAM,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAN;AACD;;AAEDR,MAAAA,OAAO,CAAC;AACNS,QAAAA,QAAQ,EAAEX,IAAI,CAACR,IADT;AAENV,QAAAA,MAAM,EAAE0B,CAAC,CAACC,MAAF,CAAS3B;AAFX,OAAD,CAAP;AAID,KATD;;AAUAsB,IAAAA,MAAM,CAACQ,aAAP,CAAqBZ,IAArB;AACD,GAbM,CAAP;AAcD,CAfM;AAiBP;;;;AAGA,OAAO,IAAMa,aAAa,GAAG,SAAhBA,aAAgB,CAAAlE,KAAK,EAAI;AACpC,MAAIA,KAAK,GAAG,EAAR,IAAciB,MAAM,CAACjB,KAAD,CAAN,CAAcvD,MAAd,KAAyB,CAA3C,EAA8C;AAC5CuD,IAAAA,KAAK,cAAOA,KAAP,CAAL;AACD;;AACD,SAAO5E,IAAI,CAAC+I,MAAM,CAAC3B,IAAP,CAAY;AAAA,QAAG4B,EAAH,SAAGA,EAAH;AAAA,WAAYA,EAAE,KAAKnD,MAAM,CAACjB,KAAD,CAAzB;AAAA,GAAZ,CAAD,EAAgD,CAAC,OAAD,CAAhD,EAA2D,EAA3D,CAAX;AACD,CALM;AAMP;;;;;;AAKA,OAAO,IAAMqE,SAAS,GAAG,SAAZA,SAAY,CAAAC,cAAc,EAAI;AACzC,MAAMC,WAAW,GAAGhJ,MAAM,EAA1B;AACA,SAAO+I,cAAc,CAACE,IAAf,CAAoBD,WAApB,EAAiC,MAAjC,IAA2C,CAAlD;AACD,CAHM;AAKP;;;;AAGA,OAAO,IAAME,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAOC,OAAP,EAAmB;AAC/C,SAAOD,IAAI,GAAGC,OAAd;AACD,CAFM;AAIP;;;;;;AAKA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,GAAG,EAAI;AAC9BrJ,EAAAA,cAAc,CAACsJ,IAAf,CAAoBD,GAApB;AACD,CAFM;AAIP;;;;AAGA,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAa,GAAM;AAC9BvJ,EAAAA,cAAc,CAACwJ,MAAf;AACD,CAFM;AAIP;;;;;;AAKA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,cAAD,EAAiBC,SAAjB,EAA+B;AACxD,MAAMC,cAAc,GAAG,mBAAIF,cAAJ,EAAoB1D,MAApB,CAA2B6D,OAA3B,CAAvB;;AACA,MAAMC,eAAe,GAAGF,cAAc,CAAC1I,GAAf,CAAmB,UAAA6I,IAAI;AAAA,WAC7CA,IAAI,CAACC,QAAL,CAAcC,IAAd,CAAmBN,SAAnB,CAD6C;AAAA,GAAvB,CAAxB;AAGA,MAAMO,uBAAuB,GAAGJ,eAAe,CAACK,KAAhB,CAAsB,UAAAC,KAAK;AAAA,WAAIA,KAAJ;AAAA,GAA3B,CAAhC;AACA,SAAOF,uBAAP;AACD,CAPM;AASP;;;;AAGA,OAAO,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAAAC,IAAI,EAAI;AACjC,MAAMC,SAAS,GAAG,aAAlB;AACA,MAAMC,EAAE,GAAGC,OAAO,CAACC,GAAR,CAAYC,qBAAvB;AACA,MAAM7I,GAAG,GAAG2I,OAAO,CAACC,GAAR,CAAYE,cAAxB;AACA,MAAMC,YAAY,GAAG3C,MAAM,CAAC4C,IAAP,CAAYR,IAAZ,CAArB;AAEA,MAAMS,MAAM,GAAG9K,MAAM,CAAC+K,cAAP,CAAsBT,SAAtB,EAAiCzI,GAAjC,EAAsC0I,EAAtC,CAAf;AACA,MAAIS,SAAS,GAAGF,MAAM,CAACG,MAAP,CAAcL,YAAd,CAAhB;AAEAI,EAAAA,SAAS,GAAGE,MAAM,CAACC,MAAP,CAAc,CAACH,SAAD,EAAYF,MAAM,CAACM,KAAP,EAAZ,CAAd,CAAZ;AAEA,SAAOJ,SAAS,CAACxH,QAAV,CAAmB,QAAnB,EAA6B6H,IAA7B,EAAP;AACD,CAZM;AAcP;;;;;;;AAMA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAC5B,SAAD,EAAYS,KAAZ;AAAA,SAAsB,UAAAoB,KAAK,EAAI;AACzD,QAAMlF,KAAK,GAAGkF,KAAK,IAAIA,KAAK,CAACC,WAAf,GAA6BD,KAAK,CAAClD,MAAN,CAAahC,KAA1C,GAAkDkF,KAAhE;AACA7B,IAAAA,SAAS,CAAC+B,QAAV,qBACGtB,KADH,EACW9D,KADX;AAGD,GAL2B;AAAA,CAArB;AAOP;;;;;;AAKA,OAAO,IAAMqF,aAAa,GAAG,SAAhBA,aAAgB,QAAkB;AAAA,MAAfC,QAAe,SAAfA,QAAe;AAC7C,SAAOA,QAAQ,CACZ1K,GADI,CACA,UAAA2K,OAAO;AAAA,WAAK;AACfvF,MAAAA,KAAK,EAAEuF,OAAO,CAACC,eADA;AAEfzF,MAAAA,KAAK,EAAEwF,OAAO,CAACE;AAFA,KAAL;AAAA,GADP,EAKJ/F,MALI,CAKG,UAAA6F,OAAO;AAAA,WAAIA,OAAO,CAACxF,KAAZ;AAAA,GALV,CAAP;AAMD,CAPM;AASP;;;;;;AAKA,OAAO,IAAM2F,UAAU,GAAG,SAAbA,UAAa,QAAe;AAAA,MAAZC,KAAY,SAAZA,KAAY;AACvC,SAAOA,KAAK,CACT/K,GADI,CACA,UAAA2K,OAAO;AAAA,WAAK;AACfvF,MAAAA,KAAK,EAAEuF,OAAO,CAACK,SADA;AAEf7F,MAAAA,KAAK,EAAEwF,OAAO,CAACxE;AAFA,KAAL;AAAA,GADP,EAKJrB,MALI,CAKG,UAAA6F,OAAO;AAAA,WAAIA,OAAO,CAACxF,KAAZ;AAAA,GALV,CAAP;AAMD,CAPM;AASP,OAAO,IAAM8F,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,MAAM,EAAI;AACzC,SAAOA,MAAM,CAAC9E,OAAP,CAAe,IAAf,EAAqB,GAArB,CAAP;AACD,CAFM;AAIP,OAAO,IAAM+E,WAAW,GAAG,SAAdA,WAAc,GAAM;AAC/BnE,EAAAA,MAAM,CAACoE,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACD,CAFM;AAGP,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,QAAD,EAAWnD,GAAX,EAAgBvH,GAAhB,EAAwB;AACvD,MAAI,CAAC0K,QAAQ,CAACxF,IAAT,CAAc,UAAAyF,OAAO;AAAA,WAAIA,OAAO,CAAC3K,GAAR,KAAgBA,GAApB;AAAA,GAArB,CAAL,EAAoD;AAClD,WAAO9B,cAAc,CAACsJ,IAAf,CAAoBD,GAApB,CAAP;AACD;AACF,CAJM;AAMP;;;;;;AAKA,OAAO,IAAMqD,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAQhD,SAAR,EAAsB;AAChDA,EAAAA,SAAS,CAAC+B,QAAV,CAAmB,UAAAkB,KAAK;AAAA,+BAAQD,KAAR,EAAgB,CAACC,KAAK,CAACD,KAAD,CAAtB;AAAA,GAAxB;AACD,CAFM;AAIP,OAAO,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AACpC,UAAQpC,OAAO,CAACC,GAAR,CAAYoC,UAApB;AACE,SAAK,yBAAL;AACE,aAAO,YAAP;;AACF,SAAK,iCAAL;AACE,aAAO,SAAP;;AACF;AACE,aAAO,OAAP;AANJ;AAQD,CATM;AAWP;;;;;AAIA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAX,MAAM,EAAI;AACvC,SAAOA,MAAM,CAAC9E,OAAP,CAAe,OAAf,EAAwB,EAAxB,CAAP;AACD,CAFM;AAIP;;;;AAGA,OAAO,IAAM0F,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AACtC,MAAMC,aAAa,GAAGJ,gBAAgB,EAAtC;AACA,SAAOI,aAAa,KAAK,YAAlB,IAAkCA,aAAa,KAAK,SAA3D;AACD,CAHM;AAKP;;;;AAGA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAd,MAAM,EAAI;AAClC,SAAOA,MAAM,CAAC7E,KAAP,CAAa,KAAb,CAAP;AACD,CAFM;AAIP;;;;AAGA,OAAO,IAAM4F,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAf,MAAM,EAAI;AACxC,SAAOA,MAAM,CAAC7E,KAAP,CAAa,WAAb,CAAP;AACD,CAFM;AAIP;;;;AAGA,OAAO,IAAM6F,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAAhB,MAAM,EAAI;AAC9C,MAAIA,MAAM,CAACnL,MAAP,IAAiB,CAArB,EAAwB;AACtB,WAAO,IAAP;AACD;AACF,CAJM;AAMP;;;;AAGA,OAAO,IAAMoM,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAC1D,SAAD,EAAYS,KAAZ,EAAsB;AAC1DT,EAAAA,SAAS,CAAC+B,QAAV,CAAmB,UAAAkB,KAAK;AAAA,+BAAQxC,KAAR,EAAgB,CAACwC,KAAK,CAACxC,KAAD,CAAtB;AAAA,GAAxB;AACD,CAFM;AAIP,OAAO,IAAMkD,yBAAyB,GAAG,SAA5BA,yBAA4B,CAAAC,MAAM,EAAI;AACjD,MAAMC,IAAI,GAAGC,cAAc,EAA3B;AACA,SAAOF,MAAM,KAAK,WAAX,IAA0BC,IAAI,KAAK,MAA1C;AACD,CAHM;AAKP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAAA,8BACjBvN,YAAY,CAACwN,gBAAb,EADiB;AAAA,MAC1BF,IAD0B,yBAC1BA,IAD0B;;AAElC,SAAOA,IAAP;AACD,CAHM;AAKP,OAAO,IAAMG,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AAAA,+BACnBzN,YAAY,CAACwN,gBAAb,EADmB;AAAA,MAChC9E,EADgC,0BAChCA,EADgC;AAAA,MAC5B4E,IAD4B,0BAC5BA,IAD4B;;AAExC,MAAIA,IAAI,KAAK,cAAb,EAA6B;AAC3BI,IAAAA,WAAW,CAACC,oBAAZ,CAAiCjF,EAAjC;AACD;AACF,CALM;AAOP,OAAO,IAAMkF,WAAW,GAAG,SAAdA,WAAc,GAAM;AAC/B,UAAQL,cAAc,EAAtB;AACE,SAAK,MAAL;AACE,aAAO,UAAP;;AACF,SAAK,cAAL;AACA,SAAK,SAAL;AACE,aAAO,SAAP;;AACF,SAAK,kBAAL;AACE,aAAO,mBAAP;AAPJ;AASD,CAVM","sourcesContent":["import _camelCase from 'lodash/camelCase'\nimport _snakeCase from 'lodash/snakeCase'\nimport _isArray from 'lodash/isArray'\nimport _isObject from 'lodash/isObject'\nimport _pickBy from 'lodash/pickBy'\nimport _isEmpty from 'lodash/isEmpty'\nimport _isEqual from 'lodash/isEqual'\nimport _transform from 'lodash/transform'\nimport _get from 'lodash/get'\n import queryString from 'query-string'\nimport accounting from 'accounting'\nimport moment from 'moment'\n import { browserHistory } from 'react-router'\nimport crypto from 'crypto'\n\nimport SessionStore from 'stores/session'\n\n\n// Files\nexport const FILE_TEMPLATE_URL =\n  'https://s3-us-west-2.amazonaws.com/enconta-public/environment/templates/template.xlsx'\n\n// Date formats\nexport const FULL_DATE_FORMAT = 'YYYY-MM-DDTHH:mm:ss'\nexport const DATE_FORMAT = 'YYYY-MM-DD'\nexport const PERIOD_FORMAT = 'YYYY-MM'\n\n// Binds the passed functions to the passed 'this'\nexport const binder = (self, ...funcs) => {\n  funcs.forEach(func => {\n    self[func] = self[func].bind(self)\n  })\n}\n\n// Funcion para convertir las keys de un objeto o array de objetos a snake o camel case\n// dependiendo de la funcion que sea pasada,\n// usar los metodos snakeCase y camelCase declarados abajo\nconst caseConvertor = caseFunction => {\n  return function convertCase (object) {\n    // TODO: mejorar esta funcion con _mapKeys\n    if (_isArray(object)) {\n      // Si es un array vacio o cuyo primer elemento no sea un objeto, lo regresa tal cual\n      if (object.length > 0 && _isObject(object[0]) === false) return object\n      return object.map(convertCase) // Si es un array, regresa un array al que se le aplica esta funcion a cada elemento\n    }\n    return Object.keys(object) // Saca las keys del objeto en un array\n      .reduce(\n        (acc, curr) =>\n          Object.assign(acc, {\n            // Regresa un objeto al que acumulativamente se le asigna un elemento por cada key mapeada\n            [caseFunction(curr)]: _isObject(object[curr]) // Regresa el key en snake o camel case dependiendo de la funcion utilizada\n              ? convertCase(object[curr]) // Si el valor de esa key es otro objeto, se le aplica esta funcion a ese objeto\n              : object[curr] // Si no, se le asigna el valor que ya tenia en el objeto original\n          }),\n        {}\n      )\n  }\n}\n\nexport const camelCase = caseConvertor(_camelCase)\nexport const snakeCase = caseConvertor(_snakeCase)\n\n// Recursively remove all null properties from an object\n// NOTE: This modifies the original object, make a copy instead <- this can be achieved with a reduce,\n// check the convert case function to implement it\n// - Removes values set to null\n// - Removes empty arrays\n// - Recursively iterates through objects\nexport const removeEmpty = obj => {\n  Object.entries(obj).forEach(([key, val]) => {\n    if (_isArray(val) && val !== null && val.length === 0) delete obj[key]\n    else if (_isObject(val)) removeEmpty(val)\n    else if (val === null) delete obj[key]\n    // Check if parent is empty after initial deleting, if so, delete the parent\n    if (_isObject(val) && Object.keys(val).length === 0) delete obj[key]\n    if (_isArray(val) && val !== null && val.length === 0) delete obj[key]\n  })\n  return obj\n}\n\nexport const currency = (n = 0) => {\n  return isNaN(n) ? n : `$${parseFloat(n).toFixed(2)}`\n}\n\n// Some amounts require to be sent in cents\n// Required by our API\nexport const amountToCents = amount => {\n  return Math.round(accounting.unformat(amount) * 100)\n}\n\n// Round numbers using format (don't use native JS rounding, it's not as precise)\n// Then format as cents (multiply by 100)\n// Required by our API\nexport const formatCents = amount => {\n  return Number(\n    accounting.toFixed(\n      Number(accounting.unformat(accounting.formatNumber(amount, 2))) * 100\n    )\n  )\n}\n\n// Some amounts require to be sent in cents\n// Required by our API\nexport const taxRateFormat = tax => {\n  return accounting.formatMoney(tax / 100, '', 6, '')\n}\n\n// Count days between two dates\nexport const countDays = (startDate, endDate) => {\n  let days = 0\n  while (moment(startDate).isBefore(endDate)) {\n    startDate = moment(startDate).add(1, 'day')\n    days++\n  }\n  return days\n}\n\nexport const formatNumberToString = (num, minChars) => {\n  // Regrsa un numero convertirdo a string con los zeros correspondientes\n  // para lograr el minimo de caracteres pasados en el atributo\n  return num.toString().length < minChars\n    ? formatNumberToString(`0${num}`, minChars)\n    : num.toString()\n}\n\n// Return the absolute value of a number\nexport const absolutify = num => Math.abs(accounting.unformat(num))\n\n// Return the amount formated as currency with the $ symbol\nexport const formatCurrency = amount => accounting.formatMoney(amount, '$ ')\n\n// Format date as API requires when creating new invoices\nexport const formatDateInvoice = date => moment(date).format(FULL_DATE_FORMAT)\n\n// Return string with human dates\nexport const prettyDate = (\n  d,\n  dateInputFormat = DATE_FORMAT,\n  shortMonth = false,\n  lowerCaseMonth = true,\n  separator = ' de '\n) => {\n  // Revisar fechas inválidas\n  if (\n    typeof d === 'undefined' ||\n    d === null ||\n    !moment(d, dateInputFormat).isValid()\n  ) {\n    return ''\n  }\n  const year = moment(d, dateInputFormat).format('YYYY')\n  // Meses\n  let month = shortMonth\n    ? MONTHS_SHORT[Number(moment(d, dateInputFormat).format('M')) - 1]\n    : MONTHS_CATALOG[Number(moment(d, dateInputFormat).format('M')) - 1]\n  if (lowerCaseMonth) month = month.toLowerCase()\n  return `${moment(d, dateInputFormat).format(\n    'D'\n  )}${separator}${month}${separator}${year}`\n}\n\nexport const getHour = (d, showSeconds = false) => {\n  let format = showSeconds ? 'HH:mm:ss' : 'HH:mm'\n  return moment(d).format(format)\n}\n\n// Return string with human dates (for periods only)\nexport const prettyPeriod = (\n  d,\n  dateInputFormat = DATE_FORMAT,\n  shortMonth = false,\n  separator = ' de '\n) => {\n  // Revisar fechas inválidas\n  if (\n    typeof d === 'undefined' ||\n    d === null ||\n    !moment(d, dateInputFormat).isValid()\n  ) {\n    return ''\n  }\n  // Meses\n  let month = shortMonth\n    ? MONTHS_SHORT[Number(moment(d, dateInputFormat).format('M')) - 1]\n    : MONTHS_CATALOG[Number(moment(d, dateInputFormat).format('M')) - 1]\n  return `${month}${separator}${moment(d, dateInputFormat).format('YYYY')}`\n}\n\nexport const prettyDiffPeriod = (\n  initialDate,\n  finalDate,\n  shortMonth,\n  separator = '-'\n) => {\n  if (!moment(initialDate).isValid() || !moment(finalDate).isValid()) {\n    throw new Error('prettyDiffPeriod recibe dos instancias de moment validas')\n  }\n\n  const initialMonth = shortMonth\n    ? MONTHS_SHORT[Number(moment(initialDate).format('M')) - 1]\n    : MONTHS_CATALOG[Number(moment(initialDate).format('M')) - 1]\n\n  const finalMonth = shortMonth\n    ? MONTHS_SHORT[Number(moment(finalDate).format('M')) - 1]\n    : MONTHS_CATALOG[Number(moment(finalDate).format('M')) - 1]\n  return `${initialMonth} ${separator} ${finalMonth} ${finalDate.format(\n    'YYYY'\n  )}`\n}\n\n// Leftpad\nexport const leftpad = (str, len, pad = ' ') => {\n  str = String(str)\n  let i = -1\n  len = len - str.length\n  while (++i < len) {\n    str = pad + str\n  }\n  return str\n}\n\n// Return a formatted amount\nexport const money = (amount, symbol = '') =>\n  accounting.formatMoney(amount, symbol, 2)\n\n// Return a query string for the url filters and pages, receives an object, if empty object is received it returns an empty string\nexport const stringifyQuery = params => {\n  const _filters = _pickBy(params, filter => {\n    if (typeof filter === 'string') return filter.length > 0\n    return true\n  })\n  // Add the query params\n  return !_isEmpty(_filters) ? `?${queryString.stringify(_filters)}` : ''\n}\n\n// Creates a custom object used to call the GA library\nexport const createGaEvent = (category, action, label, value) => {\n  // Create the base obj\n  const gaEvent = {\n    category,\n    action\n  }\n  // Return only option params in provided\n  if (label) gaEvent.label = label\n  if (value) gaEvent.value = value\n  // Just return the created object\n  return gaEvent\n}\n\n/**\n * Deep diff between two object, using lodash\n * @param  {Object} object Object compared\n * @param  {Object} base   Object to compare with\n * @return {Object}        Return a new object who represent the diff\n */\nexport const difference = (object, base) => {\n  function changes (object, base) {\n    return _transform(\n      object,\n      function (result, value, key) {\n        if (!_isEqual(value, base[key])) {\n          result[key] =\n            _isObject(value) && _isObject(base[key])\n              ? changes(value, base[key])\n              : value\n        }\n      },\n      Object.create(null)\n    )\n  }\n  return changes(object, base)\n}\n\n/**\n * Return boolean if has Deep diff between two object, using lodash\n * @param  {Object} object Object compared\n * @param  {Object} base   Object to compare with\n * @return {Object}        Return a new object who represent the diff\n */\nexport const hasDifference = (object, base) => {\n  return !_isEmpty(difference(object, base))\n}\n\nconst extensionFileRex = VerEx()\n  .find('.')\n  .anythingBut('') // Define the regex to find everything after the '.' (including the '.')\n\nexport const formatFile = async files => {\n  const [fileUpload] = files\n\n  if (!fileUpload) {\n    throw new Error('No ha podido leer el archivo, porfavor inténtalo de nuevo')\n  }\n\n  const name = fileUpload.name\n    ? extensionFileRex.replace(\n      fileUpload.name,\n      fileUpload.name.match(extensionFileRex)[0].toLowerCase()\n    )\n    : 'key'\n\n  const f64 = await toBase64(fileUpload)\n  const contentType = f64.result.split(';base64')[0].replace('data:', '')\n  const file64 = f64.result.split(',')[1]\n\n  return { file64, name, contentType }\n}\n\nexport const toBase64 = file => {\n  return new Promise((resolve, reject) => {\n    let reader = new window.FileReader()\n    reader.onloadend = e => {\n      if (e.target.error) {\n        reject(e.target.error)\n      }\n\n      resolve({\n        fileName: file.name,\n        result: e.target.result\n      })\n    }\n    reader.readAsDataURL(file)\n  })\n}\n\n/**\n * Return the month name and it adjust the month number with two numbers\n */\nexport const getMonthLabel = month => {\n  if (month < 10 && String(month).length === 1) {\n    month = `0${month}`\n  }\n  return _get(MONTHS.find(({ id }) => id === String(month)), ['label'], '')\n}\n/**\n *Returns true If date is expired. If date is 1 or more days after the expiration date\n *Returns false if date is equal or is many days before the expiration date.\n * @param {Moment} expirationDate\n */\nexport const isExpired = expirationDate => {\n  const currentDate = moment()\n  return expirationDate.diff(currentDate, 'days') < 0\n}\n\n/** Sort numbers, it helps to sort receiving the smaller number and the greater number, and\n sorted with respect to all the different elements\n */\nexport const ascendingOrder = (less, greater) => {\n  return less - greater\n}\n\n/**\n * Handle links to specific URL\n * Ir works for goback when the current view has paginator\n * @param {*} url\n */\nexport const handleURL = url => {\n  browserHistory.push(url)\n}\n\n/**\n * It return to previous view if the current view doesn't has paginator\n */\nexport const handleBack = () => {\n  browserHistory.goBack()\n}\n\n/**\n * It's used to validate required fields in forms\n * @param {Set} requiredFields\n * @param {object} component\n */\nexport const validateAll = (requiredFields, component) => {\n  const nonFalsyFields = [...requiredFields].filter(Boolean)\n  const validatedFields = nonFalsyFields.map(form =>\n    form.validate.call(component)\n  )\n  const allValidationsSucceeded = validatedFields.every(field => field)\n  return allValidationsSucceeded\n}\n\n/**\n * It's used to cipher text\n */\nexport const encryptData = text => {\n  const algorithm = 'aes-256-cbc'\n  const iv = process.env.INITIALIZATION_VECTOR\n  const key = process.env.ENCRYPTION_KEY\n  const textToBase64 = window.btoa(text)\n\n  const cipher = crypto.createCipheriv(algorithm, key, iv)\n  let encrypted = cipher.update(textToBase64)\n\n  encrypted = Buffer.concat([encrypted, cipher.final()])\n\n  return encrypted.toString('base64').trim()\n}\n\n/* Generic onChange to handle the inputs for general data form\n * @private\n * @typedef {React.ChangeEvent<HTMLInputElement> | Object | string} Input\n * @param {string} field - Input id to save\n * @returns {function(Input): void} - Value will save in the state\n */\nexport const handleInputs = (component, field) => event => {\n  const value = event && event.nativeEvent ? event.target.value : event\n  component.setState({\n    [field]: value\n  })\n}\n\n/**\n * This function helps the SAT Product Code Select Searcher used in Invoices and Inventories\n * It rename the properties so they can be used in the Select Field\n * @param {array} obj.products\n */\nexport const parseProducts = ({ products }) => {\n  return products\n    .map(element => ({\n      value: element.clave_prod_serv,\n      label: element.description\n    }))\n    .filter(element => element.label)\n}\n\n/**\n * This function helps the SAT Units Code Select Searcher used in Invoices and Inventories\n * It rename the properties so they can be used in the Select Field\n * @param {array} obj.units\n */\nexport const parseUnits = ({ units }) => {\n  return units\n    .map(element => ({\n      value: element.unit_code,\n      label: element.name\n    }))\n    .filter(element => element.label)\n}\n\nexport const replaceUnderScore = string => {\n  return string.replace(/_/g, ' ')\n}\n\nexport const resetScroll = () => {\n  window.scrollTo(0, 0)\n}\nexport const checkFeatureFlags = (features, url, key) => {\n  if (!features.find(feature => feature.key === key)) {\n    return browserHistory.push(url)\n  }\n}\n\n/**\n *\n * @param {string} modal\n * @param {object} component\n */\nexport const handleModals = (modal, component) => {\n  component.setState(state => ({ [modal]: !state[modal] }))\n}\n\nexport const getCurrentServer = () => {\n  switch (process.env.API_SERVER) {\n    case 'https://api.enconta.com':\n      return 'production'\n    case 'https://api-staging.enconta.com':\n      return 'staging'\n    default:\n      return 'local'\n  }\n}\n\n/**\n * Helps avoiding to type an space at the beginning of the input and avoid to send empty string to DB\n * @param {string} string\n */\nexport const avoidBlankSpace = string => {\n  return string.replace(/^\\s+/g, '')\n}\n\n/*\n * Helps to know if the warning advertisement(production or staging) active\n */\nexport const isWarningActivated = () => {\n  const currentServer = getCurrentServer()\n  return currentServer === 'production' || currentServer === 'staging'\n}\n\n/*\n * Checks if an specific string contains a number\n */\nexport const hasANumber = string => {\n  return string.match(/\\d/g)\n}\n\n/*\n * Checks if an specific string contains capital letter\n */\nexport const hasCapitalLetter = string => {\n  return string.match('.*[A-Z].*')\n}\n\n/*\n * Checks if the password contains the correct length\n */\nexport const getPasswordLengthValid = string => {\n  if (string.length >= 6) {\n    return true\n  }\n}\n\n/*\n * Toggles state to controle password visibility\n */\nexport const toggleShowHidePassword = (component, field) => {\n  component.setState(state => ({ [field]: !state[field] }))\n}\n\nexport const isDisabledInvoiceLabeling = status => {\n  const plan = getClientsPlan()\n  return status === 'cancelled' || plan === 'free'\n}\n\nexport const getClientsPlan = () => {\n  const { plan } = SessionStore.getCurrentEntity()\n  return plan\n}\n\nexport const askRemainingPlanDays = () => {\n  const { id, plan } = SessionStore.getCurrentEntity()\n  if (plan === 'free_premium') {\n    PlanActions.getPlanRemainingDays(id)\n  }\n}\n\nexport const getPlanName = () => {\n  switch (getClientsPlan()) {\n    case 'free':\n      return 'Freemium'\n    case 'free_premium':\n    case 'premium':\n      return 'Premium'\n    case 'integral_service':\n      return 'Servicio integral'\n  }\n}\n"]},"metadata":{},"sourceType":"module"}