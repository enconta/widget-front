{"ast":null,"code":"import _toConsumableArray from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/usuario-rtd/Desktop/widget-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/editUser/general/editingForm/index.js\";\nimport React, { Component } from 'react';\nimport update from 'immutability-helper';\nimport { browserHistory } from 'react-router';\nimport EditUserActions from 'actions/editUser';\nimport EditUserStore from 'stores/editUser';\nimport TextField from 'shared/textField';\nimport Button from 'shared/button';\nimport NotificationsActions from 'actions/notifications'; // Set where all the required field refs are going to be\n// stored so we can validate them all when submit\n\nvar requiredAccountFields = new Set();\n\nfunction getCurrentState() {\n  var userData = EditUserStore.getUserData();\n  return {\n    userData: userData\n  };\n}\n\nvar EditGeneral =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditGeneral, _Component);\n\n  function EditGeneral() {\n    var _this;\n\n    _classCallCheck(this, EditGeneral);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditGeneral).call(this));\n    _this.state = Object.assign({}, getCurrentState());\n    _this._onChange = _this._onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(EditGeneral, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Adds listener, when the Store changes, trigger the _onChange callback func\n      EditUserStore.addChangeListener(this._onChange);\n      EditUserActions.getUserData();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // Removes the listener to avoid memory leaks\n      EditUserStore.removeChangeListener(this._onChange);\n    }\n  }, {\n    key: \"_onChange\",\n    value: function _onChange() {\n      // When the store changes, the state goes to it and pulls the updated data\n      // then sets it so the component rerenders\n      var state = getCurrentState();\n      this.setState(state);\n    } // Sets the new user name\n\n  }, {\n    key: \"onChangeUserFirstName\",\n    value: function onChangeUserFirstName(e) {\n      this.setState({\n        userData: update(this.state.userData, {\n          firstName: {\n            $set: e.target.value\n          }\n        })\n      });\n    } // Sets the new user lastName\n\n  }, {\n    key: \"onChangeUserLastName\",\n    value: function onChangeUserLastName(e) {\n      this.setState({\n        userData: update(this.state.userData, {\n          lastName: {\n            $set: e.target.value\n          }\n        })\n      });\n    } // Sets the new user email\n\n  }, {\n    key: \"onChangeUserEmail\",\n    value: function onChangeUserEmail(e) {\n      this.setState({\n        userData: update(this.state.userData, {\n          email: {\n            $set: e.target.value\n          }\n        })\n      });\n    } // Iterates over required fields and validates every one of them\n    // Then it returns true if all validations succeedeed, else false.\n\n  }, {\n    key: \"validateAccountFields\",\n    value: function validateAccountFields() {\n      var _this2 = this;\n\n      return _toConsumableArray(requiredAccountFields) // Converts the Set() into an array\n      .filter(Boolean) // Filters the array from any falsy value\n      .map(function (form) {\n        return form.validate.call(_this2);\n      }) // Calls the validate() method on each form\n      .every(function (e) {\n        return e;\n      }); // Checks if all validations suceeded\n    } // Sends new user data to server\n    // Validates: name, lastName and email before sending\n\n  }, {\n    key: \"sendData\",\n    value: function sendData() {\n      if (this.validateAccountFields()) {\n        var data = {\n          profile: {\n            first_name: this.state.userData.firstName,\n            last_name: this.state.userData.lastName,\n            email: this.state.userData.email\n          }\n        };\n        EditUserActions.setUserData(data);\n        NotificationsActions.success('Usuario actualizado satisfactoriamente');\n        this.returnToListing();\n      }\n    } // Clears the current Document and redirects to the documents listing\n\n  }, {\n    key: \"returnToListing\",\n    value: function returnToListing() {\n      this.setState({\n        requestInProgress: false\n      });\n      this.cleanUser();\n      browserHistory.push('/mi-cuenta/general');\n    } // Cleans user fields, called by cancel button\n\n  }, {\n    key: \"cleanUser\",\n    value: function cleanUser() {\n      this.setState({\n        userData: getCurrentState().userData\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var userData = this.state.userData;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Button, {\n        buttonStyle: \"link\",\n        icon: \"chevron-double-left\",\n        onClick: this.returnToListing.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Volver\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        className: \"subheader-green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Editar Datos Generales\"), React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"Nombre\",\n        placeholder: \"Nombre\",\n        value: userData.firstName,\n        onChange: this.onChangeUserFirstName.bind(this),\n        minLength: 2,\n        ref: function ref(r) {\n          return requiredAccountFields.add(r);\n        },\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"Apellido\",\n        placeholder: \"Apellido\",\n        value: userData.lastName,\n        onChange: this.onChangeUserLastName.bind(this),\n        minLength: 2,\n        ref: function ref(r) {\n          return requiredAccountFields.add(r);\n        },\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"Correo electr\\xF3nico\",\n        placeholder: \"Correo electr\\xF3nico\",\n        value: userData.email,\n        onChange: this.onChangeUserEmail.bind(this),\n        type: \"email\",\n        ref: function ref(r) {\n          return requiredAccountFields.add(r);\n        },\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"caption required\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"* Campos obligatorios\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"flex-end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Button, {\n        icon: \"cancel\",\n        onClick: this.returnToListing.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Cancelar\"), React.createElement(Button, {\n        buttonStyle: \"primary\",\n        icon: \"content-save\",\n        onClick: this.sendData.bind(this),\n        loading: this.state.requestInProgress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"Guardar\")));\n    }\n  }]);\n\n  return EditGeneral;\n}(Component);\n\nexport default EditGeneral;","map":{"version":3,"sources":["/Users/usuario-rtd/Desktop/widget-front/src/components/app/views/editUser/general/editingForm/index.js"],"names":["React","Component","update","browserHistory","EditUserActions","EditUserStore","TextField","Button","NotificationsActions","requiredAccountFields","Set","getCurrentState","userData","getUserData","EditGeneral","state","Object","assign","_onChange","bind","addChangeListener","removeChangeListener","setState","e","firstName","$set","target","value","lastName","email","filter","Boolean","map","form","validate","call","every","validateAccountFields","data","profile","first_name","last_name","setUserData","success","returnToListing","requestInProgress","cleanUser","push","onChangeUserFirstName","r","add","onChangeUserLastName","onChangeUserEmail","sendData"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport update from 'immutability-helper'\nimport { browserHistory } from 'react-router'\n\nimport EditUserActions from 'actions/editUser'\nimport EditUserStore from 'stores/editUser'\nimport TextField from 'shared/textField'\nimport Button from 'shared/button'\nimport NotificationsActions from 'actions/notifications'\n\n// Set where all the required field refs are going to be\n// stored so we can validate them all when submit\nconst requiredAccountFields = new Set()\n\nfunction getCurrentState () {\n  let userData = EditUserStore.getUserData()\n  return { userData }\n}\n\nclass EditGeneral extends Component {\n  constructor () {\n    super()\n    this.state = Object.assign({}, getCurrentState())\n    this._onChange = this._onChange.bind(this)\n  }\n\n  componentDidMount () {\n    // Adds listener, when the Store changes, trigger the _onChange callback func\n    EditUserStore.addChangeListener(this._onChange)\n    EditUserActions.getUserData()\n  }\n\n  componentWillUnmount () {\n    // Removes the listener to avoid memory leaks\n    EditUserStore.removeChangeListener(this._onChange)\n  }\n\n  _onChange () {\n    // When the store changes, the state goes to it and pulls the updated data\n    // then sets it so the component rerenders\n    let state = getCurrentState()\n    this.setState(state)\n  }\n\n  // Sets the new user name\n  onChangeUserFirstName (e) {\n    this.setState({\n      userData: update(this.state.userData, {\n        firstName: { $set: e.target.value }\n      })\n    })\n  }\n\n  // Sets the new user lastName\n  onChangeUserLastName (e) {\n    this.setState({\n      userData: update(this.state.userData, {\n        lastName: { $set: e.target.value }\n      })\n    })\n  }\n\n  // Sets the new user email\n  onChangeUserEmail (e) {\n    this.setState({\n      userData: update(this.state.userData, { email: { $set: e.target.value } })\n    })\n  }\n\n  // Iterates over required fields and validates every one of them\n  // Then it returns true if all validations succeedeed, else false.\n  validateAccountFields () {\n    return [...requiredAccountFields] // Converts the Set() into an array\n      .filter(Boolean) // Filters the array from any falsy value\n      .map(form => form.validate.call(this)) // Calls the validate() method on each form\n      .every(e => e) // Checks if all validations suceeded\n  }\n\n  // Sends new user data to server\n  // Validates: name, lastName and email before sending\n  sendData () {\n    if (this.validateAccountFields()) {\n      let data = {\n        profile: {\n          first_name: this.state.userData.firstName,\n          last_name: this.state.userData.lastName,\n          email: this.state.userData.email\n        }\n      }\n      EditUserActions.setUserData(data)\n      NotificationsActions.success('Usuario actualizado satisfactoriamente')\n      this.returnToListing()\n    }\n  }\n  // Clears the current Document and redirects to the documents listing\n  returnToListing () {\n    this.setState({ requestInProgress: false })\n    this.cleanUser()\n    browserHistory.push('/mi-cuenta/general')\n  }\n\n  // Cleans user fields, called by cancel button\n  cleanUser () {\n    this.setState({\n      userData: getCurrentState().userData\n    })\n  }\n\n  render () {\n    let { userData } = this.state\n    return (\n      <div>\n        <Button\n          buttonStyle='link'\n          icon='chevron-double-left'\n          onClick={this.returnToListing.bind(this)}\n        >\n          Volver\n        </Button>\n        <br />\n        <br />\n        <h1 className='subheader-green'>Editar Datos Generales</h1>\n        <div className='columns'>\n          <div className='column'>\n            <TextField\n              label='Nombre'\n              placeholder='Nombre'\n              value={userData.firstName}\n              onChange={this.onChangeUserFirstName.bind(this)}\n              minLength={2}\n              ref={r => requiredAccountFields.add(r)}\n              required\n            />\n          </div>\n          <div className='column'>\n            <TextField\n              label='Apellido'\n              placeholder='Apellido'\n              value={userData.lastName}\n              onChange={this.onChangeUserLastName.bind(this)}\n              minLength={2}\n              ref={r => requiredAccountFields.add(r)}\n              required\n            />\n          </div>\n        </div>\n        <div className='columns'>\n          <div className='column'>\n            <TextField\n              label='Correo electrónico'\n              placeholder='Correo electrónico'\n              value={userData.email}\n              onChange={this.onChangeUserEmail.bind(this)}\n              type='email'\n              ref={r => requiredAccountFields.add(r)}\n              required\n            />\n          </div>\n        </div>\n        <br />\n        <div className='caption required'>* Campos obligatorios</div>\n        <br />\n        <div className='flex-end'>\n          <Button icon='cancel' onClick={this.returnToListing.bind(this)}>\n            Cancelar\n          </Button>\n          <Button\n            buttonStyle='primary'\n            icon='content-save'\n            onClick={this.sendData.bind(this)}\n            loading={this.state.requestInProgress}\n          >\n            Guardar\n          </Button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default EditGeneral\n"]},"metadata":{},"sourceType":"module"}