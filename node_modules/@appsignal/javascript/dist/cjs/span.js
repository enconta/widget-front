"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var serializable_1 = require("./serializable");
var stacktrace_1 = require("./utils/stacktrace");
var hashmap_1 = require("./utils/hashmap");
var Span = (function (_super) {
    tslib_1.__extends(Span, _super);
    function Span(span) {
        return _super.call(this, tslib_1.__assign({ timestamp: Math.round(new Date().getTime() / 1000), namespace: "frontend", error: {
                name: "NullError",
                message: "No error has been set",
                backtrace: []
            } }, span)) || this;
    }
    Span.prototype.setAction = function (name) {
        if (!name || typeof name !== "string") {
            return this;
        }
        this._data.action = name;
        return this;
    };
    Span.prototype.setNamespace = function (name) {
        if (!name || typeof name !== "string") {
            return this;
        }
        this._data.namespace = name;
        return this;
    };
    Span.prototype.setError = function (error) {
        if (!error)
            return this;
        this._data.error = {
            name: error.name || "Error",
            message: error.message || "No message given",
            backtrace: stacktrace_1.getStacktrace(error)
        };
        return this;
    };
    Span.prototype.setTags = function (tags) {
        this._data.tags = tslib_1.__assign(tslib_1.__assign({}, this._data.tags), hashmap_1.toHashMapString(tags));
        return this;
    };
    Span.prototype.setParams = function (params) {
        this._data.params = tslib_1.__assign(tslib_1.__assign({}, this._data.params), params);
        return this;
    };
    Span.prototype.setBreadcrumbs = function (breadcrumbs) {
        this._data.breadcrumbs = breadcrumbs;
        return this;
    };
    return Span;
}(serializable_1.Serializable));
exports.Span = Span;
//# sourceMappingURL=span.js.map